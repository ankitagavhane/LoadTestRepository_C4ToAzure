//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twinfield_NewFramework
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using Microsoft.VisualStudio.TestTools.LoadTesting;
    //using MicrosoftServicesTestLabs.Monitor.VSTSUnitTest;
    using System.Drawing;
    using System.Threading;
    using System.Data;

    //[DeploymentItem("Inputdata\\InputData_Create.csv")]
    //[DataSource("DataSource1", "Microsoft.VisualStudio.TestTools.DataSource.CSV", "|DataDirectory|\\InputData_Create.csv", Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.DoNotMoveCursor, Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns, "InputData_Create#csv")]
    //[DataBinding("DataSource1", "InputData_Create#csv", "username", "DataSource1.InputData_Create#csv.username")]
    //[DataBinding("DataSource1", "InputData_Create#csv", "password", "DataSource1.InputData_Create#csv.password")]
    //[DataBinding("DataSource1", "InputData_Create#csv", "CompanyID", "DataSource1.InputData_Create#csv.CompanyID")]
    //[DataBinding("DataSource1", "InputData_Create#csv", "SelectCustomer", "DataSource1.InputData_Create#csv.SelectCustomer")]
    public class CreateInvoice
    {
        WebTest webTest;
        private Dictionary<string, string> localDictionary;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();    //object of webTesRequestPlugin class to access the variables uniquely in each thread.
        private InputTableRecord testRecord;
        public Object assemblyinitializeLock = new Object();
        private WebTestContext _textContext;
        private object virtualuserId;
        private object doLogin;

        public CreateInvoice(WebTest webTest)
        {
            this.webTest = webTest;
            
        }
        public WebTestContext TestContext
        {
            get { return _textContext; }

            set { _textContext = value; }
        }
        //public void PreWebTestEvent(object sender, PreWebTestEventArgs e)
        //{
        //    if (!AssemblyLoad.isInitialized)
        //    {
        //        lock (assemblyinitializeLock)
        //        {
        //            if (!AssemblyLoad.isInitialized)
        //            {
        //                //comment while debugging thats safe
        //                AssemblyLoad.AssemblyInitWeb(_textContext);
        //                this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
        //                this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
        //                this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
        //            }

        //            AssemblyLoad.isInitialized = true;
        //        }
        //    }
        //}

        public IEnumerator<WebTestRequest> GetRequestEnumerator(TwinfieldDBTenant DBTenant,string userDictionaryKey, WebTestRequestPlugin objPlugin)
        {
            var WebBTPrefix = TwinfieldScenarioPrefix.CI_ + DBTenant.ToString() + "_";
            _textContext = webTest.Context;
            _textContext.TryGetValue("doLogin", out doLogin);
            _textContext.TryGetValue("UserId", out virtualuserId);

            SharedThreadData threadData;

            #region DoLogin
            if (Convert.ToBoolean(doLogin))
            {
                webTest.Context.CookieContainer = new System.Net.CookieContainer();

                try
                {
                    localDictionary = CustomDS.Instance.GetNextRowTwinfield(DBTenant, TwinfieldScenarioName.CreateInvoice);
                    
                    threadData = new SharedThreadData(Convert.ToInt32(virtualuserId),this.TestContext);
                    threadData.UserName = localDictionary["UserName"];
                    threadData.Tenant = localDictionary["DBTenant"];
                    threadData.CustomerName = localDictionary["CustomerName"];
                    threadData.hasFullAccess = localDictionary["hasFullAccess"];
                    threadData.Password = AssemblyLoad.Password;
                    threadData.ScenarioPrefix = WebBTPrefix;
                    CustomDS.Instance.Save_CreateInvoice_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.CreateInvoice + " : " + DBTenant + " : LoggedIn : " + virtualuserId); 
                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not fetched for:" + TwinfieldScenarioName.CreateInvoice);
                    throw new Exception("Error in reading data for " + TwinfieldScenarioName.CreateInvoice + " : " + ex.Message);

                }

                foreach (var request in webTest.LaunchLogin(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
                CustomDS.Instance.Save_CreateInvoice_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                //Logger.WriteGeneralLog("Create Invoice : Vuser - " + Convert.ToInt32(virtualuserId).ToString() + " Logged In");
            }
            else
            {
                try
                {
                    threadData = CustomDS.Instance.Get_CreateInvoice_UserData(Convert.ToInt32(virtualuserId), DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.CreateInvoice + " : " + DBTenant + " : NotLoggedIn : " + virtualuserId);

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not saved for :" + TwinfieldScenarioName.CreateInvoice);
                    throw new Exception("Error in getting data for " + TwinfieldScenarioName.CreateInvoice + " : " + ex.Message);

                }
            }
            #endregion DoLogin

            WebBTPrefix = threadData.ScenarioPrefix;
            string WebRequestPrefix = "";

            // RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
            #region SalesTabClick
            webTest.BeginTransaction(WebRequestPrefix + "STC_SalesTabClick");

            webTest.BeginTransaction("sales_sales.html");
            WebTestRequest request134 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/sales.html"));
            request134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request134.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request134;
            request134 = null;
            webTest.EndTransaction("sales_sales.html");


            webTest.BeginTransaction("api_sales_invoices");
            WebTestRequest request135 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            request135.Method = "OPTIONS";
            request135.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request135.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request135Body = new StringHttpBody();
            request135Body.ContentType = "";
            request135Body.InsertByteOrderMark = false;
            request135Body.BodyString = "";
            request135.Body = request135Body;
            yield return request135;
            request135 = null;
            webTest.EndTransaction("api_sales_invoices");

            //Found in Build-16005
            webTest.BeginTransaction("api_sales_revenuetypes");
            WebTestRequest request1380 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/revenuetypes"));
            request1380.Method = "OPTIONS";
            request1380.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request1380.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request1380Body = new StringHttpBody();
            request1380Body.ContentType = "";
            request1380Body.InsertByteOrderMark = false;
            request1380Body.BodyString = "";
            request1380.Body = request1380Body;
            yield return request1380;
            request1380 = null;
            webTest.EndTransaction("api_sales_revenuetypes");
            //

            webTest.BeginTransaction("desktop_view_cr-basic-group-tile.html");
            WebTestRequest request136 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            request136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request136.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request136;
            request136 = null;
            webTest.EndTransaction("desktop_view_cr-basic-group-tile.html");

            webTest.BeginTransaction("desktop_view_cr-divider-tile.html");
            WebTestRequest request137 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            request137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request137.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request137;
            request137 = null;
            webTest.EndTransaction("desktop_view_cr-divider-tile.html");

            webTest.BeginTransaction("desktop_view_cr-dashboard-sub-section-tile.htm");
            WebTestRequest request138 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.html"));
            request138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request138.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request138;
            request138 = null;
            webTest.EndTransaction("desktop_view_cr-dashboard-sub-section-tile.htm");

            webTest.BeginTransaction("api_sales_customers");
            WebTestRequest request139 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request139.Method = "OPTIONS";
            request139.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request139.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request139Body = new StringHttpBody();
            request139Body.ContentType = "";
            request139Body.InsertByteOrderMark = false;
            request139Body.BodyString = "";
            request139.Body = request139Body;
            yield return request139;
            request139 = null;
            webTest.EndTransaction("api_sales_customers");

            webTest.BeginTransaction("desktop_view_cr-insight-tile-view.html");
            WebTestRequest request140 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            request140.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request140.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request140;
            request140 = null;
            webTest.EndTransaction("desktop_view_cr-insight-tile-view.html");

            webTest.BeginTransaction("desktop_view_cr-links-tile.html");
            WebTestRequest request141 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            request141.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request141.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request141;
            request141 = null;
            webTest.EndTransaction("desktop_view_cr-links-tile.html");

            webTest.BeginTransaction("api_sales_invoices_overview");
            WebTestRequest request142 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request142.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request142.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request142;
            request142 = null;
            webTest.EndTransaction("api_sales_invoices_overview");

            webTest.BeginTransaction("api_sales_invoices_overview_1");
            WebTestRequest request143 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request143.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request143;
            request143 = null;
            webTest.EndTransaction("api_sales_invoices_overview_1");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction("api_tasks_1");
            WebTestRequest request144 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request144.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request144;
            request144 = null;
            webTest.EndTransaction("api_tasks_1");

            //webTest.BeginTransaction("api_notifications_3");
            //WebTestRequest request145 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request145.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request145.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request145;
            //request145 = null;
            //webTest.EndTransaction("api_notifications_3");

            webTest.EndTransaction(WebRequestPrefix + "STC_SalesTabClick");
            #endregion
            Thread.Sleep(2000);

            #region NewInvoice
            webTest.BeginTransaction(WebRequestPrefix + "NIC_NewInvoiceClick");
            
            webTest.BeginTransaction("UI_1");
            WebTestRequest request146 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            request146.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices/NewInvoice");
            yield return request146;
            request146 = null;
            webTest.EndTransaction("UI_1");

            webTest.BeginTransaction("sales_invoicing_form_invoice.html");
            WebTestRequest request147 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice.html"));
            request147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request147;
            request147 = null;
            webTest.EndTransaction("sales_invoicing_form_invoice.html");

            //Added in Build#66.7.0-5 - AnkitaG
            webTest.BeginTransaction("timeline_ui-timeline-component.html");
            WebTestRequest request156 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/timeline/ui-timeline-component.html"));
            request156.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request156;
            request156 = null;
            webTest.EndTransaction("timeline_ui-timeline-component.html");

            //webTest.BeginTransaction("sales_invoicing_form_invoice-translations");
            //WebTestRequest request148 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice-translations.html"));
            //request148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request148.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request148;
            //request148 = null;
            //webTest.EndTransaction("sales_invoicing_form_invoice-translations");
            
            //Found in Build-16005
            webTest.BeginTransaction("ui_activity_title_view");
            WebTestRequest request1520 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            request1520.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1520.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1520;
            request1520 = null;
            webTest.EndTransaction("ui_activity_title_view");

            webTest.BeginTransaction("ui_activity_buckets_view");
            WebTestRequest request1530 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            request1530.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1530.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1530;
            request1530 = null;
            webTest.EndTransaction("ui_activity_buckets_view");

            webTest.BeginTransaction("sales_document_articles-counter_articles-counter");
            WebTestRequest request149 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/articles-counter/articles-counter.html"));
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request149;
            request149 = null;
            webTest.EndTransaction("sales_document_articles-counter_articles-counter");

            webTest.BeginTransaction("document-action-popup_document-action-popup.htm");
            WebTestRequest request150 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/document/document-action-popup/document-action-popup.htm" +
                    "l"));
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request150;
            request150 = null;
            webTest.EndTransaction("document-action-popup_document-action-popup.htm");
            
            webTest.BeginTransaction("ui_activity_related_view");
            WebTestRequest request1560 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            request1560.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1560.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1560;
            request1560 = null;
            webTest.EndTransaction("ui_activity_related_view");
            
            webTest.BeginTransaction("sales_invoicing_form_invoice-translations");
            WebTestRequest request168 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/nl-NL/sales/invoicing/form/invoice-translations.html"));
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request168;
            request168 = null;
            webTest.EndTransaction("sales_invoicing_form_invoice-translations");

            //webTest.BeginTransaction("ui_activity_related_item_view");
            //WebTestRequest request1640 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            //request1640.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request1640.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request1640;
            //request1640 = null;
            //webTest.EndTransaction("ui_activity_related_item_view");

            //webTest.BeginTransaction("sections_document_discount");
            //WebTestRequest request1830 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-discount/document-discount.html"));
            //request1830.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request1830.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request1830;
            //request1830 = null;
            //webTest.EndTransaction("sections_document_discount");
            
            ///////


            webTest.BeginTransaction("api_sales_invoices_timeframemanagement");
            WebTestRequest request151 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement"));
            request151.Method = "OPTIONS";
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request151Body = new StringHttpBody();
            request151Body.ContentType = "";
            request151Body.InsertByteOrderMark = false;
            request151Body.BodyString = "";
            request151.Body = request151Body;
            yield return request151;
            request151 = null;
            webTest.EndTransaction("api_sales_invoices_timeframemanagement");

            webTest.BeginTransaction("api_sales_invoices_settings_1");
            WebTestRequest request152 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request152;
            request152 = null;
            webTest.EndTransaction("api_sales_invoices_settings_1");

            webTest.BeginTransaction("api_sales_invoices_settings_2");
            WebTestRequest request153 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request153.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request153.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request153;
            request153 = null;
            webTest.EndTransaction("api_sales_invoices_settings_2");

            //webTest.BeginTransaction("api_sales_invoices_proposedinvoice");
            //WebTestRequest request154 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/proposedinvoice"));
            //request154.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request154.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request154;
            //request154 = null;
            //webTest.EndTransaction("api_sales_invoices_proposedinvoice");

            webTest.BeginTransaction("sales_invoicing_form_invoice-pages.html");
            WebTestRequest request155 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice-pages.html"));
            request155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request155.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request155;
            request155 = null;
            webTest.EndTransaction("sales_invoicing_form_invoice-pages.html");
            
            //Added in Build#66.7.0-5 - AnkitaG
            webTest.BeginTransaction("timeline_internal_ui-timeline-pagination.html");
            WebTestRequest request167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/_ui/timeline/internal/ui-timeline-pagination.html"));
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request167;
            request167 = null;
            webTest.EndTransaction("timeline_internal_ui-timeline-pagination.html");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction("api_tasks_2");
            WebTestRequest reques156 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            reques156.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques156;
            reques156 = null;
            webTest.EndTransaction("api_tasks_2");

            //Start : Added in Build#66.7.0-5 - AnkitaG

            webTest.BeginTransaction("document_document-attachments_document-attachments.html");
            WebTestRequest request173 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/sales/document/document-attachments/document-attachments.html"));
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request173;
            request173 = null;
            webTest.EndTransaction("document_document-attachments_document-attachments.html");

            webTest.BeginTransaction("related_view_ui-activity-related-item-view.html");
            WebTestRequest request172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request172;
            request172 = null;
            webTest.EndTransaction("related_view_ui-activity-related-item-view.html");

            webTest.BeginTransaction("api_blobstorage");
            WebTestRequest request159 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/blobstorage"));
            request159.Method = "OPTIONS";
            request159.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request159.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request159Body = new StringHttpBody();
            request159Body.ContentType = "";
            request159Body.InsertByteOrderMark = false;
            request159Body.BodyString = "";
            request159.Body = request159Body;
            yield return request159;
            request159 = null;
            webTest.EndTransaction("api_blobstorage");

            webTest.BeginTransaction("api_sales_invoices_timeframemanagement_boundaries");
            WebTestRequest request157 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request157.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request157;
            request157 = null;
            webTest.EndTransaction("api_sales_invoices_timeframemanagement_boundaries");


            webTest.BeginTransaction("sales_document_sections_address_address-section");
            WebTestRequest request162 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/address/address-section.html"));
            request162.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request162.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request162;
            request162 = null;
            webTest.EndTransaction("sales_document_sections_address_address-section");

            webTest.BeginTransaction("sales_document_sections_text_text-section.html");
            WebTestRequest request163 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/text/text-section.html"));
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request163;
            request163 = null;
            webTest.EndTransaction("sales_document_sections_text_text-section.html");

            webTest.BeginTransaction("sales_document_sections_document-section.html");
            WebTestRequest request164 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-section.html"));
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request164;
            request164 = null;
            webTest.EndTransaction("sales_document_sections_document-section.html");

            webTest.BeginTransaction("sales_document_sections_payment-reference_payment");
            WebTestRequest request165 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/payment-reference/payment-reference.html"));
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request165;
            request165 = null;
            webTest.EndTransaction("sales_document_sections_payment-reference_payment");

            webTest.BeginTransaction("sales_document_sections_footer_footer-section");
            WebTestRequest request166 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/footer/footer-section.html"));
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request166;
            request166 = null;
            webTest.EndTransaction("sales_document_sections_footer_footer-section");

            webTest.BeginTransaction("sales_document_document-page-break-labels");
            WebTestRequest reques167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/document-page-break-labels.html"));
            reques167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques167;
            reques167 = null;
            webTest.EndTransaction("sales_document_document-page-break-labels");

            webTest.BeginTransaction("information_section");
            WebTestRequest request1720 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/information/information-section.html"));
            request1720.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1720.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1720;
            request1720 = null;
            webTest.EndTransaction("information_section");


            webTest.BeginTransaction("sales_document_sections_lines-table-view.html");
            WebTestRequest request170 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/lines-table/lines-table-view.html"));
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request170;
            request170 = null;
            webTest.EndTransaction("sales_document_sections_lines-table-view.html");

            webTest.BeginTransaction("sales_document_sections_document-totals.html");
            WebTestRequest request171 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-totals/document-totals.html"));
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request171;
            request171 = null;
            webTest.EndTransaction("sales_document_sections_document-totals.html");

            webTest.BeginTransaction("lines_table_edit_view");
            WebTestRequest request1780 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/lines-table-edit/lines-table-edit-view.html"));
            request1780.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1780.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1780;
            request1780 = null;
            webTest.EndTransaction("lines_table_edit_view");

            webTest.BeginTransaction("sales_document_sections_customer_customer-section");
            WebTestRequest reques172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/customer/customer-section.html"));
            reques172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques172;
            reques172 = null;
            webTest.EndTransaction("sales_document_sections_customer_customer-section");
            
            webTest.BeginTransaction("api_sales_sender");
            WebTestRequest reques173 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/sender"));
            reques173.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques173;
            reques173 = null;
            webTest.EndTransaction("api_sales_sender");

            //webTest.BeginTransaction("sales_document_document-attachments_document");
            //WebTestRequest request158 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/document-attachments/document-attachments.html"));
            //request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request158.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request158;
            //request158 = null;
            //webTest.EndTransaction("sales_document_document-attachments_document");

            
            webTest.BeginTransaction("api_sales_invoices_invoicetemplates_default_last");
            WebTestRequest request160 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/default/last/"));
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ExtractText extraction2 = new ExtractText();
            extraction2.StartsWith = "\"paymentReference\":\"";
            extraction2.EndsWith = "\"},\"";
            extraction2.IgnoreCase = false;
            extraction2.UseRegularExpression = false;
            extraction2.Required = true;
            extraction2.ExtractRandomMatch = false;
            extraction2.Index = 0;
            extraction2.HtmlDecode = true;
            extraction2.SearchInHeaders = false;
            extraction2.ContextParameterName = "paymentReference";
            request160.ExtractValues += new EventHandler<ExtractionEventArgs>(extraction2.Extract);
            yield return request160;
            request160 = null;
            webTest.EndTransaction("api_sales_invoices_invoicetemplates_default_last");

            string paymentReference = webTest.Context["paymentReference"].ToString();

            webTest.BeginTransaction("api_bookkeeping_accounts");
            WebTestRequest request161 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/bookkeeping/accounts"));
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request161.QueryStringParameters.Add("level", "3", false, false);
            request161.QueryStringParameters.Add("types", "Project", false, false);
            request161.QueryStringParameters.Add("limit", "1", false, false);
            yield return request161;
            request161 = null;
            webTest.EndTransaction("api_bookkeeping_accounts");
            

            webTest.BeginTransaction("invoicing_form_invoice-translations.html");
            WebTestRequest request174 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/nl-NL/sales/invoicing/form/invoice-translations.html"));
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request174;
            request174 = null;
            webTest.EndTransaction("invoicing_form_invoice-translations.html");

            //Removed in Build#6.79.0-4
            //webTest.BeginTransaction("sales_invoices_invoicetemplate_last_en-GB");
            //WebTestRequest request175 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplate/last/en-GB"));
            //request175.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request175;
            //request175 = null;
            //webTest.EndTransaction("sales_invoices_invoicetemplate_last_en-GB");
            //End : Added in Build#66.7.0-5 - AnkitaG


            webTest.BeginTransaction("api_sales_customers");
            //WebTestRequest request174 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            WebTestRequest reques174 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques174.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques174.QueryStringParameters.Add("asc", "true", false, false);
            reques174.QueryStringParameters.Add("limit", "1000", false, false);
            reques174.QueryStringParameters.Add("offset", "0", false, false);
            reques174.QueryStringParameters.Add("orderBy", "name", false, false);
            yield return reques174;
            reques174 = null;
            webTest.EndTransaction("api_sales_customers");

            #region Enter Customer Name
            string CustomerName = threadData.CustomerName;
            char[] splitCustomer = CustomerName.ToCharArray();
            string FirstLetter = splitCustomer[0].ToString();
            string SecondLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString();
            string ThirdLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString() + splitCustomer[2].ToString();

            string CustomerNameEncode = Uri.EscapeDataString(CustomerName); //Server reads encoded form of customer name.
            #endregion


            webTest.BeginTransaction("api_sales_customers_1");
            WebTestRequest reques175 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques175.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques175;
            reques175 = null;
            webTest.EndTransaction("api_sales_customers_1");

            webTest.BeginTransaction("sales_document_sections_customer-view_customer-view");
            WebTestRequest request176 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/customer-view/customer-view.html"));
            request176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request176.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request176;
            request176 = null;
            webTest.EndTransaction("sales_document_sections_customer-view_customer-view");

            webTest.BeginTransaction("api_currencies_rate");
            WebTestRequest request200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            request200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request200.QueryStringParameters.Add("code", "EUR", false, false);
            request200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return request200;
            request200 = null;
            webTest.EndTransaction("api_currencies_rate");

            webTest.BeginTransaction("api_sales_customers_1");
            //WebTestRequest request177 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            WebTestRequest request177 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request177.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request177.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request177.QueryStringParameters.Add("asc", "true", false, false);
            request177.QueryStringParameters.Add("limit", "10", false, false);
            request177.QueryStringParameters.Add("offset", "0", false, false);
            request177.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request177.QueryStringParameters.Add("searchBy", "2", false, false);
            request177.QueryStringParameters.Add("searchPattern", FirstLetter, false, false);
            yield return request177;
            request177 = null;
            webTest.EndTransaction("api_sales_customers_1");

            webTest.BeginTransaction("api_sales_customers_2");
            // WebTestRequest request178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            WebTestRequest request178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request178.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request178.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request178.QueryStringParameters.Add("asc", "true", false, false);
            request178.QueryStringParameters.Add("limit", "10", false, false);
            request178.QueryStringParameters.Add("offset", "0", false, false);
            request178.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request178.QueryStringParameters.Add("searchBy", "2", false, false);
            request178.QueryStringParameters.Add("searchPattern", SecondLetter, false, false);
            yield return request178;
            request178 = null;
            webTest.EndTransaction("api_sales_customers_2");

            webTest.BeginTransaction("api_sales_customers_3");
            //WebTestRequest request179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            WebTestRequest request179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request179.QueryStringParameters.Add("asc", "true", false, false);
            request179.QueryStringParameters.Add("limit", "10", false, false);
            request179.QueryStringParameters.Add("offset", "0", false, false);
            request179.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request179.QueryStringParameters.Add("searchBy", "2", false, false);
            request179.QueryStringParameters.Add("searchPattern", ThirdLetter, false, false);
            yield return request179;
            request179 = null;
            webTest.EndTransaction("api_sales_customers_3");

            //webTest.BeginTransaction("api_notifications_4");
            //WebTestRequest request180 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request180.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request180.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request180.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request180;
            //request180 = null;
            //webTest.EndTransaction("api_notifications_4");
            
            webTest.BeginTransaction("api_sales_customers_4");
            //WebTestRequest request181 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            WebTestRequest request181 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request181.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request181.QueryStringParameters.Add("asc", "true", false, false);
            request181.QueryStringParameters.Add("limit", "10", false, false);
            request181.QueryStringParameters.Add("offset", "0", false, false);
            request181.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request181.QueryStringParameters.Add("searchBy", "2", false, false);
            request181.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request181;
            request181 = null;
            webTest.EndTransaction("api_sales_customers_4");

            #region Extraction Rule for Customer Details
            var CustomerObjectList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var CustomerObject = CustomerObjectList.items.Random();
            //var CustomerName = CustomerObject.name.ToString();
            var CustomerID = CustomerObject.id.ToString();
            var CustomerCode = CustomerObject.number.ToString();
            var CustomerAddressLine1 = CustomerObject.addressLine1.ToString();
            #endregion

            webTest.EndTransaction(WebRequestPrefix + "NIC_NewInvoiceClick");
            #endregion
            Thread.Sleep(2000);
            
            #region Select Customer
            webTest.BeginTransaction(WebRequestPrefix + "SC_SelectCustomer");

            webTest.BeginTransaction("api_sales_customers_5");
            WebTestRequest request182 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request182.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request182.QueryStringParameters.Add("asc", "true", false, false);
            request182.QueryStringParameters.Add("limit", "10", false, false);
            request182.QueryStringParameters.Add("offset", "0", false, false);
            request182.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request182.QueryStringParameters.Add("searchBy", "2", false, false);
            yield return request182;
            request182 = null;
            webTest.EndTransaction("api_sales_customers_5");

            //webTest.BeginTransaction("api_notifications_5");
            //WebTestRequest request188 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request188.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request188.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request188.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request188;
            //request188 = null;
            //webTest.EndTransaction("api_notifications_5");

            webTest.BeginTransaction("api_sales_customers_6");
            WebTestRequest reques182 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques182.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques182.QueryStringParameters.Add("asc", "true", false, false);
            reques182.QueryStringParameters.Add("limit", "10", false, false);
            reques182.QueryStringParameters.Add("offset", "0", false, false);
            reques182.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            reques182.QueryStringParameters.Add("searchBy", "2", false, false);
            yield return reques182;
            reques182 = null;
            webTest.EndTransaction("api_sales_customers_6");
                        
            webTest.BeginTransaction("api_sales_customers_customer");
           // WebTestRequest request183 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/customer/" + CustomerID + ""));
            WebTestRequest request183 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/" + CustomerID + ""));
            request183.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request183.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request183;
            request183 = null;
            webTest.EndTransaction("api_sales_customers_customer");
            
            #region Extracting Customer Details
            var CustomerDetailsList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var CustomerAddressList = CustomerDetailsList.addresses.Random();
            var CustomerCity = CustomerAddressList.city.ToString();
            var CustomerCountry = CustomerAddressList.countryCode.ToString();
            var CustomerEmail = CustomerAddressList.email.ToString();
            var CustomerContactPerson = CustomerAddressList.forAttentionOf.ToString();
            var CustomerPostelCode = CustomerAddressList.postalCode.ToString();
            var CustomerVATnumber = CustomerAddressList.vatNumber.ToString();

            var culture = CustomerDetailsList.culture.ToString();
            #endregion

            //webTest.BeginTransaction("api_sales_customerextensions");
            //WebTestRequest request227 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customerextensions/c3420a58-d0d7-49cb-afbb-4935159f7302"));
            //request227.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request227.Headers.Add(new WebTestRequestHeader("If-Match", "\"AQAAAQEBAAA=v14\""));
            //request227.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request227;
            //request227 = null;
            //webTest.EndTransaction("api_sales_customerextensions");

            webTest.BeginTransaction("api_sales_invoices_invoicetemplates_nl-NL_last");
            WebTestRequest request184 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/nl-NL/last"));
            request184.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request184.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request184;
            request184 = null;
            webTest.EndTransaction("api_sales_invoices_invoicetemplates_nl-NL_last");

            webTest.BeginTransaction("components__infrastructure_localisation_country");
            WebTestRequest request185 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/nl-NL/_components/_infrastructure/localisation/country-translations.html"));
            request185.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request185.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request185;
            request185 = null;
            webTest.EndTransaction("components__infrastructure_localisation_country");

            #region Calculate Invoice, delivery and due date
            DateTime Date = DateTime.Today;
            string format = "yyyy-MM-dd";
            var TodayDate = Date.ToString(format);  //Deliver Date
            var DeliveryDay = Date.Day;
            var DeliveryMonth = Date.Month;
            var DeliveryYear = Date.Year;

            var Date1 = DateTime.Today.AddMonths(-1);
            var InvoiceDate = Date1.ToString(format);   //Invoice Date
            var InvoiceDay = Date1.Day;
            var InvoiceMonth = Date1.Month;
            var InvoiceYear = Date1.Year;

            var Date2 = DateTime.Today.AddDays(-5);
            var DueDate = Date2.ToString(format);   //Due Date
            var DueDay = Date2.Day;
            var DueMonth = Date2.Month;
            var DueYear = Date2.Year;

            #endregion Calculate Invoice, delivery and due date

            webTest.BeginTransaction("api_sales_vatrates");
            WebTestRequest request186 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/"+ TodayDate + "/nl-NL"));
            request186.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request186.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request186;
            request186 = null;
            webTest.EndTransaction("api_sales_vatrates");

            webTest.BeginTransaction("api_sales_invoices_invoicetemplate_en-GB_last_1");
            WebTestRequest request187 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/en-GB/last"));
            request187.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request187.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //ExtractText extraction2 = new ExtractText();
            //extraction2.StartsWith = "\"paymentReference\":\"";
            //extraction2.EndsWith = "\"},\"";
            //extraction2.IgnoreCase = false;
            //extraction2.UseRegularExpression = false;
            //extraction2.Required = true;
            //extraction2.ExtractRandomMatch = false;
            //extraction2.Index = 0;
            //extraction2.HtmlDecode = true;
            //extraction2.SearchInHeaders = false;
            //extraction2.ContextParameterName = "paymentReference";
            //request187.ExtractValues += new EventHandler<ExtractionEventArgs>(extraction2.Extract);
            yield return request187;
            request187 = null;
            webTest.EndTransaction("api_sales_invoices_invoicetemplate_en-GB_last_1");

            //string paymentReference = webTest.Context["paymentReference"].ToString();

            webTest.BeginTransaction("api_sales_customers_7");
            WebTestRequest request207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request207.QueryStringParameters.Add("asc", "true", false, false);
            request207.QueryStringParameters.Add("limit", "10", false, false);
            request207.QueryStringParameters.Add("offset", "0", false, false);
            request207.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request207.QueryStringParameters.Add("searchBy", "2", false, false);
            request207.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request207;
            request207 = null;
            webTest.EndTransaction("api_sales_customers_7");

            var paymentList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            webTest.EndTransaction(WebRequestPrefix + "SC_SelectCustomer");

            #endregion Select Customer
            Thread.Sleep(2000);

            #region Select Date
            webTest.BeginTransaction(WebRequestPrefix + "SD_SelectDate");

            webTest.BeginTransaction("api_sales_customers");
            WebTestRequest reques207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques207.QueryStringParameters.Add("asc", "true", false, false);
            reques207.QueryStringParameters.Add("limit", "10", false, false);
            reques207.QueryStringParameters.Add("offset", "0", false, false);
            reques207.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            reques207.QueryStringParameters.Add("searchBy", "2", false, false);
            reques207.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return reques207;
            reques207 = null;
            webTest.EndTransaction("api_sales_customers");

            webTest.BeginTransaction("api_sales_vatrates");
            WebTestRequest request189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/"+ InvoiceDate + "/nl-NL"));
            request189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));           
            ExtractText extractionRule1 = new ExtractText();
            extractionRule1.StartsWith = "vatId\":\"";
            extractionRule1.EndsWith = "\",\"vatCode";
            extractionRule1.Index = 0;
            extractionRule1.IgnoreCase = false;
            extractionRule1.UseRegularExpression = false;
            extractionRule1.HtmlDecode = true;
            extractionRule1.Required = false;
            extractionRule1.ContextParameterName = "VatId";
            request189.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request189;
            request189 = null;
            webTest.EndTransaction("api_sales_vatrates");

            webTest.BeginTransaction("api_currencies_rate");
            WebTestRequest reques200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            reques200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques200.QueryStringParameters.Add("code", "EUR", false, false);
            reques200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return reques200;
            reques200 = null;
            webTest.EndTransaction("api_currencies_rate");

            //webTest.BeginTransaction("api_sales_vatrates");
            //WebTestRequest reques189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/" + InvoiceDate + "/nl-NL"));
            //reques189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques189;
            //reques189 = null;
            //webTest.EndTransaction("api_sales_vatrates");

            //webTest.BeginTransaction("api_currencies_rate");
            //WebTestRequest reque200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            //reque200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reque200.QueryStringParameters.Add("code", "EUR", false, false);
            //reque200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            //yield return reque200;
            //reque200 = null;
            //webTest.EndTransaction("api_currencies_rate");

            //webTest.BeginTransaction("api_notifications_6");
            // WebTestRequest request190 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            // request190.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            // request190.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            // request190.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            // yield return request190;
            // request190 = null;
            // webTest.EndTransaction("api_notifications_6");

            webTest.EndTransaction(WebRequestPrefix + "SD_SelectDate");
            #endregion
            Thread.Sleep(2000);

            #region Add Introductory Item
            webTest.BeginTransaction(WebRequestPrefix + "AII_AddIntroductoryItem");
            
            webTest.BeginTransaction("api_sales_articles");
            WebTestRequest request192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            request192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request192.QueryStringParameters.Add("asc", "true", false, false);
            request192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            request192.QueryStringParameters.Add("limit", "5", false, false);
            request192.QueryStringParameters.Add("offset", "0", false, false);
            request192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            request192.QueryStringParameters.Add("term", "", false, false);
            yield return request192;
            request192 = null;
            webTest.EndTransaction("api_sales_articles");

            ////Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_users_user");
            //WebTestRequest request2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/"+ threadData.UserName));
            //request2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2040;
            //request2040 = null;
            //webTest.EndTransaction("api_users_user");

            webTest.BeginTransaction("api_sales_articles");
            WebTestRequest reques192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            reques192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques192.QueryStringParameters.Add("asc", "true", false, false);
            reques192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            reques192.QueryStringParameters.Add("limit", "5", false, false);
            reques192.QueryStringParameters.Add("offset", "0", false, false);
            reques192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            reques192.QueryStringParameters.Add("term", "", false, false);
            yield return reques192;
            reques192 = null;
            webTest.EndTransaction("api_sales_articles");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_users_user_1");
            //WebTestRequest request2041 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //request2041.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2041.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2041;
            //request2041 = null;
            //webTest.EndTransaction("api_users_user_1");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_sales_articles");
            //WebTestRequest reque192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //reque192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reque192.QueryStringParameters.Add("asc", "true", false, false);
            //reque192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //reque192.QueryStringParameters.Add("limit", "5", false, false);
            //reque192.QueryStringParameters.Add("offset", "0", false, false);
            //reque192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //reque192.QueryStringParameters.Add("term", "", false, false);
            //yield return reque192;
            //reque192 = null;
            //webTest.EndTransaction("api_sales_articles");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_users_user_2");
            //WebTestRequest request2042 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //request2042.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2042.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2042;
            //request2042 = null;
            //webTest.EndTransaction("api_users_user_2");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_sales_articles");
            //WebTestRequest requ192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //requ192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requ192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requ192.QueryStringParameters.Add("asc", "true", false, false);
            //requ192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //requ192.QueryStringParameters.Add("limit", "5", false, false);
            //requ192.QueryStringParameters.Add("offset", "0", false, false);
            //requ192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //requ192.QueryStringParameters.Add("term", "", false, false);
            //yield return requ192;
            //requ192 = null;
            //webTest.EndTransaction("api_sales_articles");

            //Removed in Build #6.79.0.-5
            ////Found in Build-16005
            //webTest.BeginTransaction("api_users_user");
            //WebTestRequest requ2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //requ2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requ2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requ2040;
            //requ2040 = null;
            //webTest.EndTransaction("api_users_user");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_sales_articles_1");
            //WebTestRequest request193 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //request193.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request193.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request193.QueryStringParameters.Add("asc", "true", false, false);
            //request193.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //request193.QueryStringParameters.Add("limit", "5", false, false);
            //request193.QueryStringParameters.Add("offset", "0", false, false);
            //request193.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //request193.QueryStringParameters.Add("term", "", false, false);
            //yield return request193;
            //request193 = null;
            //webTest.EndTransaction("api_sales_articles_1");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_users_user");
            //WebTestRequest reques2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //reques2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques2040;
            //reques2040 = null;
            //webTest.EndTransaction("api_users_user");

            webTest.BeginTransaction("api_sales_articles_2");
            WebTestRequest request194 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            request194.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request194.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request194.QueryStringParameters.Add("asc", "true", false, false);
            request194.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            request194.QueryStringParameters.Add("limit", "5", false, false);
            request194.QueryStringParameters.Add("offset", "0", false, false);
            request194.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            request194.QueryStringParameters.Add("searchPattern", "SampleArticle", false, false);
            request194.QueryStringParameters.Add("term", "SampleArticle", false, false);
            yield return request194;
            request194 = null;
            webTest.EndTransaction("api_sales_articles_2");

            //Removed in Build #6.79.0.-5
            //webTest.BeginTransaction("api_users_user");
            //WebTestRequest reque2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //reque2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reque2040;
            //reque2040 = null;
            //webTest.EndTransaction("api_users_user");

            //webTest.BeginTransaction("api_notifications_8");
            //WebTestRequest reques196 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //reques196.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques196.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reques196.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return reques196;
            //reques196 = null;
            //webTest.EndTransaction("api_notifications_8");
            
            webTest.EndTransaction(WebRequestPrefix + "AII_AddIntroductoryItem");
            #endregion
            Thread.Sleep(2000);

            #region Click on Send by email link
            webTest.BeginTransaction(WebRequestPrefix + "CEL_ClickonSendbyEmailLink");

            webTest.BeginTransaction("api_sales_invoices_emailtemplate");
            WebTestRequest request197 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/emailtemplates/default"));
            request197.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request197.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request197;
            request197 = null;
            webTest.EndTransaction("api_sales_invoices_emailtemplate");

            //webTest.BeginTransaction("api_sales_invoices");
            //WebTestRequest request198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            //request198.Method = "POST";
            //request198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody request198Body = new StringHttpBody();
            //request198Body.ContentType = "application/json;charset=utf-8";
            //request198Body.InsertByteOrderMark = false;
            //request198Body.BodyString =
            //            /*(@"{""_links"":{},""data"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve "
            //                    + (webTest.Context["PaymentReference"].ToString()
            //                    + (@" te vermelden bij betaling"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve "
            //                    + (webTest.Context["PaymentReference"].ToString() + @" te vermelden bij betaling"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}"))));*/
            //            @"{""_links"":{},""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""templateId"":null,""items"":[{""quantity"":20,""quantityPrecision"":0,""quantityHidden"":false,""description"":""Perf Testing"",""pricePerUnit"":15,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""attachmentIds"":[],""invoiceDate"":{""year"":2018,""month"":1,""day"":31},""dueDate"":{""year"":2018,""month"":2,""day"":23},""deliveryDate"":{""year"":2018,""month"":2,""day"":1},""templateCulture"":""nl-NL"",""currencyCode"":""EUR"",""logoFileName"":null,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""companyInfo"":null,""intro"":null,""outro"":null,""footer"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""baseCurrencyCode"":""EUR"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""isVatInclusive"":false,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""customerContactPerson"":""I Tav"",""dueDays"":5,""initCustomer"":false}";
            //request198.Body = request198Body;
            //yield return request198;
            //request198 = null;
            //webTest.EndTransaction("api_sales_invoices");

            /*

 webTest.BeginTransaction("api_sales_invoices_proposedinvoice_1");
            WebTestRequest request198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/proposedinvoice"));
            request198.Method = "POST";
            request198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request198Body = new StringHttpBody();
            request198Body.ContentType = "application/json;charset=utf-8";
            request198Body.InsertByteOrderMark = false;

            var settings = new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                MissingMemberHandling = MissingMemberHandling.Ignore
            };

            RootObject_req198 objRootObject_req198 = new RootObject_req198();

            var tempObject = JsonConvert.DeserializeObject(@"{""_links"":{},""data"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""" + PaymentReference + @""",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""" + PaymentReference + @""",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}", settings);
            objRootObject_req198 = tempObject as RootObject_req198;
            objRootObject_req198.data.paymentReference = PaymentReference;



            request198Body.BodyString = JsonConvert.SerializeObject(objRootObject_req198, settings).ToString();

           request198.Body = request198Body;
            yield return request198;
            request198 = null;
 webTest.EndTransaction("api_sales_invoices_proposedinvoice_1");
*/

            webTest.BeginTransaction("api_sales_invoices_2");
            WebTestRequest reques198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            reques198.Method = "POST";
            reques198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody reques198Body = new StringHttpBody();
            reques198Body.ContentType = "application/json;charset=utf-8";
            reques198Body.InsertByteOrderMark = false;

            CustomerDetails1 _CustomerDetails = new CustomerDetails1();

            _CustomerDetails._links = new _Links();
            _CustomerDetails.customerId = CustomerID;
            _CustomerDetails.templateId = null;

            int i = 0;
            _CustomerDetails.items = new Item3[1];
            Item3 objItem1 = new Item3();
            objItem1.quantity = 1;
            objItem1.quantityPrecision = 0;
            objItem1.quantityHidden = false;
            objItem1.description    = "Perf Test";
            objItem1.pricePerUnit = 100;
            objItem1.vatId = webTest.Context["VatId"].ToString();
            objItem1.articleId = null;
            objItem1.articleName = null;
            objItem1.articleCode = null;
            objItem1.ictInfo = null;
            objItem1.kind = "Taxable";
            _CustomerDetails.items[i] = objItem1;
            //Item1 objItem1 = new Item1();
            //    objItem1.articleCode = null;
            //    objItem1.articleId = null;
            //    objItem1.articleName = null;
            //    objItem1.description = "Perf Test";
            //    objItem1.ictInfo = null;
            //    objItem1.kind = "Taxable";
            //    objItem1.pricePerUnit = 100;
            //    objItem1.quantity = 1;
            //    objItem1.quantityHidden = false;
            //    objItem1.quantityPrecision = 0;
            //    objItem1.vatId = webTest.Context["VatId"].ToString();
            //    _CustomerDetails.data.items[i] = objItem1;
            _CustomerDetails.attachmentIds = null;
            _CustomerDetails.invoiceDate = new Invoicedate();
            _CustomerDetails.invoiceDate.day = InvoiceDay;
            _CustomerDetails.invoiceDate.month = InvoiceMonth;
            _CustomerDetails.invoiceDate.year = InvoiceYear;
            _CustomerDetails.dueDate = new Duedate();
            _CustomerDetails.dueDate.day = DueDay;
            _CustomerDetails.dueDate.month = DueMonth;
            _CustomerDetails.dueDate.year = DueYear;
            _CustomerDetails.deliveryDate = new Deliverydate();
            _CustomerDetails.deliveryDate.day = DeliveryDay;
            _CustomerDetails.deliveryDate.month = DeliveryMonth;
            _CustomerDetails.deliveryDate.year = DeliveryYear;
            _CustomerDetails.templateCulture = "nl-NL";
            _CustomerDetails.currencyCode = "EUR";
            _CustomerDetails.logoFileName = null;
            _CustomerDetails.backgroundFileName = null;
            _CustomerDetails.secondaryBackgroundFileName = null;
            _CustomerDetails.companyInfo = null;
            _CustomerDetails.intro = null;
            _CustomerDetails.outro = null;
            _CustomerDetails.footer = null;
            _CustomerDetails.paymentReference = paymentReference;// "Gelieve {{PaymentReference}} te vermelden bij betaling";
            _CustomerDetails.baseCurrencyCode = "EUR";
            _CustomerDetails.customerCultureCode = "nl-NL";
            _CustomerDetails.publishingEmail = "testcollect@twinfield.com";
            _CustomerDetails.customerDiscount = null;
            _CustomerDetails.isVatInclusive = false;
            _CustomerDetails.itemsHasICT = false;
            _CustomerDetails.legalVatInfo = "";
            _CustomerDetails.sendInvoicesAs = "Link";
            _CustomerDetails.customerCode = CustomerCode;
            _CustomerDetails.customerName = CustomerName;
            _CustomerDetails.customerAddressLine1 = CustomerAddressLine1;
            _CustomerDetails.customerAddressLine2 = "";
            _CustomerDetails.customerPostalCode = CustomerPostelCode;
            _CustomerDetails.customerCity = CustomerCity;
            _CustomerDetails.customerCountry = CustomerCountry;
            _CustomerDetails.customerVatNumber = CustomerVATnumber;
            _CustomerDetails.customerContactPerson = CustomerContactPerson;
            _CustomerDetails.dueDays = 5;
            _CustomerDetails.initCustomer = false;
            #region CustomerDetails create object to pass to Sales/Invoices request

            ////Remaining InvoiceData part
            //_CustomerDetails.invoiceData = new Invoicedata();
            //    _CustomerDetails.invoiceData.backgroundFileName = null;
            //    _CustomerDetails.invoiceData.companyInfo = null;
            //    _CustomerDetails.invoiceData.currencyCode = "EUR";
            //    _CustomerDetails.invoiceData.customerAddressLine1 = CustomerAddressLine1;
            //    _CustomerDetails.invoiceData.customerAddressLine2 = "";
            //    _CustomerDetails.invoiceData.customerCity = CustomerCity;
            //    _CustomerDetails.invoiceData.customerCode = CustomerCode;
            //    _CustomerDetails.invoiceData.customerContactPerson = CustomerContactPerson;
            //    _CustomerDetails.invoiceData.customerCountry = CustomerCountry;
            //    _CustomerDetails.invoiceData.customerCultureCode = "nl-NL";
            //    _CustomerDetails.invoiceData.customerDiscount = null;
            //    _CustomerDetails.invoiceData.customerId = CustomerID;
            //    _CustomerDetails.invoiceData.customerName = CustomerName;
            //    _CustomerDetails.invoiceData.customerPostalCode = CustomerPostelCode;
            //    _CustomerDetails.invoiceData.customerVatNumber = CustomerVATnumber;
            //    _CustomerDetails.invoiceData.attachmentIds = new List<object>();

            //    _CustomerDetails.invoiceData.deliveryDate = new Deliverydate1();
            //    _CustomerDetails.invoiceData.deliveryDate.day = DeliveryDay;
            //    _CustomerDetails.invoiceData.deliveryDate.month = DeliveryMonth;
            //    _CustomerDetails.invoiceData.deliveryDate.year = DeliveryYear;

            //    _CustomerDetails.invoiceData.discount = null;
            //    _CustomerDetails.invoiceData.discountType = "Percentage";

            //    _CustomerDetails.invoiceData.dueDate = new Duedate1();
            //    _CustomerDetails.invoiceData.dueDate.day = DueDay;
            //    _CustomerDetails.invoiceData.dueDate.month = DueMonth;
            //    _CustomerDetails.invoiceData.dueDate.year = DueYear;

            //    _CustomerDetails.invoiceData.dueDays = 5;          //No.of Due days calculated
            //    _CustomerDetails.invoiceData.footer = null;
            //    _CustomerDetails.invoiceData.initCustomer = false;
            //    _CustomerDetails.invoiceData.intro = null;

            //    _CustomerDetails.invoiceData.invoiceDate = new Invoicedate1();
            //    _CustomerDetails.invoiceData.invoiceDate.day = InvoiceDay;
            //    _CustomerDetails.invoiceData.invoiceDate.month = InvoiceMonth;
            //    _CustomerDetails.invoiceData.invoiceDate.year = InvoiceYear;

            //    _CustomerDetails.invoiceData.isVatInclusive = false;
            //    _CustomerDetails.invoiceData.itemsHasICT = false;
            //    _CustomerDetails.invoiceData.legalVatInfo = "";
            //    _CustomerDetails.invoiceData.logoFileName = null;
            //    _CustomerDetails.invoiceData.outro = null;
            //    _CustomerDetails.invoiceData.paymentReference = "Gelieve PaymentReference te vermelden bij betaling";
            //    _CustomerDetails.invoiceData.projectCode = null;
            //    _CustomerDetails.invoiceData.projectId = null;
            //    _CustomerDetails.invoiceData.publishingEmail = "testcollect@twinfield.com";
            //    _CustomerDetails.invoiceData.reference = null;
            //    _CustomerDetails.invoiceData.secondaryBackgroundFileName = null;
            //    _CustomerDetails.invoiceData.sendInvoicesAs = "Link";

            //    int j = 0;
            //    _CustomerDetails.invoiceData.items = new Item2[1];
            //    Item2 objItem2 = new Item2();
            //    objItem2.articleCode = null;
            //    objItem2.articleId = null;
            //    objItem2.articleName = null;
            //    objItem2.description = "Perf Test";
            //    objItem2.ictInfo = null;
            //    objItem2.kind = "Taxable";
            //    objItem2.pricePerUnit = 100;
            //    objItem2.quantity = 1;
            //    objItem2.quantityHidden = false;
            //    objItem2.quantityPrecision = 0;
            //    objItem2.vatId = webTest.Context["VatId"].ToString();
            //    _CustomerDetails.invoiceData.items[j] = objItem2; 
            #endregion

            reques198Body.BodyString = JsonConvert.SerializeObject(_CustomerDetails, Formatting.None, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Include});
            //request198Body.BodyString = (@"{""_links"":{},""data"":{""customerId"":""" + CustomerID + @""",""customerCode"":""" + CustomerCode + @""",""customerName"":""" + CustomerName + @""",""customerContactPerson"":""" + CustomerContactPerson + @""",""customerAddressLine1"":""" + CustomerAddressLine1 + @""",""customerAddressLine2"":"""",""customerPostalCode"":""" + CustomerPostelCode + @""",""customerCity"":""" + CustomerCity + @""",""customerCountry"":""" + CustomerCountry + @""",""customerVatNumber"":""" + CustomerVATnumber + @""",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":{""year"":2017,""month"":7,""day"":20},""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""PerfTesting"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""customerCultureCode"":""" + culture + @""",""publishingEmail"":""" + CustomerEmail + @""",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""" + CustomerID + @""",""customerCode"":""" + CustomerCode + @""",""customerName"":""" + CustomerName + @""",""customerContactPerson"":""" + CustomerContactPerson + @""",""customerAddressLine1"":""" + CustomerAddressLine1 + @""",""customerAddressLine2"":"""",""customerPostalCode"":""" + CustomerPostelCode + @""",""customerCity"":""" + CustomerCity + @""",""customerCountry"":""" + CustomerCountry + @""",""customerVatNumber"":""" + CustomerVATnumber + @""",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":{""year"":2017,""month"":7,""day"":20},""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""PerfTesting"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""customerCultureCode"":""" + culture + @""",""publishingEmail"":""" + CustomerEmail + @""",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}");
            reques198.Body = reques198Body;
            yield return reques198;
            reques198 = null;
            webTest.EndTransaction("api_sales_invoices_2");

            //Extracting ID value from Location header
            var abc = webTest.LastResponse.Headers["Location"].ToString();
            string[] abc1 = abc.Split('/');
            string IDValue = abc1[6].ToString();

            //webTest.BeginTransaction("api_notifications_9");
            //WebTestRequest request199 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request199.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request199.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request199.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request199;
            //request199 = null;
            //webTest.EndTransaction("api_notifications_9");

            webTest.BeginTransaction("api_sales_invoices_3");
            WebTestRequest requ200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + IDValue + ""));
            requ200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            requ200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return requ200;
            requ200 = null;
            webTest.EndTransaction("api_sales_invoices_3");

            webTest.BeginTransaction("api_sales_invoices_proposedinvoice_4");
            WebTestRequest request201 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + IDValue + "/send"));
            request201.Method = "POST";
            request201.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request201.Headers.Add(new WebTestRequestHeader("If-Match", "\"1\""));
            request201.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request201Body = new StringHttpBody();
            request201Body.ContentType = "application/json;charset=utf-8";
            request201Body.InsertByteOrderMark = false;
            request201Body.BodyString = "\"testcollect@twinfield.com\"";
            request201.Body = request201Body;
            yield return request201;
            request201 = null;
            webTest.EndTransaction("api_sales_invoices_proposedinvoice_4");

            webTest.BeginTransaction("api_currencies_rate");
            WebTestRequest request2000 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            request2000.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request2000.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request2000.QueryStringParameters.Add("code", "EUR", false, false);
            request2000.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return request2000;
            request2000 = null;
            webTest.EndTransaction("api_currencies_rate");

            webTest.BeginTransaction("components_document_document-comments");
            WebTestRequest request202 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/document/document-comments/document-comments.html"));
            request202.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request202.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request202;
            request202 = null;
            webTest.EndTransaction("components_document_document-comments");

            webTest.BeginTransaction("sales_invoicing_listing_ui-invoice-listing");
            WebTestRequest request203 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/listing/ui-invoice-listing.html"));
            request203.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request203.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request203;
            request203 = null;
            webTest.EndTransaction("sales_invoicing_listing_ui-invoice-listing");

            //webTest.BeginTransaction("ui_activity_activity-title_view_ui-activity");
            //WebTestRequest request204 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            //request204.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request204.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request204;
            //request204 = null;
            //webTest.EndTransaction("ui_activity_activity-title_view_ui-activity");


            //webTest.BeginTransaction("ui_related_view_ui-activity-related-view");
            //WebTestRequest request206 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            //request206.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request206.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request206;
            //request206 = null;
            //webTest.EndTransaction("ui_related_view_ui-activity-related-view");

            webTest.BeginTransaction("api_creditmanagement");
            WebTestRequest reque207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            reque207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reque207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reque207;
            reque207 = null;
            webTest.EndTransaction("api_creditmanagement");

            webTest.BeginTransaction("api_creditmanagement_1");
            WebTestRequest request208 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            request208.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request208.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request208;
            request208 = null;
            webTest.EndTransaction("api_creditmanagement_1");

            //Added in Build # 6.79.0-5
            webTest.BeginTransaction("api_sales_invoices_timeframemanagement_boundaries_1");
            WebTestRequest request209 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request209.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request209.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request209;
            request209 = null;
            webTest.EndTransaction("api_sales_invoices_timeframemanagement_boundaries_1");

            webTest.BeginTransaction("api_sales_invoices_settings_3");
            WebTestRequest request210 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request210.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request210.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request210;
            request210 = null;
            webTest.EndTransaction("api_sales_invoices_settings_3");

            webTest.BeginTransaction("api_sales_invoices_overview_3");
            WebTestRequest reques210 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            reques210.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques210.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques210;
            reques210 = null;
            webTest.EndTransaction("api_sales_invoices_overview_3");

            //webTest.BeginTransaction("ui_buckets_view_ui-buckets-carousel");
            //WebTestRequest request205 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/een-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            //request205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request205.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request205;
            //request205 = null;
            //webTest.EndTransaction("ui_buckets_view_ui-buckets-carousel");

            //webTest.BeginTransaction("ui_buckets_view_ui-activity-buckets-view");
            //WebTestRequest reques205 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            //reques205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //reques205.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques205;
            //reques205 = null;
            //webTest.EndTransaction("ui_buckets_view_ui-activity-buckets-view");

            webTest.BeginTransaction("ui_list_view_ui-list-view.html");
            WebTestRequest request211 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/ui-list-view.html"));
            request211.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request211.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request211;
            request211 = null;
            webTest.EndTransaction("ui_list_view_ui-list-view.html");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction("api_tasks_3");
            WebTestRequest request212 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request212.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request212.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request212;
            request212 = null;
            webTest.EndTransaction("api_tasks_3");

            webTest.BeginTransaction("api_sales_invoices_overdue");
            WebTestRequest request213 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request213.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request213.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request213.QueryStringParameters.Add("asc", "false", false, false);
            request213.QueryStringParameters.Add("limit", "20", false, false);
            request213.QueryStringParameters.Add("offset", "0", false, false);
            request213.QueryStringParameters.Add("orderBy", "date", false, false);
            yield return request213;
            request213 = null;
            webTest.EndTransaction("api_sales_invoices_overdue");

            webTest.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex-headers");
            WebTestRequest request214 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            request214.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request214.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request214;
            request214 = null;
            webTest.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex-headers");

            webTest.BeginTransaction("ui_activity_actions_view_ui-actions-view");
            WebTestRequest request215 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            request215.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request215.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request215;
            request215 = null;
            webTest.EndTransaction("ui_activity_actions_view_ui-actions-view");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-addnew");
            WebTestRequest request216 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            request216.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request216.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request216;
            request216 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-addnew");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-query");
            WebTestRequest request217 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            request217.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request217.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request217;
            request217 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-query");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-navigation");
            WebTestRequest request218 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            request218.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request218.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request218;
            request218 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-navigation");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-filters");
            WebTestRequest request219 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            request219.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request219.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request219;
            request219 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-filters");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-pagination");
            WebTestRequest request220 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            request220.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request220.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request220;
            request220 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-pagination");

            webTest.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex-record");
            WebTestRequest request225 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            request225.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request225.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request225;
            request225 = null;
            webTest.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex-record");

            //webTest.BeginTransaction("ui_related_view_ui-activity-related-item-view");
            //WebTestRequest request221 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            //request221.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request221.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request221;
            //request221 = null;
            //webTest.EndTransaction("ui_related_view_ui-activity-related-item-view");

            //webTest.BeginTransaction("api_sales_invoices_overview_2");
            //WebTestRequest request222 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //request222.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request222.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request222 = null;
            //webTest.EndTransaction("api_sales_invoices_overview_2");

            //webTest.BeginTransaction("ui_buckets_view_ui-buckets-carousel.html");
            //WebTestRequest request223 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            //request223.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request223.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request223;
            //request223 = null;
            //webTest.EndTransaction("ui_buckets_view_ui-buckets-carousel.html");

            //webTest.BeginTransaction("ui_buckets_view_ui-activity-bucket-view.html");
            //WebTestRequest request224 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-bucket-view.html"));
            //request224.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request224.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request224;
            //request224 = null;
            //webTest.EndTransaction("ui_buckets_view_ui-activity-bucket-view.html");

            //webTest.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex-record");
            //WebTestRequest request225 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            //request225.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request225.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request225;
            //request225 = null;
            //webTest.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex-record");

            webTest.BeginTransaction("ui_actions_view_ui-actions-notifications-view");
            WebTestRequest request226 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            request226.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request226.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request226;
            request226 = null;
            webTest.EndTransaction("ui_actions_view_ui-actions-notifications-view");

            webTest.BeginTransaction("ui_actions_view_partials_ui-actions-view");
            WebTestRequest reques227 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries.html"));
            reques227.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques227.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques227;
            reques227 = null;
            webTest.EndTransaction("ui_actions_view_partials_ui-actions-view");

            webTest.BeginTransaction("ui_actions_view_ui-actions-view-second");
            WebTestRequest reque228 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            reque228.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reque228.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reque228;
            reque228 = null;
            webTest.EndTransaction("ui_actions_view_ui-actions-view-second");

            //webTest.BeginTransaction("ui_actions_view_ui-actions-view-secondaries-stack");
            //WebTestRequest request229 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
            //        "ed.html"));
            //request229.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request229.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request229;
            //request229 = null;
            //webTest.EndTransaction("ui_actions_view_ui-actions-view-secondaries-stack");

            webTest.BeginTransaction("ui_list_view_partials_adds_ui-list-adds-new");
            WebTestRequest request230 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/adds/ui-list-adds-new.html"));
            request230.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request230.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request230;
            request230 = null;
            webTest.EndTransaction("ui_list_view_partials_adds_ui-list-adds-new");

            webTest.BeginTransaction("ui_list_view_partials_ui-list-view-record-actions");
            WebTestRequest request231 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            request231.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request231.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request231;
            request231 = null;
            webTest.EndTransaction("ui_list_view_partials_ui-list-view-record-actions");

            webTest.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex-column");
            WebTestRequest request232 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            request232.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request232.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request232;
            request232 = null;
            webTest.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex-column");

            webTest.BeginTransaction("ui_list_view_ui-list-view-record-indicator");
            WebTestRequest request233 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-indicator.html"));
            request233.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request233.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request233;
            request233 = null;
            webTest.EndTransaction("ui_list_view_ui-list-view-record-indicator");

            webTest.BeginTransaction("_partials_filters_select_ui-list-inline-select-filter");
            WebTestRequest request234 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/select/ui-list-inline-select-filter.html"));
            request234.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request234.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request234;
            request234 = null;
            webTest.EndTransaction("_partials_filters_select_ui-list-inline-select-filter");

            webTest.BeginTransaction("ui_list_view_filters_date_ui-list-date-filter");
            WebTestRequest reques234 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/date/ui-list-date-filter.html"));
            reques234.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques234.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques234;
            reques234 = null;
            webTest.EndTransaction("ui_list_view_filters_date_ui-list-date-filter");

            //webTest.BeginTransaction("v2_track");
            //WebTestRequest request263 = new WebTestRequest((webTest.Context["WebServer4"].ToString() + "/v2/track"));
            //request263.ThinkTime = 16;
            //request263.Method = "POST";
            //request263.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody request263Body = new StringHttpBody();
            //request263Body.ContentType = "application/json";
            //request263Body.InsertByteOrderMark = false;
            //request263Body.BodyString = "";//needs to be check - AnkitaG
            //webTest.BeginTransaction("v2_track");

            //webTest.BeginTransaction("api_notifications_10");
            //WebTestRequest request235 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request235.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request235.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request235.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request235;
            //request235 = null;
            //webTest.EndTransaction("api_notifications_10");

            webTest.EndTransaction(WebRequestPrefix + "CEL_ClickonSendbyEmailLink");
            #endregion
            Thread.Sleep(2000);

             if ((Convert.ToInt32(webTest.Context["iterationNo"])% Convert.ToInt32(webTest.Context["maxiterationNo"])) ==0)
            {
                foreach (var request in webTest.Logout(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "User Logout: " + threadData.UserName + " LogOutTime: " + DateTime.Now + "\r\n");
                Thread.Sleep(2000);
            }
        }
        
    }
    public class CreateInvoice_A : WebTest
    {
        CreateInvoice _CreateInvoice = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public CreateInvoice_A()
        {
            if (_CreateInvoice == null)
                _CreateInvoice = new CreateInvoice(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext= this._textContext;
            return _CreateInvoice.GetRequestEnumerator(TwinfieldDBTenant.A, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
    public class CreateInvoice_B : WebTest
    {
        CreateInvoice _CreateInvoice = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public CreateInvoice_B()
        {
            if (_CreateInvoice == null)
                _CreateInvoice = new CreateInvoice(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _CreateInvoice.GetRequestEnumerator(TwinfieldDBTenant.B, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
    public class CreateInvoice_C : WebTest
    {
        CreateInvoice _CreateInvoice = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public CreateInvoice_C()
        {
            if (_CreateInvoice == null)
                _CreateInvoice = new CreateInvoice(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _CreateInvoice.GetRequestEnumerator(TwinfieldDBTenant.C, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
    public class CreateInvoice_D : WebTest
    {
        CreateInvoice _CreateInvoice = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public CreateInvoice_D()
        {
            if (_CreateInvoice == null)
                _CreateInvoice = new CreateInvoice(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _CreateInvoice.GetRequestEnumerator(TwinfieldDBTenant.D, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
    public class CreateInvoice_E : WebTest
    {
        CreateInvoice _CreateInvoice = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public CreateInvoice_E()
        {
            if (_CreateInvoice == null)
                _CreateInvoice = new CreateInvoice(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _CreateInvoice.GetRequestEnumerator(TwinfieldDBTenant.E, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
}
