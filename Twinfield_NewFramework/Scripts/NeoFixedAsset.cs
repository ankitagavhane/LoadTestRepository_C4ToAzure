//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twinfield_NewFramework
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using Microsoft.VisualStudio.TestTools.LoadTesting;
    //using MicrosoftServicesTestLabs.Monitor.VSTSUnitTest;
    using System.Drawing;
    using System.Threading;
    using System.Data;
    using System.Reflection;

    public class NeoFixedAsset
    {
        WebTest webTest;
        private Dictionary<string, string> localDictionary;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();    //object of webTesRequestPlugin class to access the variables uniquely in each thread.
        private InputTableRecord testRecord;
        public Object assemblyinitializeLock = new Object();
        private WebTestContext _textContext;
        private object virtualuserId;
        private object doLogin;
        string OfficeManagementID = string.Empty;
        private string companyTypeDescription;

        public NeoFixedAsset(WebTest webTest)
        {
            this.webTest = webTest;
            
        }
        public WebTestContext TestContext
        {
            get { return _textContext; }

            set { _textContext = value; }
        }
        
        public IEnumerator<WebTestRequest> GetRequestEnumerator(TwinfieldDBTenant DBTenant,string userDictionaryKey, WebTestRequestPlugin objPlugin)
        {
            var WebBTPrefix = TwinfieldScenarioPrefix.NFA_ + DBTenant.ToString() + "_";
            _textContext = webTest.Context;
            _textContext.TryGetValue("doLogin", out doLogin);
            _textContext.TryGetValue("UserId", out virtualuserId);

            SharedThreadData threadData;

            #region DoLogin
            if (Convert.ToBoolean(doLogin))
            {
                webTest.Context.CookieContainer = new System.Net.CookieContainer();

                try
                {
                    localDictionary = CustomDS.Instance.GetNextRowTwinfield(DBTenant, TwinfieldScenarioName.NeoFixedAsset);
                    
                    threadData = new SharedThreadData(Convert.ToInt32(virtualuserId),this.TestContext);
                    threadData.UserName = localDictionary["UserName"];
                    threadData.Tenant = localDictionary["DBTenant"];
                    threadData.CustomerName = localDictionary["CustomerName"];
                    threadData.hasFullAccess = localDictionary["hasFullAccess"];
                    threadData.Password = AssemblyLoad.Password;
                    threadData.ScenarioPrefix = WebBTPrefix;
                    CustomDS.Instance.Save_NeoFixedAsset_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.NeoFixedAsset + " : " + DBTenant + " : LoggedIn : " + virtualuserId); 
                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not fetched for:" + TwinfieldScenarioName.NeoFixedAsset);
                    throw new Exception("Error in reading data for " + TwinfieldScenarioName.NeoFixedAsset + " : " + ex.Message);

                }
                if(threadData.hasFullAccess=="0")
                {
                    foreach (var request in webTest.LaunchLogin(threadData, objPlugin)) yield return request;
                }
                else
                {
                    foreach (var request in webTest.LaunchLogin_FullAccess(threadData, objPlugin)) yield return request;
                }
                //RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
                CustomDS.Instance.Save_NeoFixedAsset_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                //Logger.WriteGeneralLog("Create Invoice : Vuser - " + Convert.ToInt32(virtualuserId).ToString() + " Logged In");
            }
            else
            {
                try
                {
                    threadData = CustomDS.Instance.Get_NeoFixedAsset_UserData(Convert.ToInt32(virtualuserId), DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.NeoFixedAsset + " : " + DBTenant + " : NotLoggedIn : " + virtualuserId);

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not saved for :" + TwinfieldScenarioName.NeoFixedAsset);
                    throw new Exception("Error in getting data for " + TwinfieldScenarioName.NeoFixedAsset + " : " + ex.Message);

                }
            }
            #endregion DoLogin

            WebBTPrefix = threadData.ScenarioPrefix;
            string WebRequestPrefix = "";

            #region FA_FixedAssetsClick
            webTest.BeginTransaction(WebBTPrefix + "FixedAssetsClick");
            WebRequestPrefix = "FAC_";

            //WebTestRequest request133 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request133.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request133.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request133.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request133;
            //request133 = null;

            webTest.BeginTransaction(WebRequestPrefix + "en-GB_fixed-assets_fixed-assets.html");
            WebTestRequest request134 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/fixed-assets/fixed-assets.html"));
            request134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request134.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request134;
            request134 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_fixed-assets_fixed-assets.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets");
            WebTestRequest request135 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets"));
            request135.Method = "OPTIONS";
            request135.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request135.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request135Body = new StringHttpBody();
            request135Body.ContentType = "";
            request135Body.InsertByteOrderMark = false;
            request135Body.BodyString = "";
            request135.Body = request135Body;
            yield return request135;
            request135 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");
            WebTestRequest request136 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            request136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request136.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request136;
            request136 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");
            WebTestRequest request137 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.htm" +
                    "l"));
            request137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request137.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request137;
            request137 = null;
            webTest.EndTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");
            WebTestRequest request138 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            request138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request138.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request138;
            request138 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");
            WebTestRequest request139 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            request139.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request139.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request139;
            request139 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");
            WebTestRequest request140 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            request140.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request140.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request140;
            request140 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets");
            WebTestRequest request141 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets"));
            request141.Method = "OPTIONS";
            request141.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request141.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request141Body = new StringHttpBody();
            request141Body.ContentType = "";
            request141Body.InsertByteOrderMark = false;
            request141Body.BodyString = "";
            request141.Body = request141Body;
            yield return request141;
            request141 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings");
            WebTestRequest request142 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings"));
            request142.Method = "OPTIONS";
            request142.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request142.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request142Body = new StringHttpBody();
            request142Body.ContentType = "";
            request142Body.InsertByteOrderMark = false;
            request142Body.BodyString = "";
            request142.Body = request142Body;
            yield return request142;
            request142 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_classes");
            WebTestRequest request143 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/classes"));
            request143.Method = "OPTIONS";
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request143.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request143Body = new StringHttpBody();
            request143Body.ContentType = "";
            request143Body.InsertByteOrderMark = false;
            request143Body.BodyString = "";
            request143.Body = request143Body;
            yield return request143;
            request143 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_classes");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_groups");
            WebTestRequest request144 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/groups"));
            request144.Method = "OPTIONS";
            request144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request144.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request144Body = new StringHttpBody();
            request144Body.ContentType = "";
            request144Body.InsertByteOrderMark = false;
            request144Body.BodyString = "";
            request144.Body = request144Body;
            yield return request144;
            request144 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_groups");

            //WebTestRequest request145 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/tasks"));
            //request145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request145.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request145;
            //request145 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings_reasons");
            WebTestRequest request146 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings/reasons"));
            request146.Method = "OPTIONS";
            request146.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request146.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request146Body = new StringHttpBody();
            request146Body.ContentType = "";
            request146Body.InsertByteOrderMark = false;
            request146Body.BodyString = "";
            request146.Body = request146Body;
            yield return request146;
            request146 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings_reasons");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings_origins");
            WebTestRequest request147 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings/origins"));
            request147.Method = "OPTIONS";
            request147.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request147Body = new StringHttpBody();
            request147Body.ContentType = "";
            request147Body.InsertByteOrderMark = false;
            request147Body.BodyString = "";
            request147.Body = request147Body;
            yield return request147;
            request147 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings_origins");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings_locations");
            WebTestRequest request148 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings/locations"));
            request148.Method = "OPTIONS";
            request148.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request148.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request148Body = new StringHttpBody();
            request148Body.ContentType = "";
            request148Body.InsertByteOrderMark = false;
            request148Body.BodyString = "";
            request148.Body = request148Body;
            yield return request148;
            request148 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings_locations");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings_partners");
            WebTestRequest request149 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings/partners"));
            request149.Method = "OPTIONS";
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request149Body = new StringHttpBody();
            request149Body.ContentType = "";
            request149Body.InsertByteOrderMark = false;
            request149Body.BodyString = "";
            request149.Body = request149Body;
            yield return request149;
            request149 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings_partners");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_settings_types");
            WebTestRequest request150 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/settings/types"));
            request150.Method = "OPTIONS";
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request150Body = new StringHttpBody();
            request150Body.ContentType = "";
            request150Body.InsertByteOrderMark = false;
            request150Body.BodyString = "";
            request150.Body = request150Body;
            yield return request150;
            request150 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_settings_types");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_overview");
            WebTestRequest request151 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/overview"));
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request151;
            request151 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_overview");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_overview_1");
            WebTestRequest request152 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/overview"));
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request152;
            request152 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_overview_1");

            webTest.EndTransaction(WebBTPrefix + "FixedAssetsClick");
            #endregion

            #region ClickAllAssets
            webTest.BeginTransaction(WebBTPrefix + "ClickAllAssets");
            WebRequestPrefix = "CAA_";

            //WebTestRequest request154 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            //request154.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/FixedAssets/FixedAssetsDashboard/All");
            //yield return request154;
            //request154 = null;

            webTest.BeginTransaction(WebRequestPrefix + "fixed-assets_assets_listing_ui-all-listing.html");
            WebTestRequest request155 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/fixed-assets/assets/listing/ui-all-listing.html"));
            request155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request155.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request155;
            request155 = null;
            webTest.EndTransaction(WebRequestPrefix + "fixed-assets_assets_listing_ui-all-listing.html");

            webTest.BeginTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");
            WebTestRequest request157 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            request157.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request157;
            request157 = null;
            webTest.EndTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");
            WebTestRequest request158 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request158.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request158;
            request158 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");
            WebTestRequest request159 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            request159.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request159.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request159;
            request159 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");
            WebTestRequest request160 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/ui-list-view.html"));
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request160;
            request160 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");

            //WebTestRequest request156 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/tasks"));
            //request156.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request156;
            //request156 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview");
            WebTestRequest request170 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse/overview"));
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request170;
            request170 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_buckets_view_ui-buckets-carousel.html");
            WebTestRequest request171 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request171;
            request171 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_buckets_view_ui-buckets-carousel.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-bucket-view.html");
            WebTestRequest request172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-bucket-view.html"));
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request172;
            request172 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-bucket-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");
            WebTestRequest request162 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            request162.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request162.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request162;
            request162 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");
            WebTestRequest request163 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request163;
            request163 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");
            WebTestRequest request164 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request164;
            request164 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");
            WebTestRequest request165 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request165;
            request165 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");
            WebTestRequest request166 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request166;
            request166 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");
            WebTestRequest request167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request167;
            request167 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");
            WebTestRequest request168 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request168;
            request168 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");

            webTest.BeginTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");
            WebTestRequest request173 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request173;
            request173 = null;
            webTest.EndTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse");
            WebTestRequest request161 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse"));
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request161.QueryStringParameters.Add("asc", "true", false, false);
            request161.QueryStringParameters.Add("limit", "20", false, false);
            request161.QueryStringParameters.Add("offset", "0", false, false);
            request161.QueryStringParameters.Add("orderBy", "assetCode", false, false);
            yield return request161;
            request161 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse");

            //WebTestRequest request176 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request176.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request176.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request176.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request176;
            //request176 = null;

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");
            WebTestRequest request169 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            request169.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request169.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request169;
            request169 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");
            WebTestRequest request174 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request174;
            request174 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");
            WebTestRequest request175 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            request175.ThinkTime = 2;
            request175.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request175;
            request175 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");

            webTest.EndTransaction(WebBTPrefix + "ClickAllAssets");
            #endregion

            #region ClickActive
            webTest.BeginTransaction(WebBTPrefix + "ClickActive");
            WebRequestPrefix = "CA_";

            webTest.BeginTransaction(WebRequestPrefix + "assets_listing_ui-active-listing.html");
            WebTestRequest request177 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/fixed-assets/assets/listing/ui-active-listing.html"));
            request177.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request177.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request177;
            request177 = null;
            webTest.EndTransaction(WebRequestPrefix + "assets_listing_ui-active-listing.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview_1");
            WebTestRequest request179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse/overview"));
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request179;
            request179 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview_1");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries-stacked");
            WebTestRequest request180 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries-stacked" +
                    ".html"));
            request180.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request180.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request180;
            request180 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries-stacked");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");
            WebTestRequest request181 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            request181.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request181;
            request181 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");
            WebTestRequest request182 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
                    "ed.html"));
            request182.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request182;
            request182 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-laterals.html");
            WebTestRequest request183 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-laterals.html"));
            request183.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request183.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request183;
            request183 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-laterals.html");

            webTest.BeginTransaction(WebRequestPrefix + "filters_select_ui-list-select-filter.html");
            WebTestRequest request184 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/select/ui-list-select-filter.html"));
            request184.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request184.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request184;
            request184 = null;
            webTest.EndTransaction(WebRequestPrefix + "filters_select_ui-list-select-filter.html");

            webTest.BeginTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html");
            WebTestRequest request185 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/date/ui-list-date-filter.html"));
            request185.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request185.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request185;
            request185 = null;
            webTest.EndTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html");

            webTest.BeginTransaction(WebRequestPrefix + "filters_lookup_ui-list-lookup-filter.html");
            WebTestRequest request186 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/lookup/ui-list-lookup-filter.html"));
            request186.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request186.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request186;
            request186 = null;
            webTest.EndTransaction(WebRequestPrefix + "filters_lookup_ui-list-lookup-filter.html");

            webTest.BeginTransaction(WebRequestPrefix + "partials_filters_price_ui-list-price-filter.html");
            WebTestRequest request187 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/price/ui-list-price-filter.html"));
            request187.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request187.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request187;
            request187 = null;
            webTest.EndTransaction(WebRequestPrefix + "partials_filters_price_ui-list-price-filter.html");

            //WebTestRequest request178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/tasks"));
            //request178.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request178.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request178;
            //request178 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_1");
            WebTestRequest request188 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse"));
            request188.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request188.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request188.QueryStringParameters.Add("asc", "true", false, false);
            request188.QueryStringParameters.Add("limit", "20", false, false);
            request188.QueryStringParameters.Add("offset", "0", false, false);
            request188.QueryStringParameters.Add("orderBy", "assetCode", false, false);
            request188.QueryStringParameters.Add("status", "Active", false, false);
            yield return request188;
            request188 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_1");

            webTest.BeginTransaction(WebRequestPrefix + "bundles_fonts_glyphicons-halflings-regular.eot");
            WebTestRequest reques198 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16890/bundles/fonts/glyphicons-halflings-regular.eot"));
            reques198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques198.QueryStringParameters.Add("", "", false, false);
            yield return reques198;
            reques198 = null;
            webTest.EndTransaction(WebRequestPrefix + "bundles_fonts_glyphicons-halflings-regular.eot");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_regimes");
            WebTestRequest request189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/regimes"));
            request189.Method = "OPTIONS";
            request189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request189Body = new StringHttpBody();
            request189Body.ContentType = "";
            request189Body.InsertByteOrderMark = false;
            request189Body.BodyString = "";
            request189.Body = request189Body;
            yield return request189;
            request189 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_regimes");

            webTest.BeginTransaction(WebRequestPrefix + "api_default");
            WebTestRequest request190 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/default"));
            request190.ThinkTime = 13;
            request190.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request190.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request190;
            request190 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_default");

            //WebTestRequest request191 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request191.ThinkTime = 16;
            //request191.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request191.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request191.QueryStringParameters.Add("since", "2017-11-23T10:09:42.406Z", false, false);
            //yield return request191;
            //request191 = null;

            webTest.EndTransaction(WebBTPrefix + "ClickActive");
            #endregion

            #region SelectAllDepricateAll
            webTest.BeginTransaction(WebBTPrefix + "SelectAllDepricateAll");
            WebRequestPrefix = "SADA_";

            //WebTestRequest request192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            //request192.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/FixedAssets/FixedAssetsDashboard/BatchDepreciation");
            //yield return request192;
            //request192 = null;

            webTest.BeginTransaction(WebRequestPrefix + "form_batch-depreciation_batch-depreciation.html");
            WebTestRequest request193 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/fixed-assets/assets/form/batch-depreciation/batch-depreciation.html"));
            request193.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request193.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request193;
            request193 = null;
            webTest.EndTransaction(WebRequestPrefix + "form_batch-depreciation_batch-depreciation.html");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_form_view_ui-form-view.html");
            WebTestRequest request195 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/view/ui-form-view.html"));
            request195.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request195.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request195;
            request195 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_form_view_ui-form-view.html");

            //WebTestRequest request194 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/tasks"));
            //request194.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request194.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request194;
            //request194 = null;

            webTest.BeginTransaction(WebRequestPrefix + "fixedassets_assets_batchdepreciations_initparams");
            WebTestRequest request197 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/batchdepreciations/initparams"));
            request197.Method = "POST";
            request197.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request197.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request197Body = new StringHttpBody();
            request197Body.ContentType = "application/json;charset=utf-8";
            request197Body.InsertByteOrderMark = false;
            request197Body.BodyString = "{\"fixedAssetIds\":[],\"groupIds\":[],\"depreciateAll\":true}";
            request197.Body = request197Body;
            yield return request197;
            request197 = null;
            webTest.EndTransaction(WebRequestPrefix + "fixedassets_assets_batchdepreciations_initparams");

            var TimePeriodList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var TimePeriod = TimePeriodList.fromPeriod.periodNumber.ToString();
            var YearPeriod = TimePeriodList.fromPeriod.year.ToString();

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html");
            WebTestRequest request198 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries.html"));
            request198.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request198;
            request198 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_form_view_form-field_nf-form-field.html");
            WebTestRequest request199 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/view/form-field/nf-form-field.html"));
            request199.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request199.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request199;
            request199 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_form_view_form-field_nf-form-field.html");

            webTest.BeginTransaction(WebRequestPrefix + "form_fields_field-group_view_nf-field-group.html");
            WebTestRequest request200 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/field-group/view/nf-field-group.html"));
            request200.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request200;
            request200 = null;
            webTest.EndTransaction(WebRequestPrefix + "form_fields_field-group_view_nf-field-group.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_header_nf-multicolumn-headers.html");
            WebTestRequest request201 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/field-group/multicolumn/view/header/nf-multicolumn-headers.html"));
            request201.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request201.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request201;
            request201 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_header_nf-multicolumn-headers.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_row_nf-multicolumn-row-labels.html");
            WebTestRequest request202 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/field-group/multicolumn/view/row/nf-multicolumn-row-labels.html"));
            request202.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request202.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request202;
            request202 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_row_nf-multicolumn-row-labels.html");

            webTest.BeginTransaction(WebRequestPrefix + "base_static-field_view_nf-static-field.html");
            WebTestRequest request203 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/base/static-field/view/nf-static-field.html"));
            request203.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request203.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request203;
            request203 = null;
            webTest.EndTransaction(WebRequestPrefix + "base_static-field_view_nf-static-field.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_form_fields_base_finder_view_nf-finder.html");
            WebTestRequest request204 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/base/finder/view/nf-finder.html"));
            request204.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request204.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request204;
            request204 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_form_fields_base_finder_view_nf-finder.html");

            webTest.BeginTransaction(WebRequestPrefix + "form_fields_base_checkbox_view_nf-checkbox.html");
            WebTestRequest request205 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/fields/base/checkbox/view/nf-checkbox.html"));
            request205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request205.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request205;
            request205 = null;
            webTest.EndTransaction(WebRequestPrefix + "form_fields_base_checkbox_view_nf-checkbox.html");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_form_actions_view_nf-field-actions.html");
            WebTestRequest request206 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/form/actions/view/nf-field-actions.html"));

            request206.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request206.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request206;
            request206 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_form_actions_view_nf-field-actions.html");

            //WebTestRequest request196 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request196.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request196.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request196.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request196;
            //request196 = null;

            webTest.EndTransaction(WebBTPrefix + "SelectAllDepricateAll");
            #endregion

            #region select TimePeriod
            webTest.BeginTransaction(WebBTPrefix + "SelectTimePeriod");
            WebRequestPrefix = "STP_";

            int[] AllowedValues = new int[] { 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110 };
            Random Objrandom = new Random();
            int Offsetvalue = 0;// AllowedValues[Objrandom.Next(AllowedValues.Length)];

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_timeperiodsframe");
            WebTestRequest request207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/timeperiodsframe"));

            request207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request207.QueryStringParameters.Add("fromPeriodNumber", TimePeriod, false, false);
            request207.QueryStringParameters.Add("fromYear", YearPeriod, false, false);
            request207.QueryStringParameters.Add("includeZeroPeriods", "false", false, false);
            request207.QueryStringParameters.Add("limit", "10", false, false);
            request207.QueryStringParameters.Add("offset", Offsetvalue.ToString(), false, false);
            request207.QueryStringParameters.Add("tillPeriodNumber", "1", false, false);
            request207.QueryStringParameters.Add("tillYear", "9999", false, false);
            yield return request207;
            request207 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_timeperiodsframe");


            #region Time calculation
            var DateTimeList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var PageList = DateTimeList.page.Random();
            var TimePeriodInc = PageList.periodNumber.ToString("00");

            //  int TimePeriodInc = Int32.Parse(PeriodNumber);      //selected period number in integer

            var Year = PageList.year.ToString();

            int updatedyear = Int32.Parse(Year);        //selected year in integer

            var Enddate = PageList.endDate.ToString();
            var Startdate = PageList.startDate.ToString();

            //  int TimePeriodInc;
            //  if (Int32.Parse(TimePeriod) != 12)
            //  {
            //      TimePeriodInc = Int32.Parse(TimePeriod) + 1;
            //  }
            //  else
            //  { TimePeriodInc = 01; }
            //
            //  int i;
            //  for (i = 0; PageList[i].periodNumber != TimePeriodInc; i++) ;
            //
            //  string Enddate = PageList[i].enddate.ToString();
            //  string Startdate = PageList[i].startdate.ToString();
            //  string updatedyear = PageList[i].year.ToString();

            #endregion


            //WebTestRequest request208 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request208.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request208.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request208.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request208;
            //request208 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_allperiodsareopen");
            WebTestRequest request209 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/allperiodsareopen"));
            request209.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request209.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request209.QueryStringParameters.Add("fromPeriodNumber", TimePeriodInc.ToString(), false, false);
            request209.QueryStringParameters.Add("fromYear", updatedyear.ToString(), false, false);
            request209.QueryStringParameters.Add("tillPeriodNumber", TimePeriodInc.ToString(), false, false);
            request209.QueryStringParameters.Add("tillYear", updatedyear.ToString(), false, false);
            yield return request209;
            request209 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_allperiodsareopen");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_allperiodsareopen_1");
            WebTestRequest request210 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/allperiodsareopen"));

            request210.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request210.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request210.QueryStringParameters.Add("fromPeriodNumber", TimePeriod, false, false);
            request210.QueryStringParameters.Add("fromYear", YearPeriod, false, false);
            request210.QueryStringParameters.Add("tillPeriodNumber", TimePeriodInc.ToString(), false, false);
            request210.QueryStringParameters.Add("tillYear", updatedyear.ToString(), false, false);
            yield return request210;
            request210 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_allperiodsareopen_1");



            //WebTestRequest request212 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));

            //request212.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request212.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request212.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request212;
            //request212 = null;

            webTest.EndTransaction(WebBTPrefix + "SelectTimePeriod");
            #endregion

            #region ClickDepricate
            webTest.BeginTransaction(WebBTPrefix + "ClickDepricate");
            WebRequestPrefix = "CD_";

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_timeperiodsframe_1");
            WebTestRequest request211 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/timeperiodsframe"));

            request211.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request211.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request211.QueryStringParameters.Add("fromPeriodNumber", TimePeriod, false, false);
            request211.QueryStringParameters.Add("fromYear", YearPeriod, false, false);
            request211.QueryStringParameters.Add("includeZeroPeriods", "false", false, false);
            request211.QueryStringParameters.Add("limit", "10", false, false);
            request211.QueryStringParameters.Add("offset", Offsetvalue.ToString(), false, false);
            request211.QueryStringParameters.Add("searchPattern", updatedyear + "%2F" + TimePeriodInc.ToString(), false, false);
            request211.QueryStringParameters.Add("tillPeriodNumber", "1", false, false);
            request211.QueryStringParameters.Add("tillYear", "9999", false, false);
            yield return request211;
            request211 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_timeperiodsframe_1");


            //WebTestRequest request213 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request213.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request213.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request213.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request213;
            //request213 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview_2");
            WebTestRequest request214 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse/overview"));
            request214.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request214.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request214;
            request214 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_overview_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_enabled");
            WebTestRequest request215 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/enabled"));
            request215.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request215.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request215;
            request215 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_enabled");

            //WebTestRequest request216 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/tasks"));
            //request216.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request216.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request216;
            //request216 = null;

            webTest.BeginTransaction(WebRequestPrefix + "assets_batchdepreciations_batchdepreciation");
            WebTestRequest request217 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/batchdepreciations/batchdepreciation"));
            request217.Method = "POST";
            request217.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request217.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request217Body = new StringHttpBody();
            request217Body.ContentType = "application/json;charset=utf-8";
            request217Body.InsertByteOrderMark = false;
            Depricate _depricate = new Depricate();
            _depricate.depreciateAll = true;
            _depricate.fixedAssetIds = new List<object>();
            _depricate.groupIds = new List<object>();
            _depricate.postInFirstOpenPeriod = false;
            _depricate.tillPeriod = new Tillperiod();
            _depricate.tillPeriod.isOpen = true;
            _depricate.tillPeriod.year = updatedyear;
            _depricate.tillPeriod.periodNumber = TimePeriodInc;
            _depricate.tillPeriod.startDate = Startdate;
            _depricate.tillPeriod.endDate = Enddate;
            request217Body.BodyString = JsonConvert.SerializeObject(_depricate, Formatting.None, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Include });
            request217.Body = request217Body;
            ExtractText extraction2 = new ExtractText();
            extraction2.StartsWith = "{\"diagnosticContextId\":\"";
            extraction2.EndsWith = "\"}";
            extraction2.IgnoreCase = false;
            extraction2.UseRegularExpression = false;
            extraction2.Required = true;
            extraction2.ExtractRandomMatch = false;
            extraction2.Index = 0;
            extraction2.HtmlDecode = true;
            extraction2.SearchInHeaders = false;
            extraction2.ContextParameterName = "diagnosticContextId";
            request217.ExtractValues += new EventHandler<ExtractionEventArgs>(extraction2.Extract);
            yield return request217;
            request217 = null;
            webTest.EndTransaction(WebRequestPrefix + "assets_batchdepreciations_batchdepreciation");

            string diagnosticContextId = webTest.Context["diagnosticContextId"].ToString();

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_2");
            WebTestRequest request218 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/assets/browse"));
            request218.ThinkTime = 12;
            request218.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request218.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request218.QueryStringParameters.Add("asc", "true", false, false);
            request218.QueryStringParameters.Add("limit", "20", false, false);
            request218.QueryStringParameters.Add("offset", "0", false, false);
            request218.QueryStringParameters.Add("orderBy", "assetCode", false, false);
            request218.QueryStringParameters.Add("regime", "Fiscal", false, false);
            request218.QueryStringParameters.Add("status", "Active", false, false);
            yield return request218;
            request218 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_assets_browse_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_diagnosticcontexts");
            WebTestRequest request228 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/diagnosticcontexts"));
            request228.Method = "OPTIONS";
            request228.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request228.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request228Body = new StringHttpBody();
            request228Body.ContentType = "";
            request228Body.InsertByteOrderMark = false;
            request228Body.BodyString = "";
            request228.Body = request228Body;
            yield return request228;
            request228 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_diagnosticcontexts");

            webTest.BeginTransaction(WebRequestPrefix + "api_fixedassets_diagnosticcontexts_1");
            WebTestRequest request229 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/fixedassets/diagnosticcontexts/" + diagnosticContextId + "/wait"));
            request229.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request229.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request229;
            request229 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_fixedassets_diagnosticcontexts_1");

            //WebTestRequest request219 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request219.ThinkTime = 2;
            //request219.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request219.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request219.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request219;
            //request219 = null;

            webTest.EndTransaction(WebBTPrefix + "ClickDepricate");
            #endregion

            

            if ((Convert.ToInt32(webTest.Context["iterationNo"])% Convert.ToInt32(webTest.Context["maxiterationNo"])) ==0)
            {
                foreach (var request in webTest.Logout(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "User Logout: " + threadData.UserName + " LogOutTime: " + DateTime.Now + "\r\n");
                Thread.Sleep(2000);
            }
        }
        
    }
    public class NeoFixedAsset_A : WebTest
    {
        NeoFixedAsset _NeoFixedAsset = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoFixedAsset_A()
        {
            if (_NeoFixedAsset == null)
                _NeoFixedAsset = new NeoFixedAsset(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext= this._textContext;
            return _NeoFixedAsset.GetRequestEnumerator(TwinfieldDBTenant.A, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoFixedAsset_B : WebTest
    {
        NeoFixedAsset _NeoFixedAsset = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoFixedAsset_B()
        {
            if (_NeoFixedAsset == null)
                _NeoFixedAsset = new NeoFixedAsset(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoFixedAsset.GetRequestEnumerator(TwinfieldDBTenant.B, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoFixedAsset_C : WebTest
    {
        NeoFixedAsset _NeoFixedAsset = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoFixedAsset_C()
        {
            if (_NeoFixedAsset == null)
                _NeoFixedAsset = new NeoFixedAsset(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoFixedAsset.GetRequestEnumerator(TwinfieldDBTenant.C, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoFixedAsset_D : WebTest
    {
        NeoFixedAsset _NeoFixedAsset = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoFixedAsset_D()
        {
            if (_NeoFixedAsset == null)
                _NeoFixedAsset = new NeoFixedAsset(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoFixedAsset.GetRequestEnumerator(TwinfieldDBTenant.D, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoFixedAsset_E : WebTest
    {
        NeoFixedAsset _NeoFixedAsset = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoFixedAsset_E()
        {
            if (_NeoFixedAsset == null)
                _NeoFixedAsset = new NeoFixedAsset(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoFixedAsset.GetRequestEnumerator(TwinfieldDBTenant.E, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
}
