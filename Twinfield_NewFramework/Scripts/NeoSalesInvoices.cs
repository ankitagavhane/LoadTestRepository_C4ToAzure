//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twinfield_NewFramework
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using Microsoft.VisualStudio.TestTools.LoadTesting;
    //using MicrosoftServicesTestLabs.Monitor.VSTSUnitTest;
    using System.Drawing;
    using System.Threading;
    using System.Data;
    using System.Reflection;
    using System.Linq;

    public class NeoSalesInvoices
    {
        WebTest webTest;
        private Dictionary<string, string> localDictionary;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();    //object of webTesRequestPlugin class to access the variables uniquely in each thread.
        private InputTableRecord testRecord;
        public Object assemblyinitializeLock = new Object();
        private WebTestContext _textContext;
        private object virtualuserId;
        private object doLogin;
        string OfficeManagementID = string.Empty;
        private string companyTypeDescription;

        public NeoSalesInvoices(WebTest webTest)
        {
            this.webTest = webTest;
            
        }
        public WebTestContext TestContext
        {
            get { return _textContext; }

            set { _textContext = value; }
        }
        
        public IEnumerator<WebTestRequest> GetRequestEnumerator(TwinfieldDBTenant DBTenant,string userDictionaryKey, WebTestRequestPlugin objPlugin)
        {
            var WebBTPrefix = TwinfieldScenarioPrefix.NSI_ + DBTenant.ToString() + "_";
            _textContext = webTest.Context;
            _textContext.TryGetValue("doLogin", out doLogin);
            _textContext.TryGetValue("UserId", out virtualuserId);

            SharedThreadData threadData;

            #region DoLogin
            if (Convert.ToBoolean(doLogin))
            {
                webTest.Context.CookieContainer = new System.Net.CookieContainer();

                try
                {
                    localDictionary = CustomDS.Instance.GetNextRowTwinfield(DBTenant, TwinfieldScenarioName.NeoSalesInvoices);
                    
                    threadData = new SharedThreadData(Convert.ToInt32(virtualuserId),this.TestContext);
                    threadData.UserName = localDictionary["UserName"];
                    threadData.Tenant = localDictionary["DBTenant"];
                    threadData.CustomerName = localDictionary["CustomerName"];
                    threadData.hasFullAccess = localDictionary["hasFullAccess"];
                    threadData.Password = AssemblyLoad.Password;
                    threadData.ScenarioPrefix = WebBTPrefix;
                    CustomDS.Instance.Save_NeoSalesInvoices_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.NeoSalesInvoices + " : " + DBTenant + " : LoggedIn : " + virtualuserId); 
                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not fetched for:" + TwinfieldScenarioName.NeoSalesInvoices);
                    throw new Exception("Error in reading data for " + TwinfieldScenarioName.NeoSalesInvoices + " : " + ex.Message);

                }
                if(threadData.hasFullAccess=="0")
                {
                    foreach (var request in webTest.LaunchLogin(threadData, objPlugin)) yield return request;
                }
                else
                {
                    foreach (var request in webTest.LaunchLogin_FullAccess(threadData, objPlugin)) yield return request;
                }
                //RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
                CustomDS.Instance.Save_NeoSalesInvoices_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                //Logger.WriteGeneralLog("Create Invoice : Vuser - " + Convert.ToInt32(virtualuserId).ToString() + " Logged In");
            }
            else
            {
                try
                {
                    threadData = CustomDS.Instance.Get_NeoSalesInvoices_UserData(Convert.ToInt32(virtualuserId), DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.NeoSalesInvoices + " : " + DBTenant + " : NotLoggedIn : " + virtualuserId);

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not saved for :" + TwinfieldScenarioName.NeoSalesInvoices);
                    throw new Exception("Error in getting data for " + TwinfieldScenarioName.NeoSalesInvoices + " : " + ex.Message);

                }
            }
            #endregion DoLogin

            webTest.Context.CookieContainer = new System.Net.CookieContainer();
            WebBTPrefix = threadData.ScenarioPrefix;
            string WebRequestPrefix = "";

            var settings = new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                MissingMemberHandling = MissingMemberHandling.Ignore
            };

            #region SalesTabClick
            webTest.BeginTransaction(WebBTPrefix + "SalesTabClick1");
            WebRequestPrefix = "STC1_";

            webTest.BeginTransaction(WebRequestPrefix + "en-GB_sales_sales.html");
            WebTestRequest request134 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/sales.html"));
            request134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request134.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request134;
            request134 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_sales_sales.html");


            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices");
            WebTestRequest request135 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            request135.Method = "OPTIONS";
            request135.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request135.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request135Body = new StringHttpBody();
            request135Body.ContentType = "";
            request135Body.InsertByteOrderMark = false;
            request135Body.BodyString = "";
            request135.Body = request135Body;
            yield return request135;
            request135 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices");

            //Found in Build-16005
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_revenuetypes");
            WebTestRequest request1380 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/revenuetypes"));
            request1380.Method = "OPTIONS";
            request1380.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request1380.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request1380Body = new StringHttpBody();
            request1380Body.ContentType = "";
            request1380Body.InsertByteOrderMark = false;
            request1380Body.BodyString = "";
            request1380.Body = request1380Body;
            yield return request1380;
            request1380 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_revenuetypes");
            //

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");
            WebTestRequest request136 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            request136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request136.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request136;
            request136 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");
            WebTestRequest request137 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            request137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request137.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request137;
            request137 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.html");
            WebTestRequest request138 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.html"));
            request138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request138.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request138;
            request138 = null;
            webTest.EndTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers");
            WebTestRequest request139 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request139.Method = "OPTIONS";
            request139.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request139.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request139Body = new StringHttpBody();
            request139Body.ContentType = "";
            request139Body.InsertByteOrderMark = false;
            request139Body.BodyString = "";
            request139.Body = request139Body;
            yield return request139;
            request139 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");
            WebTestRequest request140 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            request140.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request140.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request140;
            request140 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");
            WebTestRequest request141 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            request141.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request141.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request141;
            request141 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview");
            WebTestRequest request142 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request142.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request142.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request142;
            request142 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_1");
            WebTestRequest request143 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request143.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request143;
            request143 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_1");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction(WebRequestPrefix + "api_tasks");
            WebTestRequest request144 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request144.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request144;
            request144 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_tasks");

            //WebTestRequest request145 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request145.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request145.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request145;
            //request145 = null;

            webTest.EndTransaction(WebBTPrefix + "SalesTabClick1");
            #endregion
            Thread.Sleep(2000);

            #region NewInvoice
            webTest.BeginTransaction(WebBTPrefix + "NewInvoice");
            WebRequestPrefix = "NI_";

            webTest.BeginTransaction(WebRequestPrefix + "UI");
            WebTestRequest request146 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            request146.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices/NewInvoice");
            yield return request146;
            request146 = null;
            webTest.EndTransaction(WebRequestPrefix + "UI");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB_sales_invoicing_form_invoice.html");
            WebTestRequest request147 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice.html"));
            request147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request147;
            request147 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_sales_invoicing_form_invoice.html");

            //Added in Build#66.7.0-5 - AnkitaG
            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_timeline_ui-timeline-component.html");
            WebTestRequest request156 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/timeline/ui-timeline-component.html"));
            request156.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request156;
            request156 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_timeline_ui-timeline-component.html");

            //WebTestRequest request148 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice-translations.html"));
            //request148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request148.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request148;
            //request148 = null;

            //Found in Build-16005
            webTest.BeginTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");
            WebTestRequest request1520 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            request1520.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1520.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1520;
            request1520 = null;
            webTest.EndTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");
            WebTestRequest request1530 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            request1530.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1530.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1530;
            request1530 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "document_articles-counter_articles-counter.html");
            WebTestRequest request149 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/articles-counter/articles-counter.html"));
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request149;
            request149 = null;
            webTest.EndTransaction(WebRequestPrefix + "document_articles-counter_articles-counter.html");

            webTest.BeginTransaction(WebRequestPrefix + "document-action-popup_document-action-popup.htm");
            WebTestRequest request150 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/document/document-action-popup/document-action-popup.htm" +
                    "l"));
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request150;
            request150 = null;
            webTest.EndTransaction(WebRequestPrefix + "document-action-popup_document-action-popup.htm");

            webTest.BeginTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");
            WebTestRequest request1560 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            request1560.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1560.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1560;
            request1560 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "sales_invoicing_form_invoice-translations.html");
            WebTestRequest request168 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/nl-NL/sales/invoicing/form/invoice-translations.html"));
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request168;
            request168 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_invoicing_form_invoice-translations.html");

            //WebTestRequest request1640 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            //request1640.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request1640.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request1640;
            //request1640 = null;

            //WebTestRequest request1830 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-discount/document-discount.html"));
            //request1830.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request1830.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request1830;
            //request1830 = null;

            ///////


            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement");
            WebTestRequest request151 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement"));
            request151.Method = "OPTIONS";
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request151Body = new StringHttpBody();
            request151Body.ContentType = "";
            request151Body.InsertByteOrderMark = false;
            request151Body.BodyString = "";
            request151.Body = request151Body;
            yield return request151;
            request151 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_settings");
            WebTestRequest request152 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request152;
            request152 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_settings");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_settings_1");
            WebTestRequest request153 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request153.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request153.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request153;
            request153 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_settings_1");

            //WebTestRequest request154 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/proposedinvoice"));
            //request154.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request154.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request154;
            //request154 = null;

            webTest.BeginTransaction(WebRequestPrefix + "en-GB_sales_invoicing_form_invoice-pages.html");
            WebTestRequest request155 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/form/invoice-pages.html"));
            request155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request155.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request155;
            request155 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_sales_invoicing_form_invoice-pages.html");

            //Added in Build#66.7.0-5 - AnkitaG
            webTest.BeginTransaction(WebRequestPrefix + "ui_timeline_internal_ui-timeline-pagination.html");
            WebTestRequest request167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/_ui/timeline/internal/ui-timeline-pagination.html"));
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request167;
            request167 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_timeline_internal_ui-timeline-pagination.html");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction(WebRequestPrefix + "api_tasks_1");
            WebTestRequest reques156 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            reques156.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques156;
            reques156 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_tasks_1");

            //Start : Added in Build#66.7.0-5 - AnkitaG

            webTest.BeginTransaction(WebRequestPrefix + "document-attachments_document-attachments.html");
            WebTestRequest request173 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/sales/document/document-attachments/document-attachments.html"));
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request173;
            request173 = null;
            webTest.EndTransaction(WebRequestPrefix + "document-attachments_document-attachments.html");

            webTest.BeginTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html");
            WebTestRequest request172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request172;
            request172 = null;
            webTest.EndTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_blobstorage");
            WebTestRequest request159 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/blobstorage"));
            request159.Method = "OPTIONS";
            request159.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request159.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request159Body = new StringHttpBody();
            request159Body.ContentType = "";
            request159Body.InsertByteOrderMark = false;
            request159Body.BodyString = "";
            request159.Body = request159Body;
            yield return request159;
            request159 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_blobstorage");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries");
            WebTestRequest request157 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request157.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request157;
            request157 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries");


            webTest.BeginTransaction(WebRequestPrefix + "document_sections_address_address-section.html");
            WebTestRequest request162 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/address/address-section.html"));
            request162.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request162.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request162;
            request162 = null;
            webTest.EndTransaction(WebRequestPrefix + "document_sections_address_address-section.html");

            webTest.BeginTransaction(WebRequestPrefix + "sales_document_sections_text_text-section.html");
            WebTestRequest request163 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/text/text-section.html"));
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request163;
            request163 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_document_sections_text_text-section.html");

            webTest.BeginTransaction(WebRequestPrefix + "sales_document_sections_document-section.html");
            WebTestRequest request164 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-section.html"));
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request164;
            request164 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_document_sections_document-section.html");

            webTest.BeginTransaction(WebRequestPrefix + "sections_payment-reference_payment-reference.html");
            WebTestRequest request165 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/payment-reference/payment-reference.html"));
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request165;
            request165 = null;
            webTest.EndTransaction(WebRequestPrefix + "sections_payment-reference_payment-reference.html");

            webTest.BeginTransaction(WebRequestPrefix + "document_sections_footer_footer-section.html");
            WebTestRequest request166 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/footer/footer-section.html"));
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request166;
            request166 = null;
            webTest.EndTransaction(WebRequestPrefix + "document_sections_footer_footer-section.html");

            webTest.BeginTransaction(WebRequestPrefix + "sales_document_document-page-break-labels.html");
            WebTestRequest reques167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/document-page-break-labels.html"));
            reques167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques167;
            reques167 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_document_document-page-break-labels.html");

            webTest.BeginTransaction(WebRequestPrefix + "sections_information_information-section.html");
            WebTestRequest request1720 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/information/information-section.html"));
            request1720.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1720.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1720;
            request1720 = null;
            webTest.EndTransaction(WebRequestPrefix + "sections_information_information-section.html");


            webTest.BeginTransaction(WebRequestPrefix + "sections_lines-table_lines-table-view.html");
            WebTestRequest request170 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/lines-table/lines-table-view.html"));
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request170;
            request170 = null;
            webTest.EndTransaction(WebRequestPrefix + "sections_lines-table_lines-table-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "sections_document-totals_document-totals.html");
            WebTestRequest request171 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/document-totals/document-totals.html"));
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request171;
            request171 = null;
            webTest.EndTransaction(WebRequestPrefix + "sections_document-totals_document-totals.html");

            webTest.BeginTransaction(WebRequestPrefix + "lines-table-edit_lines-table-edit-view.html");
            WebTestRequest request1780 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/lines-table-edit/lines-table-edit-view.html"));
            request1780.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request1780.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request1780;
            request1780 = null;
            webTest.EndTransaction(WebRequestPrefix + "lines-table-edit_lines-table-edit-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "document_sections_customer_customer-section.html");
            WebTestRequest reques172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/customer/customer-section.html"));
            reques172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques172;
            reques172 = null;
            webTest.EndTransaction(WebRequestPrefix + "document_sections_customer_customer-section.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_sender");
            WebTestRequest reques173 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/sender"));
            reques173.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques173;
            reques173 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_sender");

            //WebTestRequest request158 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/document-attachments/document-attachments.html"));
            //request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request158.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request158;
            //request158 = null;


            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_default_last");
            WebTestRequest request160 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/default/last/"));
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ExtractText extraction2 = new ExtractText();
            extraction2.StartsWith = "\"paymentReference\":\"";
            extraction2.EndsWith = "\"},\"";
            extraction2.IgnoreCase = false;
            extraction2.UseRegularExpression = false;
            extraction2.Required = true;
            extraction2.ExtractRandomMatch = false;
            extraction2.Index = 0;
            extraction2.HtmlDecode = true;
            extraction2.SearchInHeaders = false;
            extraction2.ContextParameterName = "paymentReference";
            request160.ExtractValues += new EventHandler<ExtractionEventArgs>(extraction2.Extract);
            yield return request160;
            request160 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_default_last");

            string paymentReference = webTest.Context["paymentReference"].ToString();

            webTest.BeginTransaction(WebRequestPrefix + "api_bookkeeping_accounts");
            WebTestRequest request161 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/bookkeeping/accounts"));
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request161.QueryStringParameters.Add("level", "3", false, false);
            request161.QueryStringParameters.Add("types", "Project", false, false);
            request161.QueryStringParameters.Add("limit", "1", false, false);
            yield return request161;
            request161 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_bookkeeping_accounts");


            webTest.BeginTransaction(WebRequestPrefix + "sales_invoicing_form_invoice-translations.html_1");
            WebTestRequest request174 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/16853/nl-NL/sales/invoicing/form/invoice-translations.html"));
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request174;
            request174 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_invoicing_form_invoice-translations.html_1");

            //Removed in Build#6.79.0-4
            //WebTestRequest request175 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplate/last/en-GB"));
            //request175.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request175;
            //request175 = null;
            //End : Added in Build#66.7.0-5 - AnkitaG


            //WebTestRequest request174 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_1");
            WebTestRequest reques174 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques174.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques174.QueryStringParameters.Add("asc", "true", false, false);
            reques174.QueryStringParameters.Add("limit", "1000", false, false);
            reques174.QueryStringParameters.Add("offset", "0", false, false);
            reques174.QueryStringParameters.Add("orderBy", "name", false, false);
            yield return reques174;
            reques174 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_1");

            #region Enter Customer Name
            string CustomerName = threadData.CustomerName;
            char[] splitCustomer = CustomerName.ToCharArray();
            string FirstLetter = splitCustomer[0].ToString();
            string SecondLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString();
            string ThirdLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString() + splitCustomer[2].ToString();

            string CustomerNameEncode = Uri.EscapeDataString(CustomerName); //Server reads encoded form of customer name.
            #endregion


            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_2");
            WebTestRequest reques175 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques175.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques175;
            reques175 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_2");

            webTest.BeginTransaction(WebRequestPrefix + "sections_customer-view_customer-view.html");
            WebTestRequest request176 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/document/sections/customer-view/customer-view.html"));
            request176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request176.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request176;
            request176 = null;
            webTest.EndTransaction(WebRequestPrefix + "sections_customer-view_customer-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_currencies_rate");
            WebTestRequest request200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            request200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request200.QueryStringParameters.Add("code", "EUR", false, false);
            request200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return request200;
            request200 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_currencies_rate");

            //WebTestRequest request177 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_3");
            WebTestRequest request177 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request177.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request177.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request177.QueryStringParameters.Add("asc", "true", false, false);
            request177.QueryStringParameters.Add("limit", "10", false, false);
            request177.QueryStringParameters.Add("offset", "0", false, false);
            request177.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request177.QueryStringParameters.Add("searchBy", "2", false, false);
            request177.QueryStringParameters.Add("searchPattern", FirstLetter, false, false);
            yield return request177;
            request177 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_3");

            // WebTestRequest request178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_4");
            WebTestRequest request178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request178.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request178.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request178.QueryStringParameters.Add("asc", "true", false, false);
            request178.QueryStringParameters.Add("limit", "10", false, false);
            request178.QueryStringParameters.Add("offset", "0", false, false);
            request178.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request178.QueryStringParameters.Add("searchBy", "2", false, false);
            request178.QueryStringParameters.Add("searchPattern", SecondLetter, false, false);
            yield return request178;
            request178 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_4");

            //WebTestRequest request179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_5");
            WebTestRequest request179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request179.QueryStringParameters.Add("asc", "true", false, false);
            request179.QueryStringParameters.Add("limit", "10", false, false);
            request179.QueryStringParameters.Add("offset", "0", false, false);
            request179.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request179.QueryStringParameters.Add("searchBy", "2", false, false);
            request179.QueryStringParameters.Add("searchPattern", ThirdLetter, false, false);
            yield return request179;
            request179 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_5");

            //WebTestRequest request180 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request180.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request180.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request180.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request180;
            //request180 = null;

            //WebTestRequest request181 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/summaries"));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_6");
            WebTestRequest request181 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request181.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request181.QueryStringParameters.Add("asc", "true", false, false);
            request181.QueryStringParameters.Add("limit", "10", false, false);
            request181.QueryStringParameters.Add("offset", "0", false, false);
            request181.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request181.QueryStringParameters.Add("searchBy", "2", false, false);
            request181.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request181;
            request181 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_6");

            #region Extraction Rule for Customer Details
            var CustomerObjectList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var CustomerObject = CustomerObjectList.items.Random();
            //var CustomerName = CustomerObject.name.ToString();
            var CustomerID = CustomerObject.id.ToString();
            var CustomerCode = CustomerObject.number.ToString();
            var CustomerAddressLine1 = CustomerObject.addressLine1.ToString();
            #endregion

            webTest.EndTransaction(WebBTPrefix + "NewInvoice");
            #endregion
            Thread.Sleep(2000);

            #region Select Customer
            webTest.BeginTransaction(WebBTPrefix + "SelectCustomer");
            WebRequestPrefix = "SC_";

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_7");
            WebTestRequest request182 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request182.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request182.QueryStringParameters.Add("asc", "true", false, false);
            request182.QueryStringParameters.Add("limit", "10", false, false);
            request182.QueryStringParameters.Add("offset", "0", false, false);
            request182.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request182.QueryStringParameters.Add("searchBy", "2", false, false);
            yield return request182;
            request182 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_7");

            //WebTestRequest request188 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request188.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request188.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request188.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request188;
            //request188 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_8");
            WebTestRequest reques182 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques182.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques182.QueryStringParameters.Add("asc", "true", false, false);
            reques182.QueryStringParameters.Add("limit", "10", false, false);
            reques182.QueryStringParameters.Add("offset", "0", false, false);
            reques182.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            reques182.QueryStringParameters.Add("searchBy", "2", false, false);
            yield return reques182;
            reques182 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_8");

            // WebTestRequest request183 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/customer/" + CustomerID + ""));
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_9");
            WebTestRequest request183 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/" + CustomerID + ""));
            request183.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request183.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request183;
            request183 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_9");

            #region Extracting Customer Details
            var CustomerDetailsList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);
            var CustomerAddressList = CustomerDetailsList.addresses.Random();
            var CustomerCity = CustomerAddressList.city.ToString();
            var CustomerCountry = CustomerAddressList.countryCode.ToString();
            var CustomerEmail = CustomerAddressList.email.ToString();
            var CustomerContactPerson = CustomerAddressList.forAttentionOf.ToString();
            var CustomerPostelCode = CustomerAddressList.postalCode.ToString();
            var CustomerVATnumber = CustomerAddressList.vatNumber.ToString();

            var culture = CustomerDetailsList.culture.ToString();
            #endregion

            //WebTestRequest request227 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customerextensions/c3420a58-d0d7-49cb-afbb-4935159f7302"));
            //request227.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request227.Headers.Add(new WebTestRequestHeader("If-Match", "\"AQAAAQEBAAA=v14\""));
            //request227.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request227;
            //request227 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_nl-NL_last");
            WebTestRequest request184 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/nl-NL/last"));
            request184.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request184.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request184;
            request184 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_nl-NL_last");

            webTest.BeginTransaction(WebRequestPrefix + "localisation_country-translations.html");
            WebTestRequest request185 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/nl-NL/_components/_infrastructure/localisation/country-translations.html"));
            request185.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request185.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request185;
            request185 = null;
            webTest.EndTransaction(WebRequestPrefix + "localisation_country-translations.html");

            #region Calculate Invoice, delivery and due date
            DateTime Date = DateTime.Today;
            string format = "yyyy-MM-dd";
            var TodayDate = Date.ToString(format);  //Deliver Date
            var DeliveryDay = Date.Day;
            var DeliveryMonth = Date.Month;
            var DeliveryYear = Date.Year;

            var Date1 = DateTime.Today.AddMonths(-1);
            var InvoiceDate = Date1.ToString(format);   //Invoice Date
            var InvoiceDay = Date1.Day;
            var InvoiceMonth = Date1.Month;
            var InvoiceYear = Date1.Year;

            var Date2 = DateTime.Today.AddDays(-5);
            var DueDate = Date2.ToString(format);   //Due Date
            var DueDay = Date2.Day;
            var DueMonth = Date2.Month;
            var DueYear = Date2.Year;

            #endregion Calculate Invoice, delivery and due date

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_vatrates");
            WebTestRequest request186 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/" + TodayDate + "/nl-NL"));
            request186.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request186.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request186;
            request186 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_vatrates");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_en-GB_last");
            WebTestRequest request187 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/invoicetemplates/en-GB/last"));
            request187.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request187.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //ExtractText extraction2 = new ExtractText();
            //extraction2.StartsWith = "\"paymentReference\":\"";
            //extraction2.EndsWith = "\"},\"";
            //extraction2.IgnoreCase = false;
            //extraction2.UseRegularExpression = false;
            //extraction2.Required = true;
            //extraction2.ExtractRandomMatch = false;
            //extraction2.Index = 0;
            //extraction2.HtmlDecode = true;
            //extraction2.SearchInHeaders = false;
            //extraction2.ContextParameterName = "paymentReference";
            //request187.ExtractValues += new EventHandler<ExtractionEventArgs>(extraction2.Extract);
            yield return request187;
            request187 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_invoicetemplates_en-GB_last");

            //string paymentReference = webTest.Context["paymentReference"].ToString();

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_10");
            WebTestRequest request207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request207.QueryStringParameters.Add("asc", "true", false, false);
            request207.QueryStringParameters.Add("limit", "10", false, false);
            request207.QueryStringParameters.Add("offset", "0", false, false);
            request207.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            request207.QueryStringParameters.Add("searchBy", "2", false, false);
            request207.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request207;
            request207 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_10");

            var paymentList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString);

            webTest.EndTransaction(WebBTPrefix + "SelectCustomer");
            #endregion Select Customer
            Thread.Sleep(2000);

            #region Select Date
            webTest.BeginTransaction(WebBTPrefix + "SelectDate");
            WebRequestPrefix = "SD_";

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_11");
            WebTestRequest reques207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            reques207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques207.QueryStringParameters.Add("asc", "true", false, false);
            reques207.QueryStringParameters.Add("limit", "10", false, false);
            reques207.QueryStringParameters.Add("offset", "0", false, false);
            reques207.QueryStringParameters.Add("orderBy", "nameAndAddress", false, false);
            reques207.QueryStringParameters.Add("searchBy", "2", false, false);
            reques207.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return reques207;
            reques207 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_11");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_vatrates_1");
            WebTestRequest request189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/" + InvoiceDate + "/nl-NL"));
            request189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ExtractText extractionRule1 = new ExtractText();
            extractionRule1.StartsWith = "vatId\":\"";
            extractionRule1.EndsWith = "\",\"vatCode";
            extractionRule1.Index = 0;
            extractionRule1.IgnoreCase = false;
            extractionRule1.UseRegularExpression = false;
            extractionRule1.HtmlDecode = true;
            extractionRule1.Required = false;
            extractionRule1.ContextParameterName = "VatId";
            request189.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request189;
            request189 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_vatrates_1");

            webTest.BeginTransaction(WebRequestPrefix + "api_currencies_rate_1");
            WebTestRequest reques200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            reques200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques200.QueryStringParameters.Add("code", "EUR", false, false);
            reques200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return reques200;
            reques200 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_currencies_rate_1");

            //WebTestRequest reques189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/vatrates/" + InvoiceDate + "/nl-NL"));
            //reques189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques189;
            //reques189 = null;

            //WebTestRequest reque200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            //reque200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reque200.QueryStringParameters.Add("code", "EUR", false, false);
            //reque200.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            //yield return reque200;
            //reque200 = null;

            // WebTestRequest request190 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            // request190.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            // request190.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            // request190.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            // yield return request190;
            // request190 = null;

            webTest.EndTransaction(WebBTPrefix + "SelectDate");
            #endregion
            Thread.Sleep(2000);

            #region Add Introductory Item
            webTest.BeginTransaction(WebBTPrefix + "AddIntroductoryItem");
            WebRequestPrefix = "AII_";

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_articles");
            WebTestRequest request192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            request192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request192.QueryStringParameters.Add("asc", "true", false, false);
            request192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            request192.QueryStringParameters.Add("limit", "5", false, false);
            request192.QueryStringParameters.Add("offset", "0", false, false);
            request192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            request192.QueryStringParameters.Add("term", "", false, false);
            yield return request192;
            request192 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_articles");

            ////Removed in Build #6.79.0.-5
            //WebTestRequest request2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/"+ threadData.UserName));
            //request2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2040;
            //request2040 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_articles_1");
            WebTestRequest reques192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            reques192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            reques192.QueryStringParameters.Add("asc", "true", false, false);
            reques192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            reques192.QueryStringParameters.Add("limit", "5", false, false);
            reques192.QueryStringParameters.Add("offset", "0", false, false);
            reques192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            reques192.QueryStringParameters.Add("term", "", false, false);
            yield return reques192;
            reques192 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_articles_1");

            //Removed in Build #6.79.0.-5
            //WebTestRequest request2041 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //request2041.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2041.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2041;
            //request2041 = null;

            //Removed in Build #6.79.0.-5
            //WebTestRequest reque192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //reque192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reque192.QueryStringParameters.Add("asc", "true", false, false);
            //reque192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //reque192.QueryStringParameters.Add("limit", "5", false, false);
            //reque192.QueryStringParameters.Add("offset", "0", false, false);
            //reque192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //reque192.QueryStringParameters.Add("term", "", false, false);
            //yield return reque192;
            //reque192 = null;

            //Removed in Build #6.79.0.-5
            //WebTestRequest request2042 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //request2042.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request2042.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request2042;
            //request2042 = null;

            //Removed in Build #6.79.0.-5
            //WebTestRequest requ192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //requ192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requ192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requ192.QueryStringParameters.Add("asc", "true", false, false);
            //requ192.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //requ192.QueryStringParameters.Add("limit", "5", false, false);
            //requ192.QueryStringParameters.Add("offset", "0", false, false);
            //requ192.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //requ192.QueryStringParameters.Add("term", "", false, false);
            //yield return requ192;
            //requ192 = null;

            //Removed in Build #6.79.0.-5
            ////Found in Build-16005
            //WebTestRequest requ2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //requ2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requ2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requ2040;
            //requ2040 = null;

            //Removed in Build #6.79.0.-5
            //WebTestRequest request193 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            //request193.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request193.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request193.QueryStringParameters.Add("asc", "true", false, false);
            //request193.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            //request193.QueryStringParameters.Add("limit", "5", false, false);
            //request193.QueryStringParameters.Add("offset", "0", false, false);
            //request193.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            //request193.QueryStringParameters.Add("term", "", false, false);
            //yield return request193;
            //request193 = null;

            //Removed in Build #6.79.0.-5
            //WebTestRequest reques2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //reques2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques2040;
            //reques2040 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_articles_2");
            WebTestRequest request194 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/articles"));
            request194.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request194.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request194.QueryStringParameters.Add("asc", "true", false, false);
            request194.QueryStringParameters.Add("customerCultureCode", "nl-NL", false, false);
            request194.QueryStringParameters.Add("limit", "5", false, false);
            request194.QueryStringParameters.Add("offset", "0", false, false);
            request194.QueryStringParameters.Add("orderBy", "cultureTranslation", false, false);
            request194.QueryStringParameters.Add("searchPattern", "SampleArticle", false, false);
            request194.QueryStringParameters.Add("term", "SampleArticle", false, false);
            yield return request194;
            request194 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_articles_2");

            //Removed in Build #6.79.0.-5
            //WebTestRequest reque2040 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/users/user/" + threadData.UserName));
            //reque2040.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reque2040.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reque2040;
            //reque2040 = null;

            //WebTestRequest reques196 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //reques196.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques196.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //reques196.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return reques196;
            //reques196 = null;

            webTest.EndTransaction(WebBTPrefix + "AddIntroductoryItem");
            #endregion
            Thread.Sleep(2000);

            #region Click on Send by email link
            webTest.BeginTransaction(WebBTPrefix + "ClickSendByEmailAslink");
            WebRequestPrefix = "CSBEAL_";

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_emailtemplates_default");
            WebTestRequest request197 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/emailtemplates/default"));
            request197.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request197.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request197;
            request197 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_emailtemplates_default");

            //WebTestRequest request198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            //request198.Method = "POST";
            //request198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody request198Body = new StringHttpBody();
            //request198Body.ContentType = "application/json;charset=utf-8";
            //request198Body.InsertByteOrderMark = false;
            //request198Body.BodyString =
            //            /*(@"{""_links"":{},""data"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve "
            //                    + (webTest.Context["PaymentReference"].ToString()
            //                    + (@" te vermelden bij betaling"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve "
            //                    + (webTest.Context["PaymentReference"].ToString() + @" te vermelden bij betaling"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}"))));*/
            //            @"{""_links"":{},""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""templateId"":null,""items"":[{""quantity"":20,""quantityPrecision"":0,""quantityHidden"":false,""description"":""Perf Testing"",""pricePerUnit"":15,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""attachmentIds"":[],""invoiceDate"":{""year"":2018,""month"":1,""day"":31},""dueDate"":{""year"":2018,""month"":2,""day"":23},""deliveryDate"":{""year"":2018,""month"":2,""day"":1},""templateCulture"":""nl-NL"",""currencyCode"":""EUR"",""logoFileName"":null,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""companyInfo"":null,""intro"":null,""outro"":null,""footer"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""baseCurrencyCode"":""EUR"",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""isVatInclusive"":false,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""customerContactPerson"":""I Tav"",""dueDays"":5,""initCustomer"":false}";
            //request198.Body = request198Body;
            //yield return request198;
            //request198 = null;

            /*

 webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_proposedinvoice");
            WebTestRequest request198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/proposedinvoice"));
            request198.Method = "POST";
            request198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request198Body = new StringHttpBody();
            request198Body.ContentType = "application/json;charset=utf-8";
            request198Body.InsertByteOrderMark = false;

            var settings = new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                MissingMemberHandling = MissingMemberHandling.Ignore
            };

            RootObject_req198 objRootObject_req198 = new RootObject_req198();

            var tempObject = JsonConvert.DeserializeObject(@"{""_links"":{},""data"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""" + PaymentReference + @""",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""db5a995b-dc17-46ff-8ec3-111739e609a8"",""customerCode"":""1001"",""customerName"":""Test customer 1"",""customerContactPerson"":""I Tav"",""customerAddressLine1"":""address 1001"",""customerAddressLine2"":"""",""customerPostalCode"":""I Postcode"",""customerCity"":""I Place"",""customerCountry"":""NL"",""customerVatNumber"":""155676842B01"",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":null,""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""SampleArticle1"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""" + PaymentReference + @""",""customerCultureCode"":""nl-NL"",""publishingEmail"":""testcollect@twinfield.com"",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}", settings);
            objRootObject_req198 = tempObject as RootObject_req198;
            objRootObject_req198.data.paymentReference = PaymentReference;



            request198Body.BodyString = JsonConvert.SerializeObject(objRootObject_req198, settings).ToString();

           request198.Body = request198Body;
            yield return request198;
            request198 = null;
 webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_proposedinvoice");
*/

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_1");
            WebTestRequest reques198 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            reques198.Method = "POST";
            reques198.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques198.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody reques198Body = new StringHttpBody();
            reques198Body.ContentType = "application/json;charset=utf-8";
            reques198Body.InsertByteOrderMark = false;

            CustomerDetails1 _CustomerDetails = new CustomerDetails1();

            _CustomerDetails._links = new _Links();
            _CustomerDetails.customerId = CustomerID;
            _CustomerDetails.templateId = null;

            int i = 0;
            _CustomerDetails.items = new Item3[1];
            Item3 objItem1 = new Item3();
            objItem1.quantity = 1;
            objItem1.quantityPrecision = 0;
            objItem1.quantityHidden = false;
            objItem1.description = "Perf Test";
            objItem1.pricePerUnit = 100;
            objItem1.vatId = webTest.Context["VatId"].ToString();
            objItem1.articleId = null;
            objItem1.articleName = null;
            objItem1.articleCode = null;
            objItem1.ictInfo = null;
            objItem1.kind = "Taxable";
            _CustomerDetails.items[i] = objItem1;
            //Item1 objItem1 = new Item1();
            //    objItem1.articleCode = null;
            //    objItem1.articleId = null;
            //    objItem1.articleName = null;
            //    objItem1.description = "Perf Test";
            //    objItem1.ictInfo = null;
            //    objItem1.kind = "Taxable";
            //    objItem1.pricePerUnit = 100;
            //    objItem1.quantity = 1;
            //    objItem1.quantityHidden = false;
            //    objItem1.quantityPrecision = 0;
            //    objItem1.vatId = webTest.Context["VatId"].ToString();
            //    _CustomerDetails.data.items[i] = objItem1;
            _CustomerDetails.attachmentIds = null;
            _CustomerDetails.invoiceDate = new Invoicedate();
            _CustomerDetails.invoiceDate.day = InvoiceDay;
            _CustomerDetails.invoiceDate.month = InvoiceMonth;
            _CustomerDetails.invoiceDate.year = InvoiceYear;
            _CustomerDetails.dueDate = new Duedate();
            _CustomerDetails.dueDate.day = DueDay;
            _CustomerDetails.dueDate.month = DueMonth;
            _CustomerDetails.dueDate.year = DueYear;
            _CustomerDetails.deliveryDate = new Deliverydate();
            _CustomerDetails.deliveryDate.day = DeliveryDay;
            _CustomerDetails.deliveryDate.month = DeliveryMonth;
            _CustomerDetails.deliveryDate.year = DeliveryYear;
            _CustomerDetails.templateCulture = "nl-NL";
            _CustomerDetails.currencyCode = "EUR";
            _CustomerDetails.logoFileName = null;
            _CustomerDetails.backgroundFileName = null;
            _CustomerDetails.secondaryBackgroundFileName = null;
            _CustomerDetails.companyInfo = null;
            _CustomerDetails.intro = null;
            _CustomerDetails.outro = null;
            _CustomerDetails.footer = null;
            _CustomerDetails.paymentReference = paymentReference;// "Gelieve {{PaymentReference}} te vermelden bij betaling";
            _CustomerDetails.baseCurrencyCode = "EUR";
            _CustomerDetails.customerCultureCode = "nl-NL";
            _CustomerDetails.publishingEmail = "testcollect@twinfield.com";
            _CustomerDetails.customerDiscount = null;
            _CustomerDetails.isVatInclusive = false;
            _CustomerDetails.itemsHasICT = false;
            _CustomerDetails.legalVatInfo = "";
            _CustomerDetails.sendInvoicesAs = "Link";
            _CustomerDetails.customerCode = CustomerCode;
            _CustomerDetails.customerName = CustomerName;
            _CustomerDetails.customerAddressLine1 = CustomerAddressLine1;
            _CustomerDetails.customerAddressLine2 = "";
            _CustomerDetails.customerPostalCode = CustomerPostelCode;
            _CustomerDetails.customerCity = CustomerCity;
            _CustomerDetails.customerCountry = CustomerCountry;
            _CustomerDetails.customerVatNumber = CustomerVATnumber;
            _CustomerDetails.customerContactPerson = CustomerContactPerson;
            _CustomerDetails.dueDays = 5;
            _CustomerDetails.initCustomer = false;
            #region CustomerDetails create object to pass to Sales/Invoices request

            ////Remaining InvoiceData part
            //_CustomerDetails.invoiceData = new Invoicedata();
            //    _CustomerDetails.invoiceData.backgroundFileName = null;
            //    _CustomerDetails.invoiceData.companyInfo = null;
            //    _CustomerDetails.invoiceData.currencyCode = "EUR";
            //    _CustomerDetails.invoiceData.customerAddressLine1 = CustomerAddressLine1;
            //    _CustomerDetails.invoiceData.customerAddressLine2 = "";
            //    _CustomerDetails.invoiceData.customerCity = CustomerCity;
            //    _CustomerDetails.invoiceData.customerCode = CustomerCode;
            //    _CustomerDetails.invoiceData.customerContactPerson = CustomerContactPerson;
            //    _CustomerDetails.invoiceData.customerCountry = CustomerCountry;
            //    _CustomerDetails.invoiceData.customerCultureCode = "nl-NL";
            //    _CustomerDetails.invoiceData.customerDiscount = null;
            //    _CustomerDetails.invoiceData.customerId = CustomerID;
            //    _CustomerDetails.invoiceData.customerName = CustomerName;
            //    _CustomerDetails.invoiceData.customerPostalCode = CustomerPostelCode;
            //    _CustomerDetails.invoiceData.customerVatNumber = CustomerVATnumber;
            //    _CustomerDetails.invoiceData.attachmentIds = new List<object>();

            //    _CustomerDetails.invoiceData.deliveryDate = new Deliverydate1();
            //    _CustomerDetails.invoiceData.deliveryDate.day = DeliveryDay;
            //    _CustomerDetails.invoiceData.deliveryDate.month = DeliveryMonth;
            //    _CustomerDetails.invoiceData.deliveryDate.year = DeliveryYear;

            //    _CustomerDetails.invoiceData.discount = null;
            //    _CustomerDetails.invoiceData.discountType = "Percentage";

            //    _CustomerDetails.invoiceData.dueDate = new Duedate1();
            //    _CustomerDetails.invoiceData.dueDate.day = DueDay;
            //    _CustomerDetails.invoiceData.dueDate.month = DueMonth;
            //    _CustomerDetails.invoiceData.dueDate.year = DueYear;

            //    _CustomerDetails.invoiceData.dueDays = 5;          //No.of Due days calculated
            //    _CustomerDetails.invoiceData.footer = null;
            //    _CustomerDetails.invoiceData.initCustomer = false;
            //    _CustomerDetails.invoiceData.intro = null;

            //    _CustomerDetails.invoiceData.invoiceDate = new Invoicedate1();
            //    _CustomerDetails.invoiceData.invoiceDate.day = InvoiceDay;
            //    _CustomerDetails.invoiceData.invoiceDate.month = InvoiceMonth;
            //    _CustomerDetails.invoiceData.invoiceDate.year = InvoiceYear;

            //    _CustomerDetails.invoiceData.isVatInclusive = false;
            //    _CustomerDetails.invoiceData.itemsHasICT = false;
            //    _CustomerDetails.invoiceData.legalVatInfo = "";
            //    _CustomerDetails.invoiceData.logoFileName = null;
            //    _CustomerDetails.invoiceData.outro = null;
            //    _CustomerDetails.invoiceData.paymentReference = "Gelieve PaymentReference te vermelden bij betaling";
            //    _CustomerDetails.invoiceData.projectCode = null;
            //    _CustomerDetails.invoiceData.projectId = null;
            //    _CustomerDetails.invoiceData.publishingEmail = "testcollect@twinfield.com";
            //    _CustomerDetails.invoiceData.reference = null;
            //    _CustomerDetails.invoiceData.secondaryBackgroundFileName = null;
            //    _CustomerDetails.invoiceData.sendInvoicesAs = "Link";

            //    int j = 0;
            //    _CustomerDetails.invoiceData.items = new Item2[1];
            //    Item2 objItem2 = new Item2();
            //    objItem2.articleCode = null;
            //    objItem2.articleId = null;
            //    objItem2.articleName = null;
            //    objItem2.description = "Perf Test";
            //    objItem2.ictInfo = null;
            //    objItem2.kind = "Taxable";
            //    objItem2.pricePerUnit = 100;
            //    objItem2.quantity = 1;
            //    objItem2.quantityHidden = false;
            //    objItem2.quantityPrecision = 0;
            //    objItem2.vatId = webTest.Context["VatId"].ToString();
            //    _CustomerDetails.invoiceData.items[j] = objItem2; 
            #endregion

            reques198Body.BodyString = JsonConvert.SerializeObject(_CustomerDetails, Formatting.None, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Include });
            //request198Body.BodyString = (@"{""_links"":{},""data"":{""customerId"":""" + CustomerID + @""",""customerCode"":""" + CustomerCode + @""",""customerName"":""" + CustomerName + @""",""customerContactPerson"":""" + CustomerContactPerson + @""",""customerAddressLine1"":""" + CustomerAddressLine1 + @""",""customerAddressLine2"":"""",""customerPostalCode"":""" + CustomerPostelCode + @""",""customerCity"":""" + CustomerCity + @""",""customerCountry"":""" + CustomerCountry + @""",""customerVatNumber"":""" + CustomerVATnumber + @""",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":{""year"":2017,""month"":7,""day"":20},""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""PerfTesting"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""customerCultureCode"":""" + culture + @""",""publishingEmail"":""" + CustomerEmail + @""",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""templateCulture"":""nl-NL"",""templateId"":null,""invoiceData"":{""customerId"":""" + CustomerID + @""",""customerCode"":""" + CustomerCode + @""",""customerName"":""" + CustomerName + @""",""customerContactPerson"":""" + CustomerContactPerson + @""",""customerAddressLine1"":""" + CustomerAddressLine1 + @""",""customerAddressLine2"":"""",""customerPostalCode"":""" + CustomerPostelCode + @""",""customerCity"":""" + CustomerCity + @""",""customerCountry"":""" + CustomerCountry + @""",""customerVatNumber"":""" + CustomerVATnumber + @""",""companyInfo"":null,""invoiceDate"":{""year"":2017,""month"":7,""day"":10},""dueDate"":{""year"":2017,""month"":7,""day"":15},""deliveryDate"":{""year"":2017,""month"":7,""day"":20},""reference"":null,""currencyCode"":""EUR"",""intro"":null,""outro"":null,""footer"":null,""logoFileName"":null,""projectId"":null,""projectCode"":null,""items"":[{""quantity"":3,""quantityPrecision"":0,""quantityHidden"":false,""description"":""PerfTesting"",""pricePerUnit"":55,""vatId"":""2d671fa4-2d81-42b0-9600-cd0fa2601192"",""articleId"":null,""articleName"":null,""articleCode"":null,""ictInfo"":null,""kind"":""Taxable""}],""discount"":null,""discountType"":""Percentage"",""attachmentIds"":[],""isVatInclusive"":false,""backgroundFileName"":null,""secondaryBackgroundFileName"":null,""paymentReference"":""Gelieve PaymentReference te vermelden bij betaling"",""customerCultureCode"":""" + culture + @""",""publishingEmail"":""" + CustomerEmail + @""",""customerDiscount"":null,""itemsHasICT"":false,""legalVatInfo"":"""",""sendInvoicesAs"":""Link"",""dueDays"":5,""initCustomer"":false,""invoiceDateField"":""2017-07-10T00:00:00.000Z"",""dueDateField"":""2017-07-15T00:00:00.000Z"",""selected"":false},""recurrenceInformation"":null}");
            reques198.Body = reques198Body;
            yield return reques198;
            reques198 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_1");

            //Extracting ID value from Location header
            var abc = webTest.LastResponse.Headers["Location"].ToString();
            CustomerDetails1 customerDetailsAfterGeneratingInvoice = JsonConvert.DeserializeObject<CustomerDetails1>(webTest.LastResponse.BodyString, settings);
            string[] abc1 = abc.Split('/');
            string IDValue = customerDetailsAfterGeneratingInvoice.id;//abc1[6].ToString();

            //WebTestRequest request199 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request199.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request199.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request199.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request199;
            //request199 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_2");
            WebTestRequest requ200 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + IDValue + ""));
            requ200.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            requ200.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return requ200;
            requ200 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_3");
            WebTestRequest request201 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + IDValue + "/send"));
            request201.Method = "POST";
            request201.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request201.Headers.Add(new WebTestRequestHeader("If-Match", "\"1\""));
            request201.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request201Body = new StringHttpBody();
            request201Body.ContentType = "application/json;charset=utf-8";
            request201Body.InsertByteOrderMark = false;
            request201Body.BodyString = "\"testcollect@twinfield.com\"";
            request201.Body = request201Body;
            yield return request201;
            request201 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_3");

            webTest.BeginTransaction(WebRequestPrefix + "api_currencies_rate_2");
            WebTestRequest request2000 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/currencies/rate"));
            request2000.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request2000.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request2000.QueryStringParameters.Add("code", "EUR", false, false);
            request2000.QueryStringParameters.Add("date", DateTime.Now.ToString("yyyy-MM-dd"), false, false);
            yield return request2000;
            request2000 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_currencies_rate_2");

            webTest.BeginTransaction(WebRequestPrefix + "document_document-comments_document-comments.html");
            WebTestRequest request202 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/document/document-comments/document-comments.html"));
            request202.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request202.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request202;
            request202 = null;
            webTest.EndTransaction(WebRequestPrefix + "document_document-comments_document-comments.html");

            webTest.BeginTransaction(WebRequestPrefix + "sales_invoicing_listing_ui-invoice-listing.html");
            WebTestRequest request203 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/listing/ui-invoice-listing.html"));
            request203.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request203.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request203;
            request203 = null;
            webTest.EndTransaction(WebRequestPrefix + "sales_invoicing_listing_ui-invoice-listing.html");

            //WebTestRequest request204 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            //request204.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request204.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request204;
            //request204 = null;


            //WebTestRequest request206 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            //request206.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request206.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request206;
            //request206 = null;

            webTest.BeginTransaction(WebRequestPrefix + "api_creditmanagement");
            WebTestRequest reque207 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            reque207.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reque207.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reque207;
            reque207 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_creditmanagement");

            webTest.BeginTransaction(WebRequestPrefix + "api_creditmanagement_1");
            WebTestRequest request208 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            request208.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request208.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request208;
            request208 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_creditmanagement_1");

            //Added in Build # 6.79.0-5
            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_1");
            WebTestRequest request209 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request209.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request209.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request209;
            request209 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_1");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_settings_2");
            WebTestRequest request210 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request210.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request210.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request210;
            request210 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_settings_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_2");
            WebTestRequest reques210 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            reques210.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques210.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques210;
            reques210 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_2");

            //WebTestRequest request205 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/een-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            //request205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request205.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request205;
            //request205 = null;

            //WebTestRequest reques205 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            //reques205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //reques205.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques205;
            //reques205 = null;

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");
            WebTestRequest request211 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/ui-list-view.html"));
            request211.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request211.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request211;
            request211 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");

            //URL changed from /api/sales/tasks to /api/tasks
            webTest.BeginTransaction(WebRequestPrefix + "api_tasks_2");
            WebTestRequest request212 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request212.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request212.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request212;
            request212 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_tasks_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue");
            WebTestRequest request213 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request213.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request213.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request213.QueryStringParameters.Add("asc", "false", false, false);
            request213.QueryStringParameters.Add("limit", "20", false, false);
            request213.QueryStringParameters.Add("offset", "0", false, false);
            request213.QueryStringParameters.Add("orderBy", "date", false, false);
            yield return request213;
            request213 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");
            WebTestRequest request214 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            request214.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request214.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request214;
            request214 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");
            WebTestRequest request215 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            request215.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request215.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request215;
            request215 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");
            WebTestRequest request216 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            request216.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request216.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request216;
            request216 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");
            WebTestRequest request217 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            request217.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request217.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request217;
            request217 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");
            WebTestRequest request218 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            request218.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request218.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request218;
            request218 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");
            WebTestRequest request219 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            request219.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request219.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request219;
            request219 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");
            WebTestRequest request220 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            request220.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request220.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request220;
            request220 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");
            WebTestRequest request225 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            request225.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request225.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request225;
            request225 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");

            //WebTestRequest request221 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            //request221.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request221.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request221;
            //request221 = null;

            //WebTestRequest request222 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //request222.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request222.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request222 = null;

            //WebTestRequest request223 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            //request223.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request223.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request223;
            //request223 = null;

            //WebTestRequest request224 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-bucket-view.html"));
            //request224.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request224.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request224;
            //request224 = null;

            //WebTestRequest request225 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            //request225.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request225.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request225;
            //request225 = null;

            webTest.BeginTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");
            WebTestRequest request226 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            request226.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request226.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request226;
            request226 = null;
            webTest.EndTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html");
            WebTestRequest reques227 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries.html"));
            reques227.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques227.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques227;
            reques227 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");
            WebTestRequest reque228 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            reque228.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reque228.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reque228;
            reque228 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");

            //WebTestRequest request229 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
            //        "ed.html"));
            //request229.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //request229.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return request229;
            //request229 = null;

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_adds_ui-list-adds-new.html");
            WebTestRequest request230 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/adds/ui-list-adds-new.html"));
            request230.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request230.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request230;
            request230 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_adds_ui-list-adds-new.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");
            WebTestRequest request231 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            request231.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request231.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request231;
            request231 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");
            WebTestRequest request232 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            request232.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request232.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request232;
            request232 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-indicator.html");
            WebTestRequest request233 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-indicator.html"));
            request233.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request233.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request233;
            request233 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-indicator.html");

            webTest.BeginTransaction(WebRequestPrefix + "filters_select_ui-list-inline-select-filter.html");
            WebTestRequest request234 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/select/ui-list-inline-select-filter.html"));
            request234.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request234.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request234;
            request234 = null;
            webTest.EndTransaction(WebRequestPrefix + "filters_select_ui-list-inline-select-filter.html");

            webTest.BeginTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html");
            WebTestRequest reques234 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/date/ui-list-date-filter.html"));
            reques234.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            reques234.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques234;
            reques234 = null;
            webTest.EndTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html");

            //WebTestRequest request263 = new WebTestRequest((webTest.Context["WebServer4"].ToString() + "/v2/track"));
            //request263.ThinkTime = 16;
            //request263.Method = "POST";
            //request263.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody request263Body = new StringHttpBody();
            //request263Body.ContentType = "application/json";
            //request263Body.InsertByteOrderMark = false;
            //request263Body.BodyString = "";//needs to be check - AnkitaG

            //WebTestRequest request235 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request235.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request235.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //request235.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request235;
            //request235 = null;

            webTest.EndTransaction(WebBTPrefix + "ClickSendByEmailAslink");
            #endregion
            Thread.Sleep(2000);

            #region Commented Edit Invoice Part

            //#region SalesTabClick
            //webTest.BeginTransaction(WebBTPrefix + "SalesTabClick2");
            //WebRequestPrefix = "STC2_";

            //webTest.BeginTransaction(WebRequestPrefix + "en-GB_sales_sales.html_1");
            //WebTestRequest requestEdit134 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/sales.html"));
            //requestEdit134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit134.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit134;
            //requestEdit134 = null;
            //webTest.EndTransaction(WebRequestPrefix + "en-GB_sales_sales.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_4");
            //WebTestRequest requestEdit135 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            //requestEdit135.Method = "OPTIONS";
            //requestEdit135.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit135.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody requestEdit135Body = new StringHttpBody();
            //requestEdit135Body.ContentType = "";
            //requestEdit135Body.InsertByteOrderMark = false;
            //requestEdit135Body.BodyString = "";
            //requestEdit135.Body = requestEdit135Body;
            //yield return requestEdit135;
            //requestEdit135 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_4");

            ////Found in Build-16005
            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_revenuetypes_1");
            //WebTestRequest requestEdit1380 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/revenuetypes"));
            //requestEdit1380.Method = "OPTIONS";
            //requestEdit1380.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit1380.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody requestEdit1380Body = new StringHttpBody();
            //requestEdit1380Body.ContentType = "";
            //requestEdit1380Body.InsertByteOrderMark = false;
            //requestEdit1380Body.BodyString = "";
            //requestEdit1380.Body = requestEdit1380Body;
            //yield return requestEdit1380;
            //requestEdit1380 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_revenuetypes_1");
            ////

            //webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html_1");
            //WebTestRequest requestEdit136 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            //requestEdit136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit136.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit136;
            //requestEdit136 = null;
            //webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html_1");
            //WebTestRequest requestEdit137 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            //requestEdit137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit137.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit137;
            //requestEdit137 = null;
            //webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");
            //WebTestRequest requestEdit138 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.htm" +
            //        "l"));
            //requestEdit138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit138.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit138;
            //requestEdit138 = null;
            //webTest.EndTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_12");
            //WebTestRequest requestEdit139 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            //requestEdit139.Method = "OPTIONS";
            //requestEdit139.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit139.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody requestEdit139Body = new StringHttpBody();
            //requestEdit139Body.ContentType = "";
            //requestEdit139Body.InsertByteOrderMark = false;
            //requestEdit139Body.BodyString = "";
            //requestEdit139.Body = requestEdit139Body;
            //yield return requestEdit139;
            //requestEdit139 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_12");

            //webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html_1");
            //WebTestRequest requestEdit142 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            //requestEdit142.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit142.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit142;
            //requestEdit142 = null;
            //webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html_1");
            //WebTestRequest requestEdit143 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            //requestEdit143.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            //requestEdit143.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit143;
            //requestEdit143 = null;
            //webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html_1");


            ////Added as observed in trace - Samiksha 08/08
            //webTest.BeginTransaction(WebRequestPrefix + "api_tasks_3");
            //WebTestRequest requestEdit144 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            //requestEdit144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit144.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit144;
            //requestEdit144 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_tasks_3");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_3");
            //WebTestRequest requestEdit140 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit140.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit140.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit140;
            //requestEdit140 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_3");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_4");
            //WebTestRequest requestEdit141 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit141.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit141.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit141;
            //requestEdit141 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_4");

            //webTest.EndTransaction(WebBTPrefix + "SalesTabClick2");
            //#endregion
            //Thread.Sleep(2000);

            //#region Invoice Click
            //webTest.BeginTransaction(WebBTPrefix + "ClickInvoices");
            //WebRequestPrefix = "CI_";

            ////Uncommented as observed in trace
            ////WebTestRequest requestEdit145 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            ////requestEdit145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            ////requestEdit145.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ////requestEdit145.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            ////yield return requestEdit145;
            ////requestEdit145 = null;

            ////WebTestRequest requestEdit146 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            ////requestEdit146.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices");
            ////yield return requestEdit146;
            ////requestEdit146 = null;


            ////Added as found in trace Samiksha 08/08
            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_5");
            //WebTestRequest requestEdit1400 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit1400.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit1400.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit1400;
            //requestEdit1400 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_5");

            //webTest.BeginTransaction(WebRequestPrefix + "sales_invoicing_listing_ui-invoice-listing.html_1");
            //WebTestRequest requestEdit147 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/listing/ui-invoice-listing.html"));
            //requestEdit147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            //requestEdit147.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit147;
            //requestEdit147 = null;
            //webTest.EndTransaction(WebRequestPrefix + "sales_invoicing_listing_ui-invoice-listing.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html_1");
            //WebTestRequest requestEdit148 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            //requestEdit148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit148.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit148;
            //requestEdit148 = null;
            //webTest.EndTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html_1");
            //WebTestRequest requestEdit149 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            //requestEdit149.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit149.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit149;
            //requestEdit149 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html_1");
            //WebTestRequest requestEdit150 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            //requestEdit150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit150.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit150;
            //requestEdit150 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "api_creditmanagement_2");
            //WebTestRequest requestEdit151 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            //requestEdit151.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit151.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit151;
            //requestEdit151 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_creditmanagement_2");

            //webTest.BeginTransaction(WebRequestPrefix + "api_creditmanagement_3");
            //WebTestRequest requestEdit152 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            //requestEdit152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit152.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit152;
            //requestEdit152 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_creditmanagement_3");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_1");
            //WebTestRequest requestEdit153 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement"));
            //requestEdit153.Method = "OPTIONS";
            //requestEdit153.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit153.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody requestEdit153Body = new StringHttpBody();
            //requestEdit153Body.ContentType = "";
            //requestEdit153Body.InsertByteOrderMark = false;
            //requestEdit153Body.BodyString = "";
            //requestEdit153.Body = requestEdit153Body;
            //yield return requestEdit153;
            //requestEdit153 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_1");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_settings_3");
            //WebTestRequest requestEdit154 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            //requestEdit154.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit154.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit154;
            //requestEdit154 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_settings_3");

            //webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html_1");
            //WebTestRequest requestEdit155 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/ui-list-view.html"));
            //requestEdit155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            //requestEdit155.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit155;
            //requestEdit155 = null;
            //webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html_1");

            ////Added as observed in trace - Samiksha 08/08
            //webTest.BeginTransaction(WebRequestPrefix + "api_tasks_4");
            //WebTestRequest requestEdit159 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            //requestEdit159.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit159.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit159;
            //requestEdit159 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_tasks_4");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_6");
            //WebTestRequest requestEdit156 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit156.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit156;
            //requestEdit156 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_6");

            //webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_buckets_view_ui-buckets-carousel.html");
            //WebTestRequest requestEdit157 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-buckets-carousel.html"));
            //requestEdit157.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            //requestEdit157.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit157;
            //requestEdit157 = null;
            //webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_buckets_view_ui-buckets-carousel.html");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-bucket-view.html");
            //WebTestRequest requestEdit158 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-bucket-view.html"));
            //requestEdit158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit158.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit158;
            //requestEdit158 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-bucket-view.html");

            //webTest.BeginTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html_1");
            //WebTestRequest requestEdit160 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            //requestEdit160.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit160.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit160;
            //requestEdit160 = null;
            //webTest.EndTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_2");
            //WebTestRequest requestEdit161 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            //requestEdit161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit161.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit161;
            //requestEdit161 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_2");


            ////Commented as not found in trace Samiksha 08/08
            ////WebTestRequest requestEdit162 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            ////requestEdit162.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            ////requestEdit162.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ////requestEdit162.QueryStringParameters.Add("asc", "false", false, false);
            ////requestEdit162.QueryStringParameters.Add("limit", "20", false, false);
            ////requestEdit162.QueryStringParameters.Add("offset", "0", false, false);
            ////requestEdit162.QueryStringParameters.Add("orderBy", "date", false, false);
            ////yield return requestEdit162;
            ////requestEdit162 = null;


            //webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html_1");
            //WebTestRequest requestEdit163 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            //requestEdit163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit163.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit163;
            //requestEdit163 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html_1");
            //WebTestRequest requestEdit164 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            //requestEdit164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit164.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit164;
            //requestEdit164 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html_1");
            //WebTestRequest requestEdit165 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            //requestEdit165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit165.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit165;
            //requestEdit165 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html_1");
            //WebTestRequest requestEdit166 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            //requestEdit166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit166.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit166;
            //requestEdit166 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html_1");
            //WebTestRequest requestEdit167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            //requestEdit167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit167;
            //requestEdit167 = null;
            //webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html_1");
            //WebTestRequest requestEdit168 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            //requestEdit168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit168.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit168;
            //requestEdit168 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html_1");
            //WebTestRequest requestEdit169 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            //requestEdit169.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit169.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit169;
            //requestEdit169 = null;
            //webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html_1");


            //webTest.BeginTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html_1");
            //WebTestRequest requestEdit170 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            //requestEdit170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit170.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit170;
            //requestEdit170 = null;
            //webTest.EndTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_adds_ui-list-adds-new.html_1");
            //WebTestRequest requestEdit171 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/adds/ui-list-adds-new.html"));
            //requestEdit171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit171.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit171;
            //requestEdit171 = null;
            //webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_adds_ui-list-adds-new.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "filters_select_ui-list-inline-select-filter.h");
            //WebTestRequest requestEdit179 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/select/ui-list-inline-select-filter.h" +
            //        "tml"));
            //requestEdit179.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit179;
            //requestEdit179 = null;
            //webTest.EndTransaction(WebRequestPrefix + "filters_select_ui-list-inline-select-filter.h");

            //webTest.BeginTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html_1");
            //WebTestRequest requestEdit176 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/date/ui-list-date-filter.html"));
            //requestEdit176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit176.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit176;
            //requestEdit176 = null;
            //webTest.EndTransaction(WebRequestPrefix + "partials_filters_date_ui-list-date-filter.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html_1");
            //WebTestRequest requestEdit172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            //requestEdit172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit172;
            //requestEdit172 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html_1");
            //WebTestRequest requestEdit173 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            //requestEdit173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit173;
            //requestEdit173 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html_1");
            //WebTestRequest requestEdit174 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            //requestEdit174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit174;
            //requestEdit174 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-indicator.html_1");
            //WebTestRequest requestEdit175 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-indicator.html"));
            //requestEdit175.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit175;
            //requestEdit175 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-indicator.html_1");


            //webTest.EndTransaction(WebBTPrefix + "ClickInvoices");
            //#endregion
            //Thread.Sleep(2000);

            //#region Filters Overdue
            //webTest.BeginTransaction(WebBTPrefix + "FiltersOverdue");
            //WebRequestPrefix = "FO_";

            ////WebTestRequest requestEdit177 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            ////requestEdit177.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices/Overdue");
            ////yield return requestEdit177;
            ////requestEdit177 = null;

            ////Added as found in trace - Samiksha 08/08
            //webTest.BeginTransaction(WebRequestPrefix + "api_tasks_5");
            //WebTestRequest requestEdit1590 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            //requestEdit1590.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit1590.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit1590;
            //requestEdit1590 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_tasks_5");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_3");
            //WebTestRequest requestEdit178 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            //requestEdit178.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit178.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit178;
            //requestEdit178 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_timeframemanagement_boundaries_3");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_settings_4");
            //WebTestRequest reques179 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            //reques179.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //reques179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return reques179;
            //reques179 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_settings_4");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_7");
            //WebTestRequest requestEdit180 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit180.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit180.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit180;
            //requestEdit180 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_7");

            //webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html_1");
            //WebTestRequest requestEdit181 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries.html"));
            //requestEdit181.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit181.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit181;
            //requestEdit181 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-primaries.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html_1");
            //WebTestRequest requestEdit182 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            //requestEdit182.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit182.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit182;
            //requestEdit182 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html_1");

            //webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");
            //WebTestRequest requestEdit183 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
            //        "ed.html"));
            //requestEdit183.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            //requestEdit183.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit183;
            //requestEdit183 = null;
            //webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");

            ////Added as found in trace - Samiksha 08/08
            //webTest.BeginTransaction(WebRequestPrefix + "api_tasks_6");
            //WebTestRequest requestEdit184 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            //requestEdit184.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit184.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit184;
            //requestEdit184 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_tasks_6");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_1");
            //WebTestRequest requestEdit185 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit185.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit185.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit185.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit185.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit185.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit185.QueryStringParameters.Add("orderBy", "date", false, false);
            //yield return requestEdit185;
            //requestEdit185 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_1");

            ////var InvoiceNumberList = JsonConvert.DeserializeObject<RootObject>(LastResponse.BodyString);
            ////var InvoiceNum = InvoiceNumberList.items.Random();
            ////var InvoiceNumber = InvoiceNum.number.ToString();

            //#region Search Customer user want to delete.
            ////string CustomerName = threadData.CustomerName;
            //splitCustomer = CustomerName.ToCharArray();
            //FirstLetter = splitCustomer[0].ToString();
            //SecondLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString();
            //ThirdLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString() + splitCustomer[2].ToString();

            //CustomerNameEncode = Uri.EscapeDataString(CustomerName); //Server reads encoded form of customer name.
            //#endregion

            //webTest.EndTransaction(WebBTPrefix + "FiltersOverdue");

            //#endregion
            //Thread.Sleep(2000);

            //#region Search Invoice number
            //webTest.BeginTransaction(WebBTPrefix + "SearchInvoiceNumber");
            //WebRequestPrefix = "SIN_";

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_2");
            //WebTestRequest requestEdit186 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit186.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit186.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit186.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit186.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit186.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit186.QueryStringParameters.Add("orderBy", "date", false, false);
            //requestEdit186.QueryStringParameters.Add("searchPattern", FirstLetter, false, false);
            //yield return requestEdit186;
            //requestEdit186 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_2");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_3");
            //WebTestRequest requestEdit187 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit187.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit187.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit187.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit187.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit187.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit187.QueryStringParameters.Add("orderBy", "date", false, false);
            //requestEdit187.QueryStringParameters.Add("searchPattern", SecondLetter, false, false);
            //yield return requestEdit187;
            //requestEdit187 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_3");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_4");
            //WebTestRequest requestEdit188 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit188.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit188.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit188.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit188.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit188.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit188.QueryStringParameters.Add("orderBy", "date", false, false);
            //requestEdit188.QueryStringParameters.Add("searchPattern", ThirdLetter, false, false);
            //yield return requestEdit188;
            //requestEdit188 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_4");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_5");
            //WebTestRequest requestEdit189 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit189.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit189.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit189.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit189.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit189.QueryStringParameters.Add("orderBy", "date", false, false);
            //requestEdit189.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            //yield return requestEdit189;
            //requestEdit189 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_5");

            //#region Deleted User Details
            ////var SelectCustList = JsonConvert.DeserializeObject<RootObject>(webTest.LastResponse.BodyString, new JsonSerializerSettings() { MissingMemberHandling = MissingMemberHandling.Ignore });
            ////var DeletedUserList = SelectCustList.items.Random();
            ////var DeletedUserID = DeletedUserList.id.ToString();
            ////var DeletedUserAmount = DeletedUserList.total.ToString();
            ////var version = DeletedUserList.version.ToString();
            //#endregion

            ////WebTestRequest requestEdit190 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            ////requestEdit190.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            ////requestEdit190.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ////requestEdit190.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            ////yield return requestEdit190;
            ////requestEdit190 = null;

            //webTest.EndTransaction(WebBTPrefix + "SearchInvoiceNumber");
            //#endregion
            //Thread.Sleep(2000);

            //var DeletedUserID = customerDetailsAfterGeneratingInvoice.id;
            //var DeletedUserAmount = customerDetailsAfterGeneratingInvoice.grossTotal;
            //var Version = customerDetailsAfterGeneratingInvoice.version; //from Item3 item in customerDetailsAfterGeneratingInvoice.items where item.vatId == objItem1.vatId select item;


            //#region Mark as Paid
            //webTest.BeginTransaction(WebBTPrefix + "MarkAsPaid");
            //WebRequestPrefix = "MAP_";

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_5");
            //WebTestRequest requestEdit191 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + DeletedUserID + "/paymentmarks"));
            //requestEdit191.Method = "POST";
            //requestEdit191.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            ////requestEdit191.Headers.Add(new WebTestRequestHeader("If-Match", "\""+version+"\""));
            //requestEdit191.Headers.Add(new WebTestRequestHeader("If-Match", "\"6\""));
            //requestEdit191.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //StringHttpBody requestEdit191Body = new StringHttpBody();
            //requestEdit191Body.ContentType = "application/json;charset=utf-8";
            //requestEdit191Body.InsertByteOrderMark = false;
            //requestEdit191Body.BodyString = "{\"amount\":" + DeletedUserAmount + ",\"type\":\"Payment\"}";
            //requestEdit191.Body = requestEdit191Body;
            //yield return requestEdit191;
            //requestEdit191 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_5");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_8");
            //WebTestRequest requestEdit192 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            //requestEdit192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit192.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //yield return requestEdit192;
            //requestEdit192 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_8");

            //webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overdue_6");
            //WebTestRequest requestEdit193 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            //requestEdit193.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //requestEdit193.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            //requestEdit193.QueryStringParameters.Add("asc", "false", false, false);
            //requestEdit193.QueryStringParameters.Add("limit", "20", false, false);
            //requestEdit193.QueryStringParameters.Add("offset", "0", false, false);
            //requestEdit193.QueryStringParameters.Add("orderBy", "date", false, false);
            //requestEdit193.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            //yield return requestEdit193;
            //requestEdit193 = null;
            //webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overdue_6");

            ////WebTestRequest requestEdit194 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/notifications"));
            ////requestEdit194.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            ////requestEdit194.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            ////requestEdit194.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            ////yield return requestEdit194;
            ////requestEdit194 = null;

            //webTest.EndTransaction(WebBTPrefix + "MarkAsPaid");

            //#endregion

            //Thread.Sleep(2000); 
            #endregion

            if ((Convert.ToInt32(webTest.Context["iterationNo"])% Convert.ToInt32(webTest.Context["maxiterationNo"])) ==0)
            {
                foreach (var request in webTest.Logout(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "User Logout: " + threadData.UserName + " LogOutTime: " + DateTime.Now + "\r\n");
                Thread.Sleep(2000);
            }
        }
        
    }
    public class NeoSalesInvoices_A : WebTest
    {
        NeoSalesInvoices _NeoSalesInvoices = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoSalesInvoices_A()
        {
            if (_NeoSalesInvoices == null)
                _NeoSalesInvoices = new NeoSalesInvoices(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext= this._textContext;
            return _NeoSalesInvoices.GetRequestEnumerator(TwinfieldDBTenant.A, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoSalesInvoices_B : WebTest
    {
        NeoSalesInvoices _NeoSalesInvoices = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoSalesInvoices_B()
        {
            if (_NeoSalesInvoices == null)
                _NeoSalesInvoices = new NeoSalesInvoices(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoSalesInvoices.GetRequestEnumerator(TwinfieldDBTenant.B, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoSalesInvoices_C : WebTest
    {
        NeoSalesInvoices _NeoSalesInvoices = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoSalesInvoices_C()
        {
            if (_NeoSalesInvoices == null)
                _NeoSalesInvoices = new NeoSalesInvoices(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoSalesInvoices.GetRequestEnumerator(TwinfieldDBTenant.C, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoSalesInvoices_D : WebTest
    {
        NeoSalesInvoices _NeoSalesInvoices = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoSalesInvoices_D()
        {
            if (_NeoSalesInvoices == null)
                _NeoSalesInvoices = new NeoSalesInvoices(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoSalesInvoices.GetRequestEnumerator(TwinfieldDBTenant.D, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class NeoSalesInvoices_E : WebTest
    {
        NeoSalesInvoices _NeoSalesInvoices = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public NeoSalesInvoices_E()
        {
            if (_NeoSalesInvoices == null)
                _NeoSalesInvoices = new NeoSalesInvoices(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _NeoSalesInvoices.GetRequestEnumerator(TwinfieldDBTenant.E, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
}
