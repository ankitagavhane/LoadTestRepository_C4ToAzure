//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twinfield_NewFramework
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using Microsoft.VisualStudio.TestTools.LoadTesting;
    //using MicrosoftServicesTestLabs.Monitor.VSTSUnitTest;
    using System.Drawing;
    using System.Threading;
    using System.Data;
    using System.Reflection;

    public class ExportCustomers
    {
        WebTest webTest;
        private Dictionary<string, string> localDictionary;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();    //object of webTesRequestPlugin class to access the variables uniquely in each thread.
        private InputTableRecord testRecord;
        public Object assemblyinitializeLock = new Object();
        private WebTestContext _textContext;
        private object virtualuserId;
        private object doLogin;
        string OfficeManagementID = string.Empty;
        private string companyTypeDescription;

        public ExportCustomers(WebTest webTest)
        {
            this.webTest = webTest;
            
        }
        public WebTestContext TestContext
        {
            get { return _textContext; }

            set { _textContext = value; }
        }
        
        public IEnumerator<WebTestRequest> GetRequestEnumerator(TwinfieldDBTenant DBTenant,string userDictionaryKey, WebTestRequestPlugin objPlugin)
        {
            var WebBTPrefix = TwinfieldScenarioPrefix.EC_ + DBTenant.ToString() + "_";
            _textContext = webTest.Context;
            _textContext.TryGetValue("doLogin", out doLogin);
            _textContext.TryGetValue("UserId", out virtualuserId);

            SharedThreadData threadData;

            #region DoLogin
            if (Convert.ToBoolean(doLogin))
            {
                webTest.Context.CookieContainer = new System.Net.CookieContainer();

                try
                {
                    localDictionary = CustomDS.Instance.GetNextRowTwinfield(DBTenant, TwinfieldScenarioName.ExportCustomers);
                    
                    threadData = new SharedThreadData(Convert.ToInt32(virtualuserId),this.TestContext);
                    threadData.UserName = localDictionary["UserName"];
                    threadData.Tenant = localDictionary["DBTenant"];
                    threadData.CustomerName = localDictionary["CustomerName"];
                    threadData.hasFullAccess = localDictionary["hasFullAccess"];
                    threadData.Password = AssemblyLoad.Password;
                    threadData.ScenarioPrefix = WebBTPrefix;
                    CustomDS.Instance.Save_ExportCustomers_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.ExportCustomers + " : " + DBTenant + " : LoggedIn : " + virtualuserId); 
                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not fetched for:" + TwinfieldScenarioName.ExportCustomers);
                    throw new Exception("Error in reading data for " + TwinfieldScenarioName.ExportCustomers + " : " + ex.Message);

                }
                if(threadData.hasFullAccess=="0")
                {
                    foreach (var request in webTest.LaunchLogin(threadData, objPlugin)) yield return request;
                }
                else
                {
                    foreach (var request in webTest.LaunchLogin_FullAccess(threadData, objPlugin)) yield return request;
                }
                //RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
                CustomDS.Instance.Save_ExportCustomers_UserData(Convert.ToInt32(virtualuserId), threadData, DBTenant);
                //Logger.WriteGeneralLog("Create Invoice : Vuser - " + Convert.ToInt32(virtualuserId).ToString() + " Logged In");
            }
            else
            {
                try
                {
                    threadData = CustomDS.Instance.Get_ExportCustomers_UserData(Convert.ToInt32(virtualuserId), DBTenant);
                    Logger.WriteGeneralLogUser(TwinfieldScenarioName.ExportCustomers + " : " + DBTenant + " : NotLoggedIn : " + virtualuserId);

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not saved for :" + TwinfieldScenarioName.ExportCustomers);
                    throw new Exception("Error in getting data for " + TwinfieldScenarioName.ExportCustomers + " : " + ex.Message);

                }
            }
            #endregion DoLogin

            WebBTPrefix = threadData.ScenarioPrefix;
            string WebRequestPrefix = "";

            #region EC_GoToSales
            webTest.BeginTransaction(WebBTPrefix + "GoToSales");
            WebRequestPrefix = "GTS_";


            webTest.BeginTransaction(WebRequestPrefix + "en-GB_sales_sales.html");
            WebTestRequest request143 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/sales.html"));
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request143.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request143;
            request143 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_sales_sales.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_revenuetypes");
            WebTestRequest request144 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/revenuetypes"));
            request144.Method = "OPTIONS";
            request144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request144.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request144;
            request144 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_revenuetypes");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices");
            WebTestRequest request145 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            request145.Method = "OPTIONS";
            request145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request145.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request145;
            request145 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");
            WebTestRequest request146 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            request146.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request146.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request146;
            request146 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-basic-group-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");
            WebTestRequest request147 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            request147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request147;
            request147 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-divider-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");
            WebTestRequest request148 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.htm" +
                    "l"));
            request148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request148.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request148;
            request148 = null;
            webTest.EndTransaction(WebRequestPrefix + "desktop_view_cr-dashboard-sub-section-tile.htm");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers");
            WebTestRequest request149 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request149.Method = "OPTIONS";
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request149;
            request149 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");
            WebTestRequest request150 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request150;
            request150 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-insight-tile-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");
            WebTestRequest request151 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request151;
            request151 = null;
            webTest.EndTransaction(WebRequestPrefix + "framework_desktop_view_cr-links-tile.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview");
            WebTestRequest request152 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request152;
            request152 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_invoices_overview_1");
            WebTestRequest request153 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request153.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request153.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request153;
            request153 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_invoices_overview_1");

            webTest.BeginTransaction(WebRequestPrefix + "api_tasks");
            WebTestRequest request154 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request154.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request154.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request154;
            request154 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_tasks");

            webTest.EndTransaction(WebBTPrefix + "GoToSales");
            #endregion

            #region EC_GoToCustomers
            webTest.BeginTransaction(WebBTPrefix + "GoToCustomers");
            WebRequestPrefix = "GTC_";

            webTest.BeginTransaction(WebRequestPrefix + "UI");
            WebTestRequest request155 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/UI/"));
            request155.ExpectedResponseUrl = (webTest.Context["AccountingURL"].ToString() + "/UI/#/Sales/Customers");
            yield return request155;
            request155 = null;
            webTest.EndTransaction(WebRequestPrefix + "UI");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB_customers_listing_customers.html");
            WebTestRequest request156 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/customers/listing/customers.html"));
            request156.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request156.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request156;
            request156 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB_customers_listing_customers.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_tasks_1");
            WebTestRequest request157 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/tasks"));
            request157.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request157;
            request157 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_tasks_1");

            webTest.BeginTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");
            WebTestRequest request158 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request158.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request158;
            request158 = null;
            webTest.EndTransaction(WebRequestPrefix + "activity-title_view_ui-activity-title-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");
            WebTestRequest request159 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            request159.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request159.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request159;
            request159 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_buckets_view_ui-activity-buckets-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");
            WebTestRequest request160 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-view.html"));
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request160;
            request160 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_related_view_ui-activity-related-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_1");
            WebTestRequest request161 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request161.Method = "OPTIONS";
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request161;
            request161 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_1");

            webTest.BeginTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");
            WebTestRequest request162 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/ui-list-view.html"));
            request162.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request162.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request162;
            request162 = null;
            webTest.EndTransaction(WebRequestPrefix + "en-GB__ui_list_view_ui-list-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");
            WebTestRequest request163 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request163;
            request163 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-headers.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");
            WebTestRequest request164 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request164;
            request164 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_activity_actions_view_ui-actions-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");
            WebTestRequest request165 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request165;
            request165 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-addnew.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");
            WebTestRequest request166 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request166;
            request166 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-query.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");
            WebTestRequest request167 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request167;
            request167 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-navigation.html");

            webTest.BeginTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");
            WebTestRequest request168 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request168;
            request168 = null;
            webTest.EndTransaction(WebRequestPrefix + "ui_list_view_partials_ui-list-view-filters.html");

            webTest.BeginTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");
            WebTestRequest request169 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            request169.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request169.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request169;
            request169 = null;
            webTest.EndTransaction(WebRequestPrefix + "list_view_partials_ui-list-view-pagination.html");

            webTest.BeginTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html");
            WebTestRequest request170 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request170;
            request170 = null;
            webTest.EndTransaction(WebRequestPrefix + "related_view_ui-activity-related-item-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");
            WebTestRequest request171 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request171;
            request171 = null;
            webTest.EndTransaction(WebRequestPrefix + "actions_view_ui-actions-notifications-view.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");
            WebTestRequest request172 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request172;
            request172 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");
            WebTestRequest request173 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
                    "ed.html"));
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request173;
            request173 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-secondaries-stack");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-actions-view-laterals.html");
            WebTestRequest request174 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/partials/ui-actions-view-laterals.html"));
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request174;
            request174 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-actions-view-laterals.html");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_2");
            WebTestRequest request175 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request175.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request175.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request175.QueryStringParameters.Add("asc", "true", false, false);
            request175.QueryStringParameters.Add("limit", "20", false, false);
            request175.QueryStringParameters.Add("offset", "0", false, false);
            request175.QueryStringParameters.Add("orderBy", "name", false, false);
            yield return request175;
            request175 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_2");

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_timeline");
            WebTestRequest request176 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/timeline"));
            request176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request176.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request176;
            request176 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_timeline");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");
            WebTestRequest request177 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            request177.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request177.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request177;
            request177 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-record.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");
            WebTestRequest request178 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            request178.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request178.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request178;
            request178 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_partials_ui-list-view-record-actions.html");

            webTest.BeginTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");
            WebTestRequest request179 = new WebTestRequest((webTest.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request179;
            request179 = null;
            webTest.EndTransaction(WebRequestPrefix + "view_flex-columns_ui-list-view-flex-column.html");

            webTest.EndTransaction(WebBTPrefix + "GoToCustomers");
            #endregion

            #region EC_ExportToCSV
            webTest.BeginTransaction(WebBTPrefix + "ExportToCSV");

            WebRequestPrefix = "ETE_";

            webTest.BeginTransaction(WebRequestPrefix + "api_sales_customers_export");
            WebTestRequest request181 = new WebTestRequest((webTest.Context["AccountingURL"].ToString() + "/api/sales/customers/export"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", (webTest.Context["AccountingURL"].ToString() + "/UI/")));
            request181.QueryStringParameters.Add("fileType", "csv", false, false);
            yield return request181;
            request181 = null;
            webTest.EndTransaction(WebRequestPrefix + "api_sales_customers_export");



            webTest.EndTransaction(WebBTPrefix + "ExportToCSV");
            #endregion

            if ((Convert.ToInt32(webTest.Context["iterationNo"])% Convert.ToInt32(webTest.Context["maxiterationNo"])) ==0)
            {
                foreach (var request in webTest.Logout(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "User Logout: " + threadData.UserName + " LogOutTime: " + DateTime.Now + "\r\n");
                Thread.Sleep(2000);
            }
        }
        
    }
    public class ExportCustomers_A : WebTest
    {
        ExportCustomers _ExportCustomers = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public ExportCustomers_A()
        {
            if (_ExportCustomers == null)
                _ExportCustomers = new ExportCustomers(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext= this._textContext;
            return _ExportCustomers.GetRequestEnumerator(TwinfieldDBTenant.A, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class ExportCustomers_B : WebTest
    {
        ExportCustomers _ExportCustomers = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public ExportCustomers_B()
        {
            if (_ExportCustomers == null)
                _ExportCustomers = new ExportCustomers(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _ExportCustomers.GetRequestEnumerator(TwinfieldDBTenant.B, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class ExportCustomers_C : WebTest
    {
        ExportCustomers _ExportCustomers = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public ExportCustomers_C()
        {
            if (_ExportCustomers == null)
                _ExportCustomers = new ExportCustomers(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _ExportCustomers.GetRequestEnumerator(TwinfieldDBTenant.C, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class ExportCustomers_D : WebTest
    {
        ExportCustomers _ExportCustomers = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public ExportCustomers_D()
        {
            if (_ExportCustomers == null)
                _ExportCustomers = new ExportCustomers(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _ExportCustomers.GetRequestEnumerator(TwinfieldDBTenant.D, Context.WebTestUserId.ToString(), objPlugin);
        }
    }

    public class ExportCustomers_E : WebTest
    {
        ExportCustomers _ExportCustomers = null;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();
        private WebTestContext _textContext;
        public ExportCustomers_E()
        {
            if (_ExportCustomers == null)
                _ExportCustomers = new ExportCustomers(this);


            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            _textContext = this.Context;

            this.PreWebTest += TwinfieldWebLoadTestPlugin.PreWebTestEvent;
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            _textContext = this._textContext;
            return _ExportCustomers.GetRequestEnumerator(TwinfieldDBTenant.E, Context.WebTestUserId.ToString(), objPlugin);
        }
    }
}
