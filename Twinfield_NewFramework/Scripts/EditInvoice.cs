//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twinfield_NewFramework
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using Microsoft.VisualStudio.TestTools.LoadTesting;
    //using MicrosoftServicesTestLabs.Monitor.VSTSUnitTest;
    using System.Drawing;
    using System.Threading;
    using System.Data;

    //[DeploymentItem("Inputdata\\InputData_Edit.csv")]
    //[DataSource("DataSource1", "Microsoft.VisualStudio.TestTools.DataSource.CSV", "|DataDirectory|\\InputData_Edit.csv", Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.DoNotMoveCursor, Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns, "InputData_Edit#csv")]
    //[DataBinding("DataSource1", "InputData_Edit#csv", "username", "DataSource1.InputData_Edit#csv.username")]
    //[DataBinding("DataSource1", "InputData_Edit#csv", "password", "DataSource1.InputData_Edit#csv.password")]
    //[DataBinding("DataSource1", "InputData_Edit#csv", "CompanyID", "DataSource1.InputData_Edit#csv.CompanyID")]
    //[DataBinding("DataSource1", "InputData_Edit#csv", "SelectCustomer", "DataSource1.InputData_Edit#csv.SelectCustomer")]
    public class EditInvoice : WebTest
    {
        private Dictionary<string, string> localDictionary;
        WebTestRequestPlugin objPlugin = new WebTestRequestPlugin();    //object of webTesRequestPlugin class to access the variables uniquely in each thread.
        private InputTableRecord testRecord;
        public Object assemblyinitializeLock = new Object();
        private WebTestContext _textContext;
        private object virtualuserId;
        private object doLogin;

        public EditInvoice()
        {
            this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
            this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
            this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.StopOnError = true;
            this.PreWebTest += new EventHandler<PreWebTestEventArgs>(PreWebTestEvent);
            this.PreRequest += objPlugin.Test_PreRequest;
            this.PostRequest += objPlugin.Test_PostRequest;
            _textContext = this.Context;
        }

        public WebTestContext TestContext
        {
            get { return _textContext; }

            set { _textContext = value; }
        }
        private void PreWebTestEvent(object sender, PreWebTestEventArgs e)
        {
            if (!AssemblyLoad.isInitialized)
            {
                lock (assemblyinitializeLock)
                {
                    if (!AssemblyLoad.isInitialized)
                    {
                        //comment while debugging thats safe
                        AssemblyLoad.AssemblyInitWeb(_textContext);
                        this.Context.Add("LoginMain", AssemblyLoad.LoginMain);
                        this.Context.Add("AccountingURL", AssemblyLoad.AccountingURL);
                        this.Context.Add("TwfcndURL", AssemblyLoad.TwfcndURL);
                    }

                    AssemblyLoad.isInitialized = true;
                }
            }
        }
        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            var WebRequestPrefix = TwinfieldScenarioPrefix.EI;
            _textContext.TryGetValue("doLogin", out doLogin);
            _textContext.TryGetValue("UserId", out virtualuserId);
            SharedThreadData threadData;

            #region DoLogin
            if (Convert.ToBoolean(doLogin))
            {
                this.Context.CookieContainer = new System.Net.CookieContainer();

                try
                {
                    localDictionary = CustomDS.Instance.GetNextRowTwinfield(TwinfieldScenarioName.EditInvoice);

                    threadData = new SharedThreadData(Convert.ToInt32(virtualuserId), this.TestContext);
                    threadData.UserName = localDictionary["UserName"];
                    threadData.Tenant = localDictionary["Tenant"];
                    threadData.CustomerName = localDictionary["CustomerName"];
                    threadData.hasFullAccess = localDictionary["hasFullAccess"];
                    threadData.Password = AssemblyLoad.Password;
                    CustomDS.Instance.SaveEditInvoiceUserDataWeb(Convert.ToInt32(virtualuserId), threadData);

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not fetched for:" + TwinfieldScenarioName.EditInvoice);
                    throw new Exception("Error in reading data for " + TwinfieldScenarioName.EditInvoice + " : " + ex.Message);

                }

                foreach (var request in this.LaunchLogin(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "Create Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
                CustomDS.Instance.SaveEditInvoiceUserDataWeb(Convert.ToInt32(virtualuserId), threadData);
                Logger.WriteGeneralLog("Edit Invoice : Vuser - " + Convert.ToInt32(virtualuserId).ToString() + " Logged In");
            }
            else
            {
                try
                {
                    threadData = CustomDS.Instance.GetEditInvoiceUserData_Web(Convert.ToInt32(virtualuserId));

                }
                catch (Exception ex)
                {

                    Logger.WriteGeneralLog("Input Data not saved for :" + TwinfieldScenarioName.EditInvoice);
                    throw new Exception("Error in getting data for " + TwinfieldScenarioName.EditInvoice + " : " + ex.Message);

                }
            }
            #endregion DoLogin

            //RTMonitor.Write(Color.Green, "Edit Invoice Login User: " + threadData.UserName + "with iteration no :" + threadData.iterationCount + " LoginTime: " + DateTime.Now + "\r\n");
            #region SalesTabClick
            this.BeginTransaction("EI_EISTC_SalesTabClick");

            this.BeginTransaction("sales_sales.html");
            WebTestRequest request134 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/sales/sales.html"));
            request134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request134.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request134;
            request134 = null;
            this.EndTransaction("sales_sales.html");

            this.BeginTransaction("api_sales_invoices");
            WebTestRequest request135 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            request135.Method = "OPTIONS";
            request135.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request135.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request135Body = new StringHttpBody();
            request135Body.ContentType = "";
            request135Body.InsertByteOrderMark = false;
            request135Body.BodyString = "";
            request135.Body = request135Body;
            yield return request135;
            request135 = null;
            this.EndTransaction("api_sales_invoices");

            //Found in Build-16005
            this.BeginTransaction("api_sales_revenuetypes");
            WebTestRequest request1380 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/revenuetypes"));
            request1380.Method = "OPTIONS";
            request1380.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request1380.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request1380Body = new StringHttpBody();
            request1380Body.ContentType = "";
            request1380Body.InsertByteOrderMark = false;
            request1380Body.BodyString = "";
            request1380.Body = request1380Body;
            yield return request1380;
            request1380 = null;
            this.EndTransaction("api_sales_revenuetypes");
            //

            this.BeginTransaction("components_framework_desktop_view_cr-basic-group");
            WebTestRequest request136 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_components/framework/desktop/view/cr-basic-group-tile.html"));
            request136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request136.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request136;
            request136 = null;
            this.EndTransaction("components_framework_desktop_view_cr-basic-group");

            this.BeginTransaction("components_framework_desktop_view_cr-divider");
            WebTestRequest request137 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_components/framework/desktop/view/cr-divider-tile.html"));
            request137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request137.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request137;
            request137 = null;
            this.EndTransaction("components_framework_desktop_view_cr-divider");

            this.BeginTransaction("components_framework_desktop_view_cr-dashboard");
            WebTestRequest request138 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_components/framework/desktop/view/cr-dashboard-sub-section-tile.htm" +
                    "l"));
            request138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request138.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request138;
            request138 = null;
            this.EndTransaction("components_framework_desktop_view_cr-dashboard");

            this.BeginTransaction("api_sales_customers");
            WebTestRequest request139 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/customers"));
            request139.Method = "OPTIONS";
            request139.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request139.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request139Body = new StringHttpBody();
            request139Body.ContentType = "";
            request139Body.InsertByteOrderMark = false;
            request139Body.BodyString = "";
            request139.Body = request139Body;
            yield return request139;
            request139 = null;
            this.EndTransaction("api_sales_customers");
            
            this.BeginTransaction("desktop_view_cr-insight-tile-view");
            WebTestRequest request142 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_components/framework/desktop/view/cr-insight-tile-view.html"));
            request142.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request142.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request142;
            request142 = null;
            this.EndTransaction("desktop_view_cr-insight-tile-view");

            this.BeginTransaction("desktop_view_cr-links-tile");
            WebTestRequest request143 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_components/framework/desktop/view/cr-links-tile.html"));
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
			request143.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request143;
			request143 = null;
			this.EndTransaction("desktop_view_cr-links-tile");


			//Added as observed in trace - Samiksha 08/08
			this.BeginTransaction("api_sales_tasks_1");
			WebTestRequest request144 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/tasks"));
			request144.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request144.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request144;
			request144 = null;
			this.EndTransaction("api_sales_tasks_1");

			this.BeginTransaction("api_sales_invoices_overview");
			WebTestRequest request140 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
			request140.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request140.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request140;
			request140 = null;
			this.EndTransaction("api_sales_invoices_overview");

			this.BeginTransaction("api_sales_invoices_overview_1");
			WebTestRequest request141 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
			request141.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request141.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request141;
			request141 = null;
			this.EndTransaction("api_sales_invoices_overview_1");

			this.EndTransaction("EI_EISTC_SalesTabClick");
			#endregion
			Thread.Sleep(2000);

			#region Invoice Click
			this.BeginTransaction("EI_EIIC_InvoiceClick");

			//Uncommented as observed in trace
			//this.BeginTransaction("api_notifications_3");
			//WebTestRequest request145 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/notifications"));
			//request145.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			//request145.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			//request145.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
			//yield return request145;
			//request145 = null;
			//this.EndTransaction("api_notifications_3");

			//this.BeginTransaction("UI_1");
			//WebTestRequest request146 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/UI/"));
			//request146.ExpectedResponseUrl = (this.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices");
			//yield return request146;
			//request146 = null;
			//this.EndTransaction("UI_1");


			//Added as found in trace Samiksha 08/08
			this.BeginTransaction("api_sales_invoices_overview_2");
			WebTestRequest request1400 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
			request1400.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request1400.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request1400;
			request1400 = null;
			this.EndTransaction("api_sales_invoices_overview_2");

			this.BeginTransaction("sales_invoicing_listing_ui-invoice-listing");
			WebTestRequest request147 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/sales/invoicing/listing/ui-invoice-listing.html"));
			request147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request147;
            request147 = null;
            this.EndTransaction("sales_invoicing_listing_ui-invoice-listing");

            this.BeginTransaction("ui_activity_activity-title_view");
            WebTestRequest request148 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/activity/activity-title/view/ui-activity-title-view.html"));
            request148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request148.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request148;
            request148 = null;
            this.EndTransaction("ui_activity_activity-title_view");

            this.BeginTransaction("ui_buckets_view_ui-activity");
            WebTestRequest request149 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/buckets/view/ui-activity-buckets-view.html"));
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request149;
            request149 = null;
            this.EndTransaction("ui_buckets_view_ui-activity");

            this.BeginTransaction("ui_related_view_ui-activity");
            WebTestRequest request150 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/related/view/ui-activity-related-view.html"));
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request150;
            request150 = null;
            this.EndTransaction("ui_related_view_ui-activity");

            this.BeginTransaction("api_creditmanagement");
            WebTestRequest request151 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request151;
            request151 = null;
            this.EndTransaction("api_creditmanagement");

            this.BeginTransaction("api_creditmanagement_1");
            WebTestRequest request152 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/creditmanagement"));
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request152;
            request152 = null;
            this.EndTransaction("api_creditmanagement_1");

            this.BeginTransaction("api_sales_invoices_timeframemanagement");
            WebTestRequest request153 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement"));
            request153.Method = "OPTIONS";
            request153.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request153.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request153Body = new StringHttpBody();
            request153Body.ContentType = "";
            request153Body.InsertByteOrderMark = false;
            request153Body.BodyString = "";
            request153.Body = request153Body;
            yield return request153;
            request153 = null;
            this.EndTransaction("api_sales_invoices_timeframemanagement");

            this.BeginTransaction("api_sales_invoices_settings_1");
            WebTestRequest request154 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            request154.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request154.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request154;
            request154 = null;
            this.EndTransaction("api_sales_invoices_settings_1");

            this.BeginTransaction("ui_list_view_ui-list-view.html");
            WebTestRequest request155 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/ui-list-view.html"));
            request155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
			request155.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request155;
			request155 = null;
			this.EndTransaction("ui_list_view_ui-list-view.html");

			//Added as observed in trace - Samiksha 08/08
			this.BeginTransaction("api_sales_tasks_2");
			WebTestRequest request159 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/tasks"));
			request159.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request159.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request159;
			request159 = null;
			this.EndTransaction("api_sales_tasks_2");

			this.BeginTransaction("api_sales_invoices_overview_2");
			WebTestRequest request156 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
			request156.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request156.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request156;
			request156 = null;
			this.EndTransaction("api_sales_invoices_overview_2");

			this.BeginTransaction("ui_buckets_view_ui-buckets-carousel");
			WebTestRequest request157 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/buckets/view/ui-buckets-carousel.html"));
			request157.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, *;version=latest"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request157;
            request157 = null;
            this.EndTransaction("ui_buckets_view_ui-buckets-carousel");

            this.BeginTransaction("ui_buckets_view_ui-activity-bucket-view");
            WebTestRequest request158 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/buckets/view/ui-activity-bucket-view.html"));
            request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request158.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request158;
            request158 = null;
            this.EndTransaction("ui_buckets_view_ui-activity-bucket-view");

            this.BeginTransaction("ui_related_view_ui-activity-related");
            WebTestRequest request160 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/related/view/ui-activity-related-item-view.html"));
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request160;
            request160 = null;
            this.EndTransaction("ui_related_view_ui-activity-related");

            this.BeginTransaction("api_sales_invoices_timeframemanagement_boundaries");
            WebTestRequest request161 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request161;
            request161 = null;
            this.EndTransaction("api_sales_invoices_timeframemanagement_boundaries");


			//Commented as not found in trace Samiksha 08/08
            //this.BeginTransaction("api_sales_invoices");
            //WebTestRequest request162 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices"));
            //request162.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request162.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            //request162.QueryStringParameters.Add("asc", "false", false, false);
            //request162.QueryStringParameters.Add("limit", "20", false, false);
            //request162.QueryStringParameters.Add("offset", "0", false, false);
            //request162.QueryStringParameters.Add("orderBy", "date", false, false);
            //yield return request162;
            //request162 = null;
            //this.EndTransaction("api_sales_invoices");


            this.BeginTransaction("ui_list_view_flex-columns_ui-list-view");
            WebTestRequest request163 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-headers.html"));
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request163;
            request163 = null;
            this.EndTransaction("ui_list_view_flex-columns_ui-list-view");

            this.BeginTransaction("ui_activity_actions_view_ui-actions");
            WebTestRequest request164 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/activity/actions/view/ui-actions-view.html"));
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request164;
            request164 = null;
            this.EndTransaction("ui_activity_actions_view_ui-actions");

            this.BeginTransaction("ui_list_view_partials_ui-list-view1");
            WebTestRequest request165 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-addnew.html"));
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request165;
            request165 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view1");

            this.BeginTransaction("ui_list_view_partials_ui-list-view");
            WebTestRequest request166 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-query.html"));
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request166;
            request166 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view");

            this.BeginTransaction("ui_list_view_partials_ui-list-view");
            WebTestRequest request167 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-navigation.html"));
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request167;
            request167 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view");

            this.BeginTransaction("ui_list_view_partials_ui-list-view");
            WebTestRequest request168 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-filters.html"));
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request168;
            request168 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view");

            this.BeginTransaction("ui_list_view_partials_ui-list-view");
            WebTestRequest request169 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/ui-list-view-pagination.html"));
            request169.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request169.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request169;
            request169 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view");

            
            this.BeginTransaction("ui_activity_actions_view_ui-actions");
            WebTestRequest request170 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/activity/actions/view/ui-actions-notifications-view.html"));
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request170;
            request170 = null;
            this.EndTransaction("ui_activity_actions_view_ui-actions");

            this.BeginTransaction("ui_list_view_partials_adds_ui-list");
            WebTestRequest request171 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/partials/adds/ui-list-adds-new.html"));
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request171;
            request171 = null;
            this.EndTransaction("ui_list_view_partials_adds_ui-list");

            this.BeginTransaction("view_partials_filters_select_ui-list-inline-select-filter");
            WebTestRequest request179 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/select/ui-list-inline-select-filter.h" +
                    "tml"));
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request179;
            request179 = null;
            this.EndTransaction("view_partials_filters_select_ui-list-inline-select-filter");
            
            this.BeginTransaction("ui_list_view_partials_filters_date_ui-list");
            WebTestRequest request176 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" + threadData.BuildVersion + "/en-GB/_ui/list/view/partials/filters/date/ui-list-date-filter.html"));
            request176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request176.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request176;
            request176 = null;
            this.EndTransaction("ui_list_view_partials_filters_date_ui-list");

            this.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex");
            WebTestRequest request172 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-record.html"));
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request172;
            request172 = null;
            this.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex");

            this.BeginTransaction("ui_list_view_partials_ui-list-view-record");
            WebTestRequest request173 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/partials/ui-list-view-record-actions.html"));
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request173;
            request173 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view-record");

            this.BeginTransaction("ui_list_view_flex-columns_ui-list-view-flex");
            WebTestRequest request174 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/flex-columns/ui-list-view-flex-column.html"));
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request174;
            request174 = null;
            this.EndTransaction("ui_list_view_flex-columns_ui-list-view-flex");

            this.BeginTransaction("ui_list_view_partials_ui-list-view-record");
            WebTestRequest request175 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/list/view/partials/ui-list-view-record-indicator.html"));
            request175.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request175.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request175;
            request175 = null;
            this.EndTransaction("ui_list_view_partials_ui-list-view-record");


            this.EndTransaction("EI_EIIC_InvoiceClick");
            #endregion
            Thread.Sleep(2000);

            #region Filters Overdue
            this.BeginTransaction("EI_EIFO_FiltersOverdue");

			//this.BeginTransaction("UI_2");
			//WebTestRequest request177 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/UI/"));
			//request177.ExpectedResponseUrl = (this.Context["AccountingURL"].ToString() + "/UI/#/Sales/Invoices/Overdue");
			//yield return request177;
			//request177 = null;
			//this.EndTransaction("UI_2");

			//Added as found in trace - Samiksha 08/08
			this.BeginTransaction("api_sales_tasks_4");
			WebTestRequest request1590 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/tasks"));
			request1590.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request1590.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request1590;
			request1590 = null;
			this.EndTransaction("api_sales_tasks_4");

			this.BeginTransaction("api_sales_invoices_timeframemanagement_boundaries_1");
            WebTestRequest request178 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/timeframemanagement/boundaries"));
            request178.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request178.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request178;
            request178 = null;
            this.EndTransaction("api_sales_invoices_timeframemanagement_boundaries_1");

            this.BeginTransaction("api_sales_invoices_settings_2");
            WebTestRequest reques179 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/settings"));
            reques179.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            reques179.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return reques179;
            reques179 = null;
            this.EndTransaction("api_sales_invoices_settings_2");

            this.BeginTransaction("api_sales_invoices_overview_3");
            WebTestRequest request180 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request180.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request180.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request180;
            request180 = null;
            this.EndTransaction("api_sales_invoices_overview_3");

            this.BeginTransaction("view_partials_ui-actions-view-primaries.html");
            WebTestRequest request181 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/activity/actions/view/partials/ui-actions-view-primaries.html"));
            request181.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request181;
            request181 = null;
            this.EndTransaction("view_partials_ui-actions-view-primaries.html");

            this.BeginTransaction("view_partials_ui-actions-view-secondaries.html");
            WebTestRequest request182 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries.html"));
            request182.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request182.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request182;
            request182 = null;
            this.EndTransaction("view_partials_ui-actions-view-secondaries.html");

            this.BeginTransaction("view_partials_ui-actions-view-secondaries-stack");
            WebTestRequest request183 = new WebTestRequest((this.Context["TwfcndURL"].ToString() + "/" +threadData.BuildVersion+"/en-GB/_ui/activity/actions/view/partials/ui-actions-view-secondaries-stack" +
                    "ed.html"));
            request183.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*;version=latest"));
            request183.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request183;
            request183 = null;
            this.EndTransaction("view_partials_ui-actions-view-secondaries-stack");

			//Added as found in trace - Samiksha 08/08
			this.BeginTransaction("api_sales_tasks_3");
			WebTestRequest request184 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/tasks"));
			request184.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
			request184.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
			yield return request184;
			request184 = null;
			this.EndTransaction("api_sales_tasks_3");

			this.BeginTransaction("api_sales_invoices_overdue");
            WebTestRequest request185 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request185.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request185.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request185.QueryStringParameters.Add("asc", "false", false, false);
            request185.QueryStringParameters.Add("limit", "20", false, false);
            request185.QueryStringParameters.Add("offset", "0", false, false);
            request185.QueryStringParameters.Add("orderBy", "date", false, false);
            yield return request185;
            request185 = null;
            this.EndTransaction("api_sales_invoices_overdue");

            //var InvoiceNumberList = JsonConvert.DeserializeObject<RootObject>(LastResponse.BodyString);
            //var InvoiceNum = InvoiceNumberList.items.Random();
            //var InvoiceNumber = InvoiceNum.number.ToString();

            #region Search Customer user want to delete.
            string CustomerName = threadData.CustomerName;
            char[] splitCustomer = CustomerName.ToCharArray();
            string FirstLetter = splitCustomer[0].ToString();
            string SecondLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString();
            string ThirdLetter = splitCustomer[0].ToString() + splitCustomer[1].ToString() + splitCustomer[2].ToString();

            string CustomerNameEncode = Uri.EscapeDataString(CustomerName); //Server reads encoded form of customer name.
            #endregion

            this.EndTransaction("EI_EIFO_FiltersOverdue");
            #endregion
            Thread.Sleep(2000);

            #region Search Invoice number
            this.BeginTransaction("EI_EISIN_SearchInvoiceNumber");

            this.BeginTransaction("api_sales_invoices_overdue_1");
            WebTestRequest request186 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request186.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request186.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request186.QueryStringParameters.Add("asc", "false", false, false);
            request186.QueryStringParameters.Add("limit", "20", false, false);
            request186.QueryStringParameters.Add("offset", "0", false, false);
            request186.QueryStringParameters.Add("orderBy", "date", false, false);
            request186.QueryStringParameters.Add("searchPattern", FirstLetter, false, false);
            yield return request186;
            request186 = null;
            this.EndTransaction("api_sales_invoices_overdue_1");

            this.BeginTransaction("api_sales_invoices_overdue_2");
            WebTestRequest request187 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request187.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request187.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request187.QueryStringParameters.Add("asc", "false", false, false);
            request187.QueryStringParameters.Add("limit", "20", false, false);
            request187.QueryStringParameters.Add("offset", "0", false, false);
            request187.QueryStringParameters.Add("orderBy", "date", false, false);
            request187.QueryStringParameters.Add("searchPattern", SecondLetter, false, false);
            yield return request187;
            request187 = null;
            this.EndTransaction("api_sales_invoices_overdue_2");

            this.BeginTransaction("api_sales_invoices_overdue_3");
            WebTestRequest request188 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request188.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request188.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request188.QueryStringParameters.Add("asc", "false", false, false);
            request188.QueryStringParameters.Add("limit", "20", false, false);
            request188.QueryStringParameters.Add("offset", "0", false, false);
            request188.QueryStringParameters.Add("orderBy", "date", false, false);
            request188.QueryStringParameters.Add("searchPattern", ThirdLetter, false, false);
            yield return request188;
            request188 = null;
            this.EndTransaction("api_sales_invoices_overdue_3");

            this.BeginTransaction("api_sales_invoices_overdue_4");
            WebTestRequest request189 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request189.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request189.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request189.QueryStringParameters.Add("asc", "false", false, false);
            request189.QueryStringParameters.Add("limit", "20", false, false);
            request189.QueryStringParameters.Add("offset", "0", false, false);
            request189.QueryStringParameters.Add("orderBy", "date", false, false);
            request189.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request189;
            request189 = null;
            this.EndTransaction("api_sales_invoices_overdue_4");

            #region Deleted User Details
            var SelectCustList = JsonConvert.DeserializeObject<RootObject>(LastResponse.BodyString, new JsonSerializerSettings() {MissingMemberHandling=MissingMemberHandling.Ignore});
            var DeletedUserList = SelectCustList.items.Random();
            var DeletedUserID = DeletedUserList.id.ToString();
            var DeletedUserAmount = DeletedUserList.total.ToString();
            var version = DeletedUserList.version.ToString();
            #endregion

            //this.BeginTransaction("api_notifications_4");
            //WebTestRequest request190 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request190.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request190.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            //request190.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request190;
            //request190 = null;
            //this.EndTransaction("api_notifications_4");

            this.EndTransaction("EI_EISIN_SearchInvoiceNumber");
            #endregion
            Thread.Sleep(2000);

            #region Mark as Paid
            this.BeginTransaction("EI_EIMP_MarkAsPaid");

            this.BeginTransaction("api_sales_invoices_paymentmark");
            WebTestRequest request191 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/" + DeletedUserID + "/paymentmarks"));
            request191.Method = "POST";
            request191.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request191.Headers.Add(new WebTestRequestHeader("If-Match", "\""+version+"\""));
            request191.Headers.Add(new WebTestRequestHeader("If-Match", "\"6\""));
            request191.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            StringHttpBody request191Body = new StringHttpBody();
            request191Body.ContentType = "application/json;charset=utf-8";
            request191Body.InsertByteOrderMark = false;
            request191Body.BodyString = "{\"amount\":" + DeletedUserAmount + ",\"type\":\"Payment\"}";
            request191.Body = request191Body;
            yield return request191;
            request191 = null;
            this.EndTransaction("api_sales_invoices_paymentmark");

            this.BeginTransaction("api_sales_invoices_overview_4");
            WebTestRequest request192 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overview"));
            request192.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request192.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            yield return request192;
            request192 = null;
            this.EndTransaction("api_sales_invoices_overview_4");

            this.BeginTransaction("api_sales_invoices_overdue_2");
            WebTestRequest request193 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/sales/invoices/overdue"));
            request193.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            request193.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            request193.QueryStringParameters.Add("asc", "false", false, false);
            request193.QueryStringParameters.Add("limit", "20", false, false);
            request193.QueryStringParameters.Add("offset", "0", false, false);
            request193.QueryStringParameters.Add("orderBy", "date", false, false);
            request193.QueryStringParameters.Add("searchPattern", CustomerNameEncode, false, false);
            yield return request193;
            request193 = null;
            this.EndTransaction("api_sales_invoices_overdue_2");

            //this.BeginTransaction("api_notifications_5");
            //WebTestRequest request194 = new WebTestRequest((this.Context["AccountingURL"].ToString() + "/api/notifications"));
            //request194.Headers.Add(new WebTestRequestHeader("Accept", "application/vnd.twinfield+json;version=latest"));
            //request194.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["AccountingURL"].ToString() + "/UI/")));
            //request194.QueryStringParameters.Add("since", threadData.CreatedDate, false, false);
            //yield return request194;
            //request194 = null;
            //this.EndTransaction("api_notifications_5");

            this.EndTransaction("EI_EIMP_MarkAsPaid");
            #endregion
            Thread.Sleep(2000);

            // RTMonitor.Write(Color.Green, "Edit Invoice Iteration End: " + threadData.UserName +"\r\n");

            if ((Convert.ToInt32(this.Context["iterationNo"]) % Convert.ToInt32(this.Context["maxiterationNo"])) == 0)
            {
                foreach (var request in this.Logout(threadData, objPlugin)) yield return request;
                //RTMonitor.Write(Color.Green, "User Logout: " + threadData.UserName + " LogOutTime: " + DateTime.Now + "\r\n");
                Thread.Sleep(2000);
            }
        }
    }
}
